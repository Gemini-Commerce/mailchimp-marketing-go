openapi: 3.0.1
info:
  title: Mailchimp Marketing API
  contact:
    name: Mailchimp API Support
    email: apihelp@mailchimp.com
  version: 3.0.76
  x-permalink: https://github.com/mailchimp/mailchimp-client-lib-codegen/blob/main/spec/marketing.json
externalDocs:
  description: Learn more with the full Mailchimp API documentation.
  url: https://mailchimp.com/developer/marketing/
servers:
- url: https://server.api.mailchimp.com/3.0
security:
- basicAuth: []
paths:
  /:
    get:
      tags:
      - root
      summary: List api root resources
      description: Get links to all other resources available in the API.
      operationId: getRoot
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API Root'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/API Root'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_root
        methodNameCamel: getRoot
  /activity-feed/chimp-chatter:
    get:
      tags:
      - activityFeed
      summary: Get latest chimp chatter
      description: Return the Chimp Chatter for this account ordered by most recent.
      operationId: getActivityFeedChimpChatter
      parameters:
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ChimpChatter Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_chimp_chatter
        methodNameCamel: getChimpChatter
  /account-exports:
    get:
      tags:
      - accountExports
      summary: List account exports
      description: Get a list of account exports for a given account.
      operationId: getAccountExports
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list_account_exports
        methodNameCamel: listAccountExports
    post:
      tags:
      - accountExports
      summary: Add export
      description: Create a new account export in your Mailchimp account.
      operationId: postAccountExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create an account export'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_account_export
        methodNameCamel: createAccountExport
      x-codegen-request-body-name: body
  /account-exports/{export_id}:
    get:
      tags:
      - accountExport
      summary: Get account export info
      description: Get information about a specific account export.
      operationId: getAccountExportId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: export_id
        in: path
        description: The unique id for the account export.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Export ID
        x-title: Export ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_account_exports
        methodNameCamel: getAccountExports
  /authorized-apps:
    get:
      tags:
      - authorizedApps
      summary: List authorized apps
      description: "Get a list of an account's registered, connected applications."
      operationId: getAuthorizedApps
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
  /authorized-apps/{app_id}:
    get:
      tags:
      - authorizedApps
      summary: Get authorized app info
      description: Get information about a specific authorized application.
      operationId: getAuthorizedAppsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: app_id
        in: path
        description: The unique id for the connected authorized application.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: App ID
        x-title: App ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /automations:
    get:
      tags:
      - automations
      summary: List automations
      description: Get a summary of an account's classic automations.
      operationId: getAutomations
      parameters:
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: before_create_time
        in: query
        description: "Restrict the response to automations created before this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Before Create Time
        x-title: Before Create Time
      - name: since_create_time
        in: query
        description: "Restrict the response to automations created after this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Since Create Time
        x-title: Since Create Time
      - name: before_start_time
        in: query
        description: "Restrict the response to automations started before this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Before Start Time
        x-title: Before Start Time
      - name: since_start_time
        in: query
        description: "Restrict the response to automations started after this time.\
          \ Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Since Start Time
        x-title: Since Start Time
      - name: status
        in: query
        description: Restrict the results to automations with the specified status.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - save
          - paused
          - sending
          x-title: Status
        x-title: Status
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      tags:
      - automations
      summary: Add automation
      description: Create a new classic automation in your Mailchimp account.
      operationId: postAutomations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Automation Workflow'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation Workflow_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation Workflow_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /automations/{workflow_id}:
    get:
      tags:
      - automations
      summary: Get automation info
      description: Get a summary of an individual classic automation workflow's settings
        and content. The `trigger_settings` object returns information for the first
        email in the workflow.
      operationId: getAutomationsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation Workflow_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation Workflow_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /automations/{workflow_id}/actions/pause-all-emails:
    post:
      tags:
      - automations
      summary: Pause automation emails
      description: Pause all emails in a specific classic automation workflow.
      operationId: postAutomationsIdActionsPauseAllEmails
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: pause_all_emails
        methodNameCamel: pauseAllEmails
  /automations/{workflow_id}/actions/start-all-emails:
    post:
      tags:
      - automations
      summary: Start automation emails
      description: Start all emails in a classic automation workflow.
      operationId: postAutomationsIdActionsStartAllEmails
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: start_all_emails
        methodNameCamel: startAllEmails
  /automations/{workflow_id}/actions/archive:
    post:
      tags:
      - automations
      summary: Archive automation
      description: "Archiving will permanently end your automation and keep the report\
        \ data. You’ll be able to replicate your archived automation, but you can’\
        t restart it."
      operationId: archiveAutomations
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: archive
        methodNameCamel: archive
  /automations/{workflow_id}/emails:
    get:
      tags:
      - automations
      summary: List automated emails
      description: Get a summary of the emails in a classic automation workflow.
      operationId: getAutomationsIdEmails
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation Emails'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation Emails'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list_all_workflow_emails
        methodNameCamel: listAllWorkflowEmails
  /automations/{workflow_id}/emails/{workflow_email_id}:
    get:
      tags:
      - automations
      summary: Get workflow email info
      description: Get information about an individual classic automation workflow
        email.
      operationId: getAutomationsIdEmailsId
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workflow_email_id
        in: path
        description: The unique id for the Automation workflow email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation Workflow Email'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation Workflow Email'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_workflow_email
        methodNameCamel: getWorkflowEmail
    delete:
      tags:
      - automations
      summary: Delete workflow email
      description: "Removes an individual classic automation workflow email. Emails\
        \ from certain workflow types, including the Abandoned Cart Email (abandonedCart)\
        \ and Product Retargeting Email (abandonedBrowse) Workflows, cannot be deleted."
      operationId: deleteAutomationsIdEmailsId
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workflow_email_id
        in: path
        description: The unique id for the Automation workflow email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_workflow_email
        methodNameCamel: deleteWorkflowEmail
    patch:
      tags:
      - automations
      summary: Update workflow email
      description: "Update settings for a classic automation workflow email.  Only\
        \ works with workflows of type: abandonedBrowse, abandonedCart, emailFollowup,\
        \ or singleWelcome."
      operationId: patchAutomationEmailWorkflowId
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workflow_email_id
        in: path
        description: The unique id for the Automation workflow email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update information about a specific workflow
                email'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation Workflow Email'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Automation Workflow Email'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: update_workflow_email
        methodNameCamel: updateWorkflowEmail
      x-codegen-request-body-name: body
  /automations/{workflow_id}/emails/{workflow_email_id}/queue:
    get:
      tags:
      - automations
      summary: List automated email subscribers
      description: Get information about a classic automation email queue.
      operationId: getAutomationsIdEmailsIdQueue
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workflow_email_id
        in: path
        description: The unique id for the Automation workflow email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_workflow_email_subscriber_queue
        methodNameCamel: getWorkflowEmailSubscriberQueue
    post:
      tags:
      - automations
      summary: Add subscriber to workflow email
      description: "Manually add a subscriber to a workflow, bypassing the default\
        \ trigger settings. You can also use this endpoint to trigger a series of\
        \ automated emails in an API 3.0 workflow type."
      operationId: postAutomationsIdEmailsIdQueue
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workflow_email_id
        in: path
        description: The unique id for the Automation workflow email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber in Automation Queue'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber in Automation Queue_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber in Automation Queue_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_workflow_email_subscriber
        methodNameCamel: addWorkflowEmailSubscriber
      x-codegen-request-body-name: body
  /automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}:
    get:
      tags:
      - automations
      summary: Get automated email subscriber
      description: Get information about a specific subscriber in a classic automation
        email queue.
      operationId: getAutomationsIdEmailsIdQueueId
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workflow_email_id
        in: path
        description: The unique id for the Automation workflow email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber in Automation Queue_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber in Automation Queue_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_workflow_email_subscriber
        methodNameCamel: getWorkflowEmailSubscriber
  /automations/{workflow_id}/emails/{workflow_email_id}/actions/pause:
    post:
      tags:
      - automations
      summary: Pause automated email
      description: Pause an automated email.
      operationId: postAutomationsIdEmailsIdActionsPause
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workflow_email_id
        in: path
        description: The unique id for the Automation workflow email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: pause_workflow_email
        methodNameCamel: pauseWorkflowEmail
  /automations/{workflow_id}/emails/{workflow_email_id}/actions/start:
    post:
      tags:
      - automations
      summary: Start automated email
      description: Start an automated email.
      operationId: postAutomationsIdEmailsIdActionsStart
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workflow_email_id
        in: path
        description: The unique id for the Automation workflow email.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: start_workflow_email
        methodNameCamel: startWorkflowEmail
  /automations/{workflow_id}/removed-subscribers:
    get:
      tags:
      - automations
      summary: List subscribers removed from workflow
      description: Get information about subscribers who were removed from a classic
        automation workflow.
      operationId: getAutomationsIdRemovedSubscribers
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Removed Subscribers'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Removed Subscribers'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list_workflow_email_subscribers_removed
        methodNameCamel: listWorkflowEmailSubscribersRemoved
    post:
      tags:
      - automations
      summary: Remove subscriber from workflow
      description: "Remove a subscriber from a specific classic automation workflow.\
        \ You can remove a subscriber at any point in an automation workflow, regardless\
        \ of how many emails they've been sent from that workflow. Once they're removed,\
        \ they can never be added back to the same workflow."
      operationId: postAutomationsIdRemovedSubscribers
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber in Automation Queue_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber Removed from Automation Workflow'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber Removed from Automation Workflow'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: remove_workflow_email_subscriber
        methodNameCamel: removeWorkflowEmailSubscriber
      x-codegen-request-body-name: body
  /automations/{workflow_id}/removed-subscribers/{subscriber_hash}:
    get:
      tags:
      - automations
      summary: Get subscriber removed from workflow
      description: Get information about a specific subscriber who was removed from
        a classic automation workflow.
      operationId: getAutomationsIdRemovedSubscribersId
      parameters:
      - name: workflow_id
        in: path
        description: The unique id for the Automation workflow.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber Removed from Automation Workflow'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber Removed from Automation Workflow'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_removed_workflow_email_subscriber
        methodNameCamel: getRemovedWorkflowEmailSubscriber
  /batches:
    get:
      tags:
      - batches
      summary: List batch requests
      description: Get a summary of batch requests that have been made.
      operationId: getBatches
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch Operations'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch Operations'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      tags:
      - batches
      summary: Start batch operation
      description: Begin processing a batch operations request.
      operationId: postBatches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batches_body'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: start
        methodNameCamel: start
      x-codegen-request-body-name: body
  /batches/{batch_id}:
    get:
      tags:
      - batches
      summary: Get batch operation status
      description: Get the status of a batch request.
      operationId: getBatchesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: batch_id
        in: path
        description: The unique id for the batch operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: status
        methodNameCamel: status
    delete:
      tags:
      - batches
      summary: Delete batch request
      description: "Stops a batch request from running. Since only one batch request\
        \ is run at a time, this can be used to cancel a long running request. The\
        \ results of any completed operations will not be available after this call."
      operationId: deleteBatchesId
      parameters:
      - name: batch_id
        in: path
        description: The unique id for the batch operation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_request
        methodNameCamel: deleteRequest
  /batch-webhooks:
    get:
      tags:
      - batchWebhooks
      summary: List batch webhooks
      description: Get all webhooks that have been configured for batches.
      operationId: getBatchWebhooks
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch Webhooks'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch Webhooks'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      tags:
      - batchWebhooks
      summary: Add batch webhook
      description: Configure a webhook that will fire whenever any batch request completes
        processing.  You may only have a maximum of 20 batch webhooks.
      operationId: postBatchWebhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch Webhook'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch Webhook_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch Webhook_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /batch-webhooks/{batch_webhook_id}:
    get:
      tags:
      - batchWebhooks
      summary: Get batch webhook info
      description: Get information about a specific batch webhook.
      operationId: getBatchWebhook
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: batch_webhook_id
        in: path
        description: The unique id for the batch webhook.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch Webhook_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch Webhook_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    delete:
      tags:
      - batchWebhooks
      summary: Delete batch webhook
      description: Remove a batch webhook. Webhooks will no longer be sent to the
        given URL.
      operationId: deleteBatchWebhookId
      parameters:
      - name: batch_webhook_id
        in: path
        description: The unique id for the batch webhook.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    patch:
      tags:
      - batchWebhooks
      summary: Update batch webhook
      description: Update a webhook that will fire whenever any batch request completes
        processing.
      operationId: patchBatchWebhooks
      parameters:
      - name: batch_webhook_id
        in: path
        description: The unique id for the batch webhook.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Batch Webhook_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch Webhook_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch Webhook_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update
        methodNameCamel: update
      x-codegen-request-body-name: body
  /template-folders:
    get:
      tags:
      - templateFolders
      summary: List template folders
      description: Get all folders used to organize templates.
      operationId: getTemplateFolders
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template Folders'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template Folders'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      tags:
      - templateFolders
      summary: Add template folder
      description: Create a new template folder.
      operationId: postTemplateFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template Folder'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /template-folders/{folder_id}:
    get:
      tags:
      - templateFolders
      summary: Get template folder
      description: Get information about a specific folder used to organize templates.
      operationId: getTemplateFoldersId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: folder_id
        in: path
        description: The unique id for the template folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    delete:
      tags:
      - templateFolders
      summary: Delete template folder
      description: "Delete a specific template folder, and mark all the templates\
        \ in the folder as 'unfiled'."
      operationId: deleteTemplateFoldersId
      parameters:
      - name: folder_id
        in: path
        description: The unique id for the template folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    patch:
      tags:
      - templateFolders
      summary: Update template folder
      description: Update a specific folder used to organize templates.
      operationId: patchTemplateFoldersId
      parameters:
      - name: folder_id
        in: path
        description: The unique id for the template folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template Folder_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update
        methodNameCamel: update
      x-codegen-request-body-name: body
  /campaign-folders:
    get:
      tags:
      - campaignFolders
      summary: List campaign folders
      description: Get all folders used to organize campaigns.
      operationId: getCampaignFolders
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Folders'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Folders'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      tags:
      - campaignFolders
      summary: Add campaign folder
      description: Create a new campaign folder.
      operationId: postCampaignFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign Folder'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /campaign-folders/{folder_id}:
    get:
      tags:
      - campaignFolders
      summary: Get campaign folder
      description: Get information about a specific folder used to organize campaigns.
      operationId: getCampaignFoldersId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: folder_id
        in: path
        description: The unique id for the campaign folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    delete:
      tags:
      - campaignFolders
      summary: Delete campaign folder
      description: "Delete a specific campaign folder, and mark all the campaigns\
        \ in the folder as 'unfiled'."
      operationId: deleteCampaignFoldersId
      parameters:
      - name: folder_id
        in: path
        description: The unique id for the campaign folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    patch:
      tags:
      - campaignFolders
      summary: Update campaign folder
      description: Update a specific folder used to organize campaigns.
      operationId: patchCampaignFoldersId
      parameters:
      - name: folder_id
        in: path
        description: The unique id for the campaign folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign Folder_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update
        methodNameCamel: update
      x-codegen-request-body-name: body
  /campaigns:
    get:
      tags:
      - campaigns
      summary: List campaigns
      description: Get all campaigns in an account.
      operationId: getCampaigns
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: type
        in: query
        description: The campaign type.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
          x-title: Campaign Type
        x-title: Campaign Type
      - name: status
        in: query
        description: The status of the campaign.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          x-title: Status
        x-title: Status
      - name: before_send_time
        in: query
        description: "Restrict the response to campaigns sent before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Before Send Time
        x-title: Before Send Time
      - name: since_send_time
        in: query
        description: "Restrict the response to campaigns sent after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Since Send Time
        x-title: Since Send Time
      - name: before_create_time
        in: query
        description: "Restrict the response to campaigns created before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Before Create Time
        x-title: Before Create Time
      - name: since_create_time
        in: query
        description: "Restrict the response to campaigns created after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Since Create Time
        x-title: Since Create Time
      - name: list_id
        in: query
        description: The unique id for the list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: folder_id
        in: query
        description: The unique folder id.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      - name: member_id
        in: query
        description: Retrieve campaigns sent to a particular list member. Member ID
          is The MD5 hash of the lowercase version of the list member’s email address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Member ID
        x-title: Member ID
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - create_time
          - send_time
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      tags:
      - campaigns
      summary: Add campaign
      description: Create a new Mailchimp campaign.
      operationId: postCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}:
    get:
      tags:
      - campaigns
      summary: Get campaign info
      description: Get information about a specific campaign.
      operationId: getCampaignsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    delete:
      tags:
      - campaigns
      summary: Delete campaign
      description: Remove a campaign from your Mailchimp account.
      operationId: deleteCampaignsId
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
    patch:
      tags:
      - campaigns
      summary: Update campaign settings
      description: Update some or all of the settings for a specific campaign.
      operationId: patchCampaignsId
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: update
        methodNameCamel: update
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/actions/cancel-send:
    post:
      tags:
      - campaigns
      summary: Cancel campaign
      description: "Cancel a Regular or Plain-Text Campaign after you send, before\
        \ all of your recipients receive it. This feature is included with Mailchimp\
        \ Pro."
      operationId: postCampaignsIdActionsCancelSend
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-pro-required: true
      x-custom-config:
        methodNameSnake: cancel_send
        methodNameCamel: cancelSend
  /campaigns/{campaign_id}/actions/replicate:
    post:
      tags:
      - campaigns
      summary: Replicate campaign
      description: Replicate a campaign in saved or send status.
      operationId: postCampaignsIdActionsReplicate
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: replicate
        methodNameCamel: replicate
  /campaigns/{campaign_id}/actions/send:
    post:
      tags:
      - campaigns
      summary: Send campaign
      description: "Send a Mailchimp campaign. For RSS Campaigns, the campaign will\
        \ send according to its schedule. All other campaigns will send immediately."
      operationId: postCampaignsIdActionsSend
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: send
        methodNameCamel: send
  /campaigns/{campaign_id}/actions/schedule:
    post:
      tags:
      - campaigns
      summary: Schedule campaign
      description: "Schedule a campaign for delivery. If you're using Multivariate\
        \ Campaigns to test send times or sending RSS Campaigns, use the send action\
        \ instead."
      operationId: postCampaignsIdActionsSchedule
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions_schedule_body'
        required: true
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: schedule
        methodNameCamel: schedule
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/actions/unschedule:
    post:
      tags:
      - campaigns
      summary: Unschedule campaign
      description: Unschedule a scheduled campaign that hasn't started sending.
      operationId: postCampaignsIdActionsUnschedule
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: unschedule
        methodNameCamel: unschedule
  /campaigns/{campaign_id}/actions/test:
    post:
      tags:
      - campaigns
      summary: Send test email
      description: Send a test email.
      operationId: postCampaignsIdActionsTest
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions_test_body'
        required: true
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: send_test_email
        methodNameCamel: sendTestEmail
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/actions/pause:
    post:
      tags:
      - campaigns
      summary: Pause rss campaign
      description: Pause an RSS-Driven campaign.
      operationId: postCampaignsIdActionsPause
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: pause
        methodNameCamel: pause
  /campaigns/{campaign_id}/actions/resume:
    post:
      tags:
      - campaigns
      summary: Resume rss campaign
      description: Resume an RSS-Driven campaign.
      operationId: postCampaignsIdActionsResume
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: resume
        methodNameCamel: resume
  /campaigns/{campaign_id}/actions/create-resend:
    post:
      tags:
      - campaigns
      summary: Resend campaign
      description: Creates a Resend to Non-Openers version of this campaign. We will
        also check if this campaign meets the criteria for Resend to Non-Openers campaigns.
      operationId: postCampaignsIdActionsCreateResend
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-pro-required: true
      x-custom-config:
        methodNameSnake: create_resend
        methodNameCamel: createResend
  /campaigns/{campaign_id}/content:
    get:
      tags:
      - campaigns
      summary: Get campaign content
      description: Get the the HTML and plain-text content for a campaign.
      operationId: getCampaignsIdContent
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Content'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Content'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_content
        methodNameCamel: getContent
    put:
      tags:
      - campaigns
      summary: Set campaign content
      description: Set the content for a campaign.
      operationId: putCampaignsIdContent
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign Content_1'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Content'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Content'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: set_content
        methodNameCamel: setContent
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/feedback:
    get:
      tags:
      - campaigns
      summary: List campaign feedback
      description: Get team feedback while you're working together on a Mailchimp
        campaign.
      operationId: getCampaignsIdFeedback
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Reports'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Reports'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_feedback
        methodNameCamel: getFeedback
    post:
      tags:
      - campaigns
      summary: Add campaign feedback
      description: Add feedback on a specific campaign.
      operationId: postCampaignsIdFeedback
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign Feedback'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Feedback_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Feedback_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_feedback
        methodNameCamel: addFeedback
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/feedback/{feedback_id}:
    get:
      tags:
      - campaigns
      summary: Get campaign feedback message
      description: Get a specific feedback message from a campaign.
      operationId: getCampaignsIdFeedbackId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: feedback_id
        in: path
        description: The unique id for the feedback message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Feedback ID
        x-title: Feedback ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Feedback_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Feedback_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_feedback_message
        methodNameCamel: getFeedbackMessage
    delete:
      tags:
      - campaigns
      summary: Delete campaign feedback message
      description: Remove a specific feedback message for a campaign.
      operationId: deleteCampaignsIdFeedbackId
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: feedback_id
        in: path
        description: The unique id for the feedback message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Feedback ID
        x-title: Feedback ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_feedback_message
        methodNameCamel: deleteFeedbackMessage
    patch:
      tags:
      - campaigns
      summary: Update campaign feedback message
      description: Update a specific feedback message for a campaign.
      operationId: patchCampaignsIdFeedbackId
      parameters:
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: feedback_id
        in: path
        description: The unique id for the feedback message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Feedback ID
        x-title: Feedback ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign Feedback_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Feedback_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Feedback_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_feedback_message
        methodNameCamel: updateFeedbackMessage
      x-codegen-request-body-name: body
  /campaigns/{campaign_id}/send-checklist:
    get:
      tags:
      - campaigns
      summary: Get campaign send checklist
      description: "Review the send checklist for a campaign, and resolve any issues\
        \ before sending."
      operationId: getCampaignsIdSendChecklist
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Send Checklist'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Send Checklist'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_send_checklist
        methodNameCamel: getSendChecklist
  /connected-sites:
    get:
      tags:
      - connectedSites
      summary: List connected sites
      description: Get all connected sites in an account.
      operationId: getConnectedSites
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connected Sites'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Connected Sites'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      tags:
      - connectedSites
      summary: Add connected site
      description: Create a new Mailchimp connected site.
      operationId: postConnectedSites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connected Site'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connected Site_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Connected Site_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /connected-sites/{connected_site_id}:
    get:
      tags:
      - connectedSites
      summary: Get connected site
      description: Get information about a specific connected site.
      operationId: getConnectedSitesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: connected_site_id
        in: path
        description: The unique identifier for the site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Connected Site Foreign ID
        x-title: Connected Site Foreign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connected Site_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Connected Site_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
    delete:
      tags:
      - connectedSites
      summary: Delete connected site
      description: Remove a connected site from your Mailchimp account.
      operationId: deleteConnectedSitesId
      parameters:
      - name: connected_site_id
        in: path
        description: The unique identifier for the site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Connected Site Foreign ID
        x-title: Connected Site Foreign ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: remove
        methodNameCamel: remove
  /connected-sites/{connected_site_id}/actions/verify-script-installation:
    post:
      tags:
      - connectedSites
      summary: Verify connected site script
      description: "Verify that the connected sites script has been installed, either\
        \ via the script URL or fragment."
      operationId: postConnectedSitesIdActionsVerifyScriptInstallation
      parameters:
      - name: connected_site_id
        in: path
        description: The unique identifier for the site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Connected Site Foreign ID
        x-title: Connected Site Foreign ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-pro-required: true
      x-custom-config:
        methodNameSnake: verify_script_installation
        methodNameCamel: verifyScriptInstallation
  /conversations:
    get:
      tags:
      - conversations
      summary: List conversations
      description: "Get a list of conversations for the account. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: getConversations
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: has_unread_messages
        in: query
        description: Whether the conversation has any unread messages.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "true"
          - "false"
          x-title: Has Unread Messages
        x-title: Has Unread Messages
      - name: list_id
        in: query
        description: The unique id for the list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: campaign_id
        in: query
        description: The unique id for the campaign.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracked Conversations'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Tracked Conversations'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: true
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
  /conversations/{conversation_id}:
    get:
      tags:
      - conversations
      summary: Get conversation
      description: "Get details about an individual conversation. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: getConversationsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: conversation_id
        in: path
        description: The unique id for the conversation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Conversation ID
        x-title: Conversation ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Conversation'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: true
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /conversations/{conversation_id}/messages:
    get:
      tags:
      - conversations
      summary: List messages
      description: "Get messages from a specific conversation. Conversations has been\
        \ deprecated in favor of Inbox and these endpoints don't include Inbox data.\
        \ Past Conversations are still available via this endpoint, but new campaign\
        \ replies and other Inbox messages aren’t available using this endpoint."
      operationId: getConversationsIdMessages
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: conversation_id
        in: path
        description: The unique id for the conversation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Conversation ID
        x-title: Conversation ID
      - name: is_read
        in: query
        description: Whether a conversation message has been marked as read.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "true"
          - "false"
          x-title: Is Read
        x-title: Is Read
      - name: before_timestamp
        in: query
        description: "Restrict the response to messages created before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Before Timestamp
        x-title: Before Timestamp
      - name: since_timestamp
        in: query
        description: "Restrict the response to messages created after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Since Timestamp
        x-title: Since Timestamp
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection of Conversation Messages'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection of Conversation Messages'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: true
      x-custom-config:
        methodNameSnake: get_conversation_messages
        methodNameCamel: getConversationMessages
  /conversations/{conversation_id}/messages/{message_id}:
    get:
      tags:
      - conversations
      summary: Get message
      description: "Get an individual message in a conversation. Conversations has\
        \ been deprecated in favor of Inbox and these endpoints don't include Inbox\
        \ data. Past Conversations are still available via this endpoint, but new\
        \ campaign replies and other Inbox messages aren’t available using this endpoint."
      operationId: getConversationsIdMessagesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: conversation_id
        in: path
        description: The unique id for the conversation.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Conversation ID
        x-title: Conversation ID
      - name: message_id
        in: path
        description: The unique id for the conversation message.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Message ID
        x-title: Message ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation Message'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Conversation Message'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: true
      x-custom-config:
        methodNameSnake: get_conversation_message
        methodNameCamel: getConversationMessage
  /customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger:
    post:
      tags:
      - customerJourneys
      summary: Customer Journeys API trigger for a contact
      description: "A step trigger in a Customer Journey. To use it, create a starting\
        \ point or step from the Customer Journey builder in the app using the Customer\
        \ Journeys API condition. We’ll provide a url during the process that includes\
        \ the {journey_id} and {step_id}. You’ll then be able to use this endpoint\
        \ to trigger the condition for the posted contact."
      operationId: postCustomerJourneysJourneysIdStepsIdActionsTrigger
      parameters:
      - name: journey_id
        in: path
        description: The id for the Journey.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          x-title: Journey ID
        x-title: Journey ID
      - name: step_id
        in: path
        description: The id for the Step.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          x-title: Step ID
        x-title: Step ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber in Customer Journeys audience'
        required: true
      responses:
        "204":
          description: An empty response
          content:
            application/json:
              schema:
                type: object
                description: Empty Response
                x-content-type: application/json
            application/problem+json:
              schema:
                type: object
                description: Empty Response
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: trigger
        methodNameCamel: trigger
      x-codegen-request-body-name: body
  /file-manager/files:
    get:
      tags:
      - fileManager
      summary: List stored files
      description: Get a list of available images and files stored in the File Manager
        for the account.
      operationId: getFileManagerFiles
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: type
        in: query
        description: The file type for the File Manager file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: File Type
        x-title: File Type
      - name: created_by
        in: query
        description: The Mailchimp account user who created the File Manager file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Created By
        x-title: Created By
      - name: before_created_at
        in: query
        description: "Restrict the response to files created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Created At
        x-title: Before Created At
      - name: since_created_at
        in: query
        description: "Restrict the response to files created after the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Created At
        x-title: Since Created At
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - added_date
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File Manager'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/File Manager'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: files
        methodNameCamel: files
    post:
      tags:
      - fileManager
      summary: Add file
      description: Upload a new image or file to the File Manager.
      operationId: postFileManagerFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery File'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery File_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery File_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: upload
        methodNameCamel: upload
      x-codegen-request-body-name: body
  /file-manager/files/{file_id}:
    get:
      tags:
      - fileManager
      summary: Get file
      description: Get information about a specific file in the File Manager.
      operationId: getFileManagerFilesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: file_id
        in: path
        description: The unique id for the File Manager file.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: File ID
        x-title: File ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery File_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery File_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_file
        methodNameCamel: getFile
    delete:
      tags:
      - fileManager
      summary: Delete file
      description: Remove a specific file from the File Manager.
      operationId: deleteFileManagerFilesId
      parameters:
      - name: file_id
        in: path
        description: The unique id for the File Manager file.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: File ID
        x-title: File ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_file
        methodNameCamel: deleteFile
    patch:
      tags:
      - fileManager
      summary: Update file
      description: Update a file in the File Manager.
      operationId: patchFileManagerFilesId
      parameters:
      - name: file_id
        in: path
        description: The unique id for the File Manager file.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: File ID
        x-title: File ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery File_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery File_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery File_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_file
        methodNameCamel: updateFile
      x-codegen-request-body-name: body
  /file-manager/folders:
    get:
      tags:
      - fileManager
      summary: List folders
      description: Get a list of all folders in the File Manager.
      operationId: getFileManagerFolders
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: created_by
        in: query
        description: The Mailchimp account user who created the File Manager file.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Created By
        x-title: Created By
      - name: before_created_at
        in: query
        description: "Restrict the response to files created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Created At
        x-title: Before Created At
      - name: since_created_at
        in: query
        description: "Restrict the response to files created after the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Created At
        x-title: Since Created At
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File Manager Folders'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/File Manager Folders'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list_folders
        methodNameCamel: listFolders
    post:
      tags:
      - fileManager
      summary: Add folder
      description: Create a new folder in the File Manager.
      operationId: postFileManagerFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery Folder'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_folder
        methodNameCamel: createFolder
      x-codegen-request-body-name: body
  /file-manager/folders/{folder_id}:
    get:
      tags:
      - fileManager
      summary: Get folder
      description: Get information about a specific folder in the File Manager.
      operationId: getFileManagerFoldersId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: folder_id
        in: path
        description: The unique id for the File Manager folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_folder
        methodNameCamel: getFolder
    delete:
      tags:
      - fileManager
      summary: Delete folder
      description: Delete a specific folder in the File Manager.
      operationId: deleteFileManagerFoldersId
      parameters:
      - name: folder_id
        in: path
        description: The unique id for the File Manager folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_folder
        methodNameCamel: deleteFolder
    patch:
      tags:
      - fileManager
      summary: Update folder
      description: Update a specific File Manager folder.
      operationId: patchFileManagerFoldersId
      parameters:
      - name: folder_id
        in: path
        description: The unique id for the File Manager folder.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery Folder_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery Folder_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Gallery Folder_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_folder
        methodNameCamel: updateFolder
      x-codegen-request-body-name: body
  /lists:
    get:
      tags:
      - lists
      summary: Get lists info
      description: Get information about all lists in the account.
      operationId: getLists
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: before_date_created
        in: query
        description: "Restrict response to lists created before the set date. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Date Created
        x-title: Before Date Created
      - name: since_date_created
        in: query
        description: "Restrict results to lists created after the set date. Uses ISO\
          \ 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Date Created
        x-title: Since Date Created
      - name: before_campaign_last_sent
        in: query
        description: "Restrict results to lists created before the last campaign send\
          \ date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Campaign Last Sent
        x-title: Before Campaign Last Sent
      - name: since_campaign_last_sent
        in: query
        description: "Restrict results to lists created after the last campaign send\
          \ date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Campaign Last Sent
        x-title: Since Campaign Last Sent
      - name: email
        in: query
        description: Restrict results to lists that include a specific subscriber's
          email address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Subscriber Email
        x-title: Subscriber Email
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - date_created
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      - name: has_ecommerce_store
        in: query
        description: "Restrict results to lists that contain an active, connected,\
          \ undeleted ecommerce store."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Has Ecommerce Store
        x-title: Has Ecommerce Store
      - name: include_total_contacts
        in: query
        description: "Return the total_contacts field in the stats response, which\
          \ contains an approximate count of all contacts in any state."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Total Contacts
        x-title: Include Total Contacts
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber Lists'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber Lists'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_all_lists
        methodNameCamel: getAllLists
    post:
      tags:
      - lists
      summary: Add list
      description: Create a new list in your Mailchimp account.
      operationId: postLists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber List'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber List_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber List_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_list
        methodNameCamel: createList
      x-codegen-request-body-name: body
  /lists/{list_id}:
    get:
      tags:
      - lists
      summary: Get list info
      description: Get information about a specific list in your Mailchimp account.
        Results include list members who have signed up but haven't confirmed their
        subscription yet and unsubscribed or cleaned.
      operationId: getListsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: include_total_contacts
        in: query
        description: "Return the total_contacts field in the stats response, which\
          \ contains an approximate count of all contacts in any state."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Total Contacts
        x-title: Include Total Contacts
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber List_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber List_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list
        methodNameCamel: getList
    post:
      tags:
      - lists
      summary: Batch subscribe or unsubscribe
      description: Batch subscribe or unsubscribe list members.
      operationId: postListsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: skip_merge_validation
        in: query
        description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Skip Merge Validation
        x-title: Skip Merge Validation
      - name: skip_duplicate_check
        in: query
        description: "If skip_duplicate_check is true, we will ignore duplicates sent\
          \ in the request when using the batch sub/unsub on the lists endpoint. The\
          \ status of the first appearance in the request will be saved. This defaults\
          \ to false."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Skip Duplicate Check
        x-title: Skip Duplicate Check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Members to SubscribeUnsubscribe tofrom a
                List in batch'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch update List members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch update List members'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: batch_list_members
        methodNameCamel: batchListMembers
      x-codegen-request-body-name: body
    delete:
      tags:
      - lists
      summary: Delete list
      description: "Delete a list from your Mailchimp account. If you delete a list,\
        \ you'll lose the list history—including subscriber activity, unsubscribes,\
        \ complaints, and bounces. You’ll also lose subscribers’ email addresses,\
        \ unless you exported and backed up your list."
      operationId: deleteListsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_list
        methodNameCamel: deleteList
    patch:
      tags:
      - lists
      summary: Update lists
      description: Update the settings for a specific list.
      operationId: patchListsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber List_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber List_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Subscriber List_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_list
        methodNameCamel: updateList
      x-codegen-request-body-name: body
  /lists/{list_id}/abuse-reports:
    get:
      tags:
      - lists
      summary: List abuse reports
      description: Get all abuse reports for a specific list.
      operationId: getListsIdAbuseReports
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abuse Complaints'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Abuse Complaints'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_abuse_reports
        methodNameCamel: getListAbuseReports
  /lists/{list_id}/abuse-reports/{report_id}:
    get:
      tags:
      - lists
      summary: Get abuse report
      description: Get details about a specific abuse report.
      operationId: getListsIdAbuseReportsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: report_id
        in: path
        description: The id for the abuse report.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abuse Complaint'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Abuse Complaint'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_abuse_report_details
        methodNameCamel: getListAbuseReportDetails
  /lists/{list_id}/activity:
    get:
      tags:
      - lists
      summary: List recent activity
      description: "Get up to the previous 180 days of daily detailed aggregated activity\
        \ stats for a list, not including Automation activity."
      operationId: getListsIdActivity
      parameters:
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Activity'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_recent_activity
        methodNameCamel: getListRecentActivity
  /lists/{list_id}/clients:
    get:
      tags:
      - lists
      summary: List top email clients
      description: Get a list of the top email clients based on user-agent strings.
      operationId: getListsIdClients
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email Clients'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Email Clients'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_clients
        methodNameCamel: getListClients
  /lists/{list_id}/growth-history:
    get:
      tags:
      - lists
      summary: List growth history data
      description: Get a month-by-month summary of a specific list's growth activity.
      operationId: getListsIdGrowthHistory
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - month
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Growth History'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Growth History'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_growth_history
        methodNameCamel: getListGrowthHistory
  /lists/{list_id}/growth-history/{month}:
    get:
      tags:
      - lists
      summary: Get growth history by month
      description: Get a summary of a specific list's growth activity for a specific
        month and year.
      operationId: getListsIdGrowthHistoryId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: month
        in: path
        description: A specific month of list growth history.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Growth History_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Growth History_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_growth_history_by_month
        methodNameCamel: getListGrowthHistoryByMonth
  /lists/{list_id}/interest-categories:
    get:
      tags:
      - lists
      summary: List interest categories
      description: Get information about a list's interest categories.
      operationId: getListsIdInterestCategories
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: type
        in: query
        description: Restrict results a type of interest group
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Interest Group Type
        x-title: Interest Group Type
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest Groupings'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest Groupings'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_interest_categories
        methodNameCamel: getListInterestCategories
    post:
      tags:
      - lists
      summary: Add interest category
      description: Create a new interest category.
      operationId: postListsIdInterestCategories
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest Category'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest Category_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest Category_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_list_interest_category
        methodNameCamel: createListInterestCategory
      x-codegen-request-body-name: body
  /lists/{list_id}/interest-categories/{interest_category_id}:
    get:
      tags:
      - lists
      summary: Get interest category info
      description: Get information about a specific interest category.
      operationId: getListsIdInterestCategoriesId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: interest_category_id
        in: path
        description: The unique ID for the interest category.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest Category_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest Category_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_interest_category
        methodNameCamel: getInterestCategory
    delete:
      tags:
      - lists
      summary: Delete interest category
      description: Delete a specific interest category.
      operationId: deleteListsIdInterestCategoriesId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: interest_category_id
        in: path
        description: The unique ID for the interest category.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_interest_category
        methodNameCamel: deleteInterestCategory
    patch:
      tags:
      - lists
      summary: Update interest category
      description: Update a specific interest category.
      operationId: patchListsIdInterestCategoriesId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: interest_category_id
        in: path
        description: The unique ID for the interest category.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest Category_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest Category_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest Category_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_interest_category
        methodNameCamel: updateInterestCategory
      x-codegen-request-body-name: body
  /lists/{list_id}/interest-categories/{interest_category_id}/interests:
    get:
      tags:
      - lists
      summary: List interests in category
      description: Get a list of this category's interests.
      operationId: getListsIdInterestCategoriesIdInterests
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: interest_category_id
        in: path
        description: The unique ID for the interest category.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interests'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interests'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list_interest_category_interests
        methodNameCamel: listInterestCategoryInterests
    post:
      tags:
      - lists
      summary: Add interest in category
      description: Create a new interest or 'group name' for a specific category.
      operationId: postListsIdInterestCategoriesIdInterests
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: interest_category_id
        in: path
        description: The unique ID for the interest category.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_interest_category_interest
        methodNameCamel: createInterestCategoryInterest
      x-codegen-request-body-name: body
  /lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}:
    get:
      tags:
      - lists
      summary: Get interest in category
      description: Get interests or 'group names' for a specific category.
      operationId: getListsIdInterestCategoriesIdInterestsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: interest_category_id
        in: path
        description: The unique ID for the interest category.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - name: interest_id
        in: path
        description: The specific interest or 'group name'.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest ID
        x-title: Interest ID
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_interest_category_interest
        methodNameCamel: getInterestCategoryInterest
    delete:
      tags:
      - lists
      summary: Delete interest in category
      description: Delete interests or group names in a specific category.
      operationId: deleteListsIdInterestCategoriesIdInterestsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: interest_category_id
        in: path
        description: The unique ID for the interest category.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - name: interest_id
        in: path
        description: The specific interest or 'group name'.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest ID
        x-title: Interest ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_interest_category_interest
        methodNameCamel: deleteInterestCategoryInterest
    patch:
      tags:
      - lists
      summary: Update interest in category
      description: Update interests or 'group names' for a specific category.
      operationId: patchListsIdInterestCategoriesIdInterestsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: interest_category_id
        in: path
        description: The unique ID for the interest category.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - name: interest_id
        in: path
        description: The specific interest or 'group name'.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Interest ID
        x-title: Interest ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interest_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Interest_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_interest_category_interest
        methodNameCamel: updateInterestCategoryInterest
      x-codegen-request-body-name: body
  /lists/{list_id}/segments:
    get:
      tags:
      - lists
      summary: List segments
      description: Get information about all available segments for a specific list.
      operationId: previewASegment
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: type
        in: query
        description: Limit results based on segment type.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Segment Type
        x-title: Segment Type
      - name: since_created_at
        in: query
        description: "Restrict results to segments created after the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Created At
        x-title: Since Created At
      - name: before_created_at
        in: query
        description: "Restrict results to segments created before the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Created At
        x-title: Before Created At
      - name: include_cleaned
        in: query
        description: Include cleaned members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Cleaned
        example: false
        x-title: Include Cleaned
      - name: include_transactional
        in: query
        description: Include transactional members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Transactional
        example: false
        x-title: Include Transactional
      - name: include_unsubscribed
        in: query
        description: Include unsubscribed members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Unsubscribed
        example: false
        x-title: Include Unsubscribed
      - name: since_updated_at
        in: query
        description: "Restrict results to segments update after the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Updated At
        x-title: Since Updated At
      - name: before_updated_at
        in: query
        description: "Restrict results to segments update before the set time. Uses\
          \ ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Updated At
        x-title: Before Updated At
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection of Segments'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection of Segments'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list_segments
        methodNameCamel: listSegments
    post:
      tags:
      - lists
      summary: Add segment
      description: Create a new segment in a specific list.
      operationId: postListsIdSegments
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List_3'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_4'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_4'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_segment
        methodNameCamel: createSegment
      x-codegen-request-body-name: body
  /lists/{list_id}/segments/{segment_id}:
    get:
      tags:
      - lists
      summary: Get segment info
      description: Get information about a specific segment.
      operationId: getListsIdSegmentsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: segment_id
        in: path
        description: The unique id for the segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      - name: include_cleaned
        in: query
        description: Include cleaned members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Cleaned
        example: false
        x-title: Include Cleaned
      - name: include_transactional
        in: query
        description: Include transactional members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Transactional
        example: false
        x-title: Include Transactional
      - name: include_unsubscribed
        in: query
        description: Include unsubscribed members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Unsubscribed
        example: false
        x-title: Include Unsubscribed
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_4'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_4'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_segment
        methodNameCamel: getSegment
    post:
      tags:
      - lists
      summary: Batch add or remove members
      description: Batch add/remove list members to static segment
      operationId: postListsIdSegmentsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: segment_id
        in: path
        description: The unique id for the segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Members to addremove tofrom a static segment'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Batch addremove List members tofrom static
                  segment'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Batch addremove List members tofrom static
                  segment'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: batch_segment_members
        methodNameCamel: batchSegmentMembers
      x-codegen-request-body-name: body
    delete:
      tags:
      - lists
      summary: Delete segment
      description: Delete a specific segment in a list.
      operationId: deleteListsIdSegmentsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: segment_id
        in: path
        description: The unique id for the segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_segment
        methodNameCamel: deleteSegment
    patch:
      tags:
      - lists
      summary: Update segment
      description: Update a specific segment in a list.
      operationId: patchListsIdSegmentsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: segment_id
        in: path
        description: The unique id for the segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List_5'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_4'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List_4'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_segment
        methodNameCamel: updateSegment
      x-codegen-request-body-name: body
  /lists/{list_id}/segments/{segment_id}/members:
    get:
      tags:
      - lists
      summary: List members in segment
      description: Get information about members in a saved segment.
      operationId: getListsIdSegmentsIdMembers
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: segment_id
        in: path
        description: The unique id for the segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      - name: include_cleaned
        in: query
        description: Include cleaned members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Cleaned
        example: false
        x-title: Include Cleaned
      - name: include_transactional
        in: query
        description: Include transactional members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Transactional
        example: false
        x-title: Include Transactional
      - name: include_unsubscribed
        in: query
        description: Include unsubscribed members in response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Include Unsubscribed
        example: false
        x-title: Include Unsubscribed
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment Members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Segment Members'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_segment_members_list
        methodNameCamel: getSegmentMembersList
    post:
      tags:
      - lists
      summary: Add member to segment
      description: Add a member to a static segment.
      operationId: postListsIdSegmentsIdMembers
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: segment_id
        in: path
        description: The unique id for the segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/segment_id_members_body'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Members'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_segment_member
        methodNameCamel: createSegmentMember
      x-codegen-request-body-name: body
  /lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}:
    delete:
      tags:
      - lists
      summary: Remove list member from segment
      description: Remove a member from the specified static segment.
      operationId: deleteListsIdSegmentsIdMembersId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: segment_id
        in: path
        description: The unique id for the segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Segment ID
        x-title: Segment ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: remove_segment_member
        methodNameCamel: removeSegmentMember
  /lists/{list_id}/tag-search:
    get:
      tags:
      - lists
      summary: Search for tags on a list by name.
      description: "Search for tags on a list by name. If no name is provided, will\
        \ return all tags on the list."
      operationId: searchTagsByName
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: name
        in: query
        description: "The search query used to filter tags.  The search query will\
          \ be compared to each tag as a prefix, so all tags that have a name starting\
          \ with this field will be returned."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Name
        x-title: Name
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag search results'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Tag search results'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: tag_search
        methodNameCamel: tagSearch
  /lists/{list_id}/members:
    get:
      tags:
      - lists
      summary: List members info
      description: Get information about members in a specific Mailchimp list.
      operationId: getListsIdMembers
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: email_type
        in: query
        description: The email type.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Email Type
        x-title: Email Type
      - name: status
        in: query
        description: The subscriber's status.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          - archived
          x-title: Subscriber Status
        x-title: Subscriber Status
      - name: since_timestamp_opt
        in: query
        description: "Restrict results to subscribers who opted-in after the set timeframe.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Timestamp Opt
        x-title: Since Timestamp Opt
      - name: before_timestamp_opt
        in: query
        description: "Restrict results to subscribers who opted-in before the set\
          \ timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Timestamp Opt
        x-title: Before Timestamp Opt
      - name: since_last_changed
        in: query
        description: "Restrict results to subscribers whose information changed after\
          \ the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Last Changed
        x-title: Since Last Changed
      - name: before_last_changed
        in: query
        description: "Restrict results to subscribers whose information changed before\
          \ the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Last Changed
        x-title: Before Last Changed
      - name: unique_email_id
        in: query
        description: A unique identifier for the email address across all Mailchimp
          lists.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Unique Email ID
        x-title: Unique Email ID
      - name: vip_only
        in: query
        description: "A filter to return only the list's VIP members. Passing `true`\
          \ will restrict results to VIP list members, passing `false` will return\
          \ all list members."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: VIP Only
        x-title: VIP Only
      - name: interest_category_id
        in: query
        description: The unique id for the interest category.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Interest Category ID
        x-title: Interest Category ID
      - name: interest_ids
        in: query
        description: Used to filter list members by interests. Must be accompanied
          by interest_category_id and interest_match. The value must be a comma separated
          list of interest ids present for any supplied interest categories.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Interest Ids
        x-title: Interest Ids
      - name: interest_match
        in: query
        description: "Used to filter list members by interests. Must be accompanied\
          \ by interest_category_id and interest_ids. \"any\" will match a member\
          \ with any of the interest supplied, \"all\" will only match members with\
          \ every interest supplied, and \"none\" will match members without any of\
          \ the interest supplied."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - any
          - all
          - none
          x-title: Interest Match
        x-title: Interest Match
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - timestamp_opt
          - timestamp_signup
          - last_changed
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      - name: since_last_campaign
        in: query
        description: Filter subscribers by those subscribed/unsubscribed/pending/cleaned
          since last email campaign send. Member status is required to use this filter.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Since Last Campaign
        x-title: Since Last Campaign
      - name: unsubscribed_since
        in: query
        description: Filter subscribers by those unsubscribed since a specific date.
          Using any status other than unsubscribed with this filter will result in
          an error.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Unsubscribed Since
        x-title: Unsubscribed Since
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Members_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Members_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_members_info
        methodNameCamel: getListMembersInfo
    post:
      tags:
      - lists
      summary: Add member to list
      description: Add a new member to the list.
      operationId: postListsIdMembers
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: skip_merge_validation
        in: query
        description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Skip Merge Validation
        x-title: Skip Merge Validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add List Members_1'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Members_2'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_list_member
        methodNameCamel: addListMember
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}:
    get:
      tags:
      - lists
      summary: Get member info
      description: "Get information about a specific list member, including a currently\
        \ subscribed, unsubscribed, or bounced member."
      operationId: getListsIdMembersId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Members_2'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_member
        methodNameCamel: getListMember
    put:
      tags:
      - lists
      summary: Add or update list member
      description: Add or update a list member.
      operationId: putListsIdMembersId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: skip_merge_validation
        in: query
        description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Skip Merge Validation
        x-title: Skip Merge Validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add List Members_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Members_2'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: set_list_member
        methodNameCamel: setListMember
      x-codegen-request-body-name: body
    delete:
      tags:
      - lists
      summary: Archive list member
      description: "Archive a list member. To permanently delete, use the delete-permanent\
        \ action."
      operationId: deleteListsIdMembersId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_list_member
        methodNameCamel: deleteListMember
    patch:
      tags:
      - lists
      summary: Update list member
      description: Update information for a specific list member.
      operationId: patchListsIdMembersId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: skip_merge_validation
        in: query
        description: "If skip_merge_validation is true, member data will be accepted\
          \ without merge field values, even if the merge field is usually required.\
          \ This defaults to false."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Skip Merge Validation
        x-title: Skip Merge Validation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add List Members_3'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Members_2'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Members_2'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_list_member
        methodNameCamel: updateListMember
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/activity:
    get:
      tags:
      - lists
      summary: View recent activity 50
      description: "Get the last 50 events of a member's activity on a specific list,\
        \ including opens, clicks, and unsubscribes."
      operationId: getListsIdMembersIdActivity
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: action
        in: query
        description: A comma seperated list of actions to return.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Action
        x-title: Action
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member Activity Events'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member Activity Events'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_member_activity
        methodNameCamel: getListMemberActivity
  /lists/{list_id}/members/{subscriber_hash}/activity-feed:
    get:
      tags:
      - lists
      summary: View recent activity
      description: "Get a member's activity on a specific list, including opens, clicks,\
        \ and unsubscribes."
      operationId: getListsIdMembersIdActivityFeed
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: activity_filters
        in: query
        description: "A comma-separated list of activity filters that correspond to\
          \ a set of activity types, e.g \"?activity_filters=open,bounce,click\"."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Activity Filters
        x-title: Activity Filters
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member Activity Events_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member Activity Events_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_member_activity_feed
        methodNameCamel: getListMemberActivityFeed
  /lists/{list_id}/members/{subscriber_hash}/tags:
    get:
      tags:
      - lists
      summary: List member tags
      description: Get the tags on a list member.
      operationId: getListMemberTags
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection of Tags'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection of Tags'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_member_tags
        methodNameCamel: getListMemberTags
    post:
      tags:
      - lists
      summary: Add or remove member tags
      description: "Add or remove tags from a list member. If a tag that does not\
        \ exist is passed in and set as 'active', a new tag will be created."
      operationId: postListMemberTags
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member Tags'
        required: true
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_list_member_tags
        methodNameCamel: updateListMemberTags
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/events:
    get:
      tags:
      - lists
      summary: List member events
      description: Get events for a contact.
      operationId: getListsIdMembersIdEvents
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection of Events'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection of Events'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_member_events
        methodNameCamel: getListMemberEvents
    post:
      tags:
      - lists
      summary: Add event
      description: Add an event for a list member.
      operationId: postListMemberEvents
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Events'
        required: true
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_list_member_event
        methodNameCamel: createListMemberEvent
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/goals:
    get:
      tags:
      - lists
      summary: List member goal events
      description: Get the last 50 Goal events for a member on a specific list.
      operationId: getListsIdMembersIdGoals
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection of Member Activity Events'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection of Member Activity Events'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: getListMemberGoals
        methodNameCamel: getListMemberGoals
  /lists/{list_id}/members/{subscriber_hash}/notes:
    get:
      tags:
      - lists
      summary: List recent member notes
      description: Get recent notes for a specific list member.
      operationId: getListsIdMembersIdNotes
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: sort_field
        in: query
        description: Returns notes sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - note_id
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection of Notes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection of Notes'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_member_notes
        methodNameCamel: getListMemberNotes
    post:
      tags:
      - lists
      summary: Add member note
      description: Add a new note for a specific subscriber.
      operationId: postListsIdMembersIdNotes
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member Notes'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member Notes_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member Notes_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_list_member_note
        methodNameCamel: createListMemberNote
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/notes/{note_id}:
    get:
      tags:
      - lists
      summary: Get member note
      description: Get a specific note for a specific list member.
      operationId: getListsIdMembersIdNotesId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: note_id
        in: path
        description: The id for the note.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Note ID
        x-title: Note ID
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member Notes_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member Notes_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_member_note
        methodNameCamel: getListMemberNote
    delete:
      tags:
      - lists
      summary: Delete note
      description: Delete a specific note for a specific list member.
      operationId: deleteListsIdMembersIdNotesId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: note_id
        in: path
        description: The id for the note.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Note ID
        x-title: Note ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_list_member_note
        methodNameCamel: deleteListMemberNote
    patch:
      tags:
      - lists
      summary: Update note
      description: Update a specific note for a specific list member.
      operationId: patchListsIdMembersIdNotesId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address. This endpoint also accepts a list member's email address or contact_id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: note_id
        in: path
        description: The id for the note.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Note ID
        x-title: Note ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member Notes_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member Notes_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Member Notes_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_list_member_note
        methodNameCamel: updateListMemberNote
      x-codegen-request-body-name: body
  /lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent:
    post:
      tags:
      - lists
      summary: Delete list member
      description: "Delete all personally identifiable information related to a list\
        \ member, and remove them from a list. This will make it impossible to re-import\
        \ the list member."
      operationId: postListsIdMembersHashActionsDeletePermanent
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_list_member_permanent
        methodNameCamel: deleteListMemberPermanent
  /lists/{list_id}/merge-fields:
    get:
      tags:
      - lists
      summary: List merge fields
      description: Get a list of all merge fields for an audience.
      operationId: getListsIdMergeFields
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: type
        in: query
        description: The merge field type.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Merge Type
        x-title: Merge Type
      - name: required
        in: query
        description: Whether it's a required merge field.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Required
        x-title: Required
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection of Merge Fields'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Collection of Merge Fields'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_merge_fields
        methodNameCamel: getListMergeFields
    post:
      tags:
      - lists
      summary: Add merge field
      description: Add a new merge field for a specific audience.
      operationId: postListsIdMergeFields
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Merge Field'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merge Field_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Merge Field_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_list_merge_field
        methodNameCamel: addListMergeField
      x-codegen-request-body-name: body
  /lists/{list_id}/merge-fields/{merge_id}:
    get:
      tags:
      - lists
      summary: Get merge field
      description: Get information about a specific merge field.
      operationId: getListsIdMergeFieldsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: merge_id
        in: path
        description: The id for the merge field.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Merge ID
        x-title: Merge ID
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merge Field_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Merge Field_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_merge_field
        methodNameCamel: getListMergeField
    delete:
      tags:
      - lists
      summary: Delete merge field
      description: Delete a specific merge field.
      operationId: deleteListsIdMergeFieldsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: merge_id
        in: path
        description: The id for the merge field.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Merge ID
        x-title: Merge ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_list_merge_field
        methodNameCamel: deleteListMergeField
    patch:
      tags:
      - lists
      summary: Update merge field
      description: Update a specific merge field.
      operationId: patchListsIdMergeFieldsId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: merge_id
        in: path
        description: The id for the merge field.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Merge ID
        x-title: Merge ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Merge Field_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merge Field_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Merge Field_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_list_merge_field
        methodNameCamel: updateListMergeField
      x-codegen-request-body-name: body
  /lists/{list_id}/webhooks:
    get:
      tags:
      - lists
      summary: List webhooks
      description: Get information about all webhooks for a specific list.
      operationId: getListsIdWebhooks
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Webhooks'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Webhooks'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_webhooks
        methodNameCamel: getListWebhooks
    post:
      tags:
      - lists
      summary: Add webhook
      description: Create a new webhook for a specific list.
      operationId: postListsIdWebhooks
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add Webhook'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Webhooks_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Webhooks_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_list_webhook
        methodNameCamel: createListWebhook
      x-codegen-request-body-name: body
  /lists/{list_id}/webhooks/{webhook_id}:
    get:
      tags:
      - lists
      summary: Get webhook info
      description: Get information about a specific webhook.
      operationId: getListsIdWebhooksId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: webhook_id
        in: path
        description: The webhook's id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Webhooks_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Webhooks_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_webhook
        methodNameCamel: getListWebhook
    delete:
      tags:
      - lists
      summary: Delete webhook
      description: Delete a specific webhook in a list.
      operationId: deleteListsIdWebhooksId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: webhook_id
        in: path
        description: The webhook's id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_list_webhook
        methodNameCamel: deleteListWebhook
    patch:
      tags:
      - lists
      summary: Update webhook
      description: Update the settings for an existing webhook.
      operationId: patchListsIdWebhooksId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: webhook_id
        in: path
        description: The webhook's id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add Webhook_1'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Webhooks_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Webhooks_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_list_webhook
        methodNameCamel: updateListWebhook
      x-codegen-request-body-name: body
  /lists/{list_id}/signup-forms:
    get:
      tags:
      - lists
      summary: List signup forms
      description: Get signup forms for a specific list.
      operationId: getListsIdSignupForms
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Signup Forms'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Signup Forms'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_signup_forms
        methodNameCamel: getListSignupForms
    post:
      tags:
      - lists
      summary: Customize signup form
      description: Customize a list's default signup form.
      operationId: postListsIdSignupForms
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup Form'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup Form_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Signup Form_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_list_signup_form
        methodNameCamel: updateListSignupForm
      x-codegen-request-body-name: body
  /lists/{list_id}/locations:
    get:
      tags:
      - lists
      summary: List locations
      description: Get the locations (countries) that the list's subscribers have
        been tagged to based on geocoding their IP address.
      operationId: getListsIdLocations
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List Locations'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/List Locations'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_list_locations
        methodNameCamel: getListLocations
  /lists/{list_id}/surveys:
    get:
      tags:
      - lists
      summary: Get information about all surveys for a list
      description: Get information about all available surveys for a specific list.
      operationId: getListsIdSurveys
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          description: ""
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_all_surveys_for_list
        methodNameCamel: getAllSurveysForList
  /lists/{list_id}/surveys/{survey_id}:
    get:
      tags:
      - lists
      summary: Get survey
      description: Get details about a specific survey.
      operationId: getListsIdSurveysId
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: survey_id
        in: path
        description: The ID of the survey.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Survey ID
        x-title: Survey ID
      responses:
        "200":
          description: ""
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_survey
        methodNameCamel: getSurvey
  /lists/{list_id}/surveys/{survey_id}/actions/publish:
    post:
      tags:
      - Surveys
      summary: Publish a Survey
      description: "Publish a survey that is in draft, unpublished, or has been previously\
        \ published and edited."
      operationId: postListsIdSurveysIdActionsPublish
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: survey_id
        in: path
        description: The ID of the survey.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Survey ID
        x-title: Survey ID
      responses:
        "200":
          description: Survey Published
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: publish_survey
        methodNameCamel: publishSurvey
  /lists/{list_id}/surveys/{survey_id}/actions/unpublish:
    post:
      tags:
      - Surveys
      summary: Unpublish a Survey
      description: Unpublish a survey that has been published.
      operationId: postListsIdSurveysIdActionsUnpublish
      parameters:
      - name: list_id
        in: path
        description: The unique ID for the list.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      - name: survey_id
        in: path
        description: The ID of the survey.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Survey ID
        x-title: Survey ID
      responses:
        "200":
          description: Survey Instance
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: unpublish_survey
        methodNameCamel: unpublishSurvey
  /landing-pages:
    get:
      tags:
      - landingPages
      summary: List landing pages
      description: Get all landing pages.
      operationId: getAllLandingPages
      parameters:
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          x-title: Sort By Field
        x-title: Sort By Field
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      responses:
        "200":
          description: Landing Pages Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_all
        methodNameCamel: getAll
    post:
      tags:
      - landingPages
      summary: Add landing page
      description: Create a new Mailchimp landing page.
      operationId: postAllLandingPages
      parameters:
      - name: use_default_list
        in: query
        description: Will create the Landing Page using the account's Default List
          instead of requiring a list_id.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Use Default List
        x-title: Use Default List
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Landing Page'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing Page_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing Page_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /landing-pages/{page_id}:
    get:
      tags:
      - landingPages
      summary: Get landing page info
      description: Get information about a specific page.
      operationId: getLandingPageId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: page_id
        in: path
        description: The unique id for the page.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "200":
          description: Landing Pages Instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing Page_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing Page_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_page
        methodNameCamel: getPage
    delete:
      tags:
      - landingPages
      summary: Delete landing page
      description: Delete a landing page.
      operationId: deleteLandingPageId
      parameters:
      - name: page_id
        in: path
        description: The unique id for the page.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_page
        methodNameCamel: deletePage
    patch:
      tags:
      - landingPages
      summary: Update landing page
      description: Update a landing page.
      operationId: patchLandingPageId
      parameters:
      - name: page_id
        in: path
        description: The unique id for the page.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Landing Page_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing Page_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing Page_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: update_page
        methodNameCamel: updatePage
      x-codegen-request-body-name: body
  /landing-pages/{page_id}/actions/publish:
    post:
      tags:
      - landingPages
      summary: Publish landing page
      description: "Publish a landing page that is in draft, unpublished, or has been\
        \ previously published and edited."
      operationId: postLandingPageIdActionsPublish
      parameters:
      - name: page_id
        in: path
        description: The unique id for the page.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "200":
          description: Landing Page Published
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing Page_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing Page_1'
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: publish_page
        methodNameCamel: publishPage
  /landing-pages/{page_id}/actions/unpublish:
    post:
      tags:
      - landingPages
      summary: Unpublish landing page
      description: Unpublish a landing page that is in draft or has been published.
      operationId: postLandingPageIdActionsUnpublish
      parameters:
      - name: page_id
        in: path
        description: The unique id for the page.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: unpublish_page
        methodNameCamel: unpublishPage
  /landing-pages/{page_id}/content:
    get:
      tags:
      - landingPages
      summary: Get landing page content
      description: Get the the HTML for your landing page.
      operationId: getLandingPageIdContent
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: page_id
        in: path
        description: The unique id for the page.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Landing Page unique ID
        x-title: Landing Page unique ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing Page Content'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing Page Content'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_page_content
        methodNameCamel: getPageContent
  /reports:
    get:
      tags:
      - reports
      summary: List campaign reports
      description: Get campaign reports.
      operationId: getReports
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: type
        in: query
        description: The campaign type.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
          x-title: Campaign Type
        x-title: Campaign Type
      - name: before_send_time
        in: query
        description: "Restrict the response to campaigns sent before the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Before Send Time
        x-title: Before Send Time
      - name: since_send_time
        in: query
        description: "Restrict the response to campaigns sent after the set time.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          x-title: Since Send Time
        x-title: Since Send Time
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Reports_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Reports_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_all_campaign_reports
        methodNameCamel: getAllCampaignReports
  /reports/{campaign_id}:
    get:
      tags:
      - reports
      summary: Get campaign report
      description: Get report details for a specific sent campaign.
      operationId: getReportsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Report'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_report
        methodNameCamel: getCampaignReport
  /reports/{campaign_id}/abuse-reports:
    get:
      tags:
      - reports
      summary: List abuse reports
      description: Get a list of abuse complaints for a specific campaign.
      operationId: getReportsIdAbuseReportsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abuse Complaints_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Abuse Complaints_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_abuse_reports
        methodNameCamel: getCampaignAbuseReports
  /reports/{campaign_id}/abuse-reports/{report_id}:
    get:
      tags:
      - reports
      summary: Get abuse report
      description: Get information about a specific abuse report for a campaign.
      operationId: getReportsIdAbuseReportsIdId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: report_id
        in: path
        description: The id for the abuse report.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Abuse Complaint_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Abuse Complaint_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_abuse_report
        methodNameCamel: getCampaignAbuseReport
  /reports/{campaign_id}/advice:
    get:
      tags:
      - reports
      summary: List campaign feedback
      description: "Get feedback based on a campaign's statistics. Advice feedback\
        \ is based on campaign stats like opens, clicks, unsubscribes, bounces, and\
        \ more."
      operationId: getReportsIdAdvice
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign Advice Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign Advice Report'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_advice
        methodNameCamel: getCampaignAdvice
  /reports/{campaign_id}/click-details:
    get:
      tags:
      - reports
      summary: List campaign details
      description: Get information about clicks on specific links in your Mailchimp
        campaigns.
      operationId: getReportsIdClickDetails
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Click Detail Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Click Detail Report'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_click_details
        methodNameCamel: getCampaignClickDetails
  /reports/{campaign_id}/click-details/{link_id}:
    get:
      tags:
      - reports
      summary: Get campaign link details
      description: Get click details for a specific link in a campaign.
      operationId: getReportsIdClickDetailsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: link_id
        in: path
        description: The id for the link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Link ID
        x-title: Link ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Click Detail Report_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Click Detail Report_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_click_details_for_link
        methodNameCamel: getCampaignClickDetailsForLink
  /reports/{campaign_id}/click-details/{link_id}/members:
    get:
      tags:
      - reports
      summary: List clicked link subscribers
      description: Get information about list members who clicked on a specific link
        in a campaign.
      operationId: getReportsIdClickDetailsIdMembers
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: link_id
        in: path
        description: The id for the link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Link ID
        x-title: Link ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Click Detail Members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Click Detail Members'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_subscribers_info
        methodNameCamel: getSubscribersInfo
  /reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}:
    get:
      tags:
      - reports
      summary: Get clicked link subscriber
      description: Get information about a specific subscriber who clicked a link
        in a specific campaign.
      operationId: getReportsIdClickDetailsIdMembersId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: link_id
        in: path
        description: The id for the link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Link ID
        x-title: Link ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Click Detail Member'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Click Detail Member'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_subscriber_info
        methodNameCamel: getSubscriberInfo
  /reports/{campaign_id}/open-details:
    get:
      tags:
      - reports
      summary: List campaign open details
      description: Get detailed information about any campaign emails that were opened
        by a list member.
      operationId: getReportsIdOpenDetails
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: since
        in: query
        description: "Restrict results to campaign open events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Campaign opens since
        example: 2016-04-12 12:00:00
        x-title: Campaign opens since
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Open Detail Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Open Detail Report'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_open_details
        methodNameCamel: getCampaignOpenDetails
  /reports/{campaign_id}/open-details/{subscriber_hash}:
    get:
      tags:
      - reports
      summary: Get opened campaign subscriber
      description: Get information about a specific subscriber who opened a campaign.
      operationId: getReportsIdOpenDetailsIdMembersId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Open Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Open Activity'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_subscriber_info_for_opened_campaign
        methodNameCamel: getSubscriberInfoForOpenedCampaign
  /reports/{campaign_id}/domain-performance:
    get:
      tags:
      - reports
      summary: List domain performance stats
      description: Get statistics for the top-performing email domains in a campaign.
      operationId: getReportsIdDomainPerformance
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain Performance'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Domain Performance'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_domain_performance_for_campaign
        methodNameCamel: getDomainPerformanceForCampaign
  /reports/{campaign_id}/eepurl:
    get:
      tags:
      - reports
      summary: List EepURL activity
      description: "Get a summary of social activity for the campaign, tracked by\
        \ EepURL."
      operationId: getReportsIdEepurl
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eepurl Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Eepurl Activity'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_eepurl_activity_for_campaign
        methodNameCamel: getEepurlActivityForCampaign
  /reports/{campaign_id}/email-activity:
    get:
      tags:
      - reports
      summary: List email activity
      description: Get a list of member's subscriber activity in a specific campaign.
      operationId: getReportsIdEmailActivity
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: since
        in: query
        description: "Restrict results to email activity events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Email Activity since
        x-title: Email Activity since
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email Activity'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Email Activity'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_email_activity_for_campaign
        methodNameCamel: getEmailActivityForCampaign
  /reports/{campaign_id}/email-activity/{subscriber_hash}:
    get:
      tags:
      - reports
      summary: Get subscriber email activity
      description: "Get a specific list member's activity in a campaign including\
        \ opens, clicks, and bounces."
      operationId: getReportsIdEmailActivityId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      - name: since
        in: query
        description: "Restrict results to email activity events that occur after a\
          \ specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Email Activity since
        x-title: Email Activity since
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email Activity_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Email Activity_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_email_activity_for_subscriber
        methodNameCamel: getEmailActivityForSubscriber
  /reports/{campaign_id}/locations:
    get:
      tags:
      - reports
      summary: List top open activities
      description: Get top open locations for a specific campaign.
      operationId: getReportsIdLocations
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Open Locations'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Open Locations'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_locations_for_campaign
        methodNameCamel: getLocationsForCampaign
  /reports/{campaign_id}/sent-to:
    get:
      tags:
      - reports
      summary: List campaign recipients
      description: Get information about campaign recipients.
      operationId: getReportsIdSentTo
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SentTo'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/SentTo'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_recipients
        methodNameCamel: getCampaignRecipients
  /reports/{campaign_id}/sent-to/{subscriber_hash}:
    get:
      tags:
      - reports
      summary: Get campaign recipient info
      description: Get information about a specific campaign recipient.
      operationId: getReportsIdSentToId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sent To'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Sent To'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_campaign_recipient
        methodNameCamel: getCampaignRecipient
  /reports/{campaign_id}/sub-reports:
    get:
      tags:
      - reports
      summary: List child campaign reports
      description: Get a list of reports with child campaigns for a specific parent
        campaign.
      operationId: getReportsIdSubReportsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign SubReports'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaign SubReports'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_sub_reports_for_campaign
        methodNameCamel: getSubReportsForCampaign
  /reports/{campaign_id}/unsubscribed:
    get:
      tags:
      - reports
      summary: List unsubscribed members
      description: Get information about members who have unsubscribed from a specific
        campaign.
      operationId: getReportsIdUnsubscribed
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unsubscribes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Unsubscribes'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_unsubscribed_list_for_campaign
        methodNameCamel: getUnsubscribedListForCampaign
  /reports/{campaign_id}/unsubscribed/{subscriber_hash}:
    get:
      tags:
      - reports
      summary: Get unsubscribed member
      description: Get information about a specific list member who unsubscribed from
        a campaign.
      operationId: getReportsIdUnsubscribedId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: subscriber_hash
        in: path
        description: The MD5 hash of the lowercase version of the list member's email
          address.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Subscriber Hash
        x-title: Subscriber Hash
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unsubscribes_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Unsubscribes_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_unsubscribed_list_member
        methodNameCamel: getUnsubscribedListMember
  /reports/{campaign_id}/ecommerce-product-activity:
    get:
      tags:
      - reports
      summary: List campaign product activity
      description: Get breakdown of product activity for a campaign
      operationId: getReportsIdEcommerceProductActivity
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: campaign_id
        in: path
        description: The unique id for the campaign.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - title
          - total_revenue
          - total_purchased
          x-title: Sort By Field
        x-title: Sort By Field
      responses:
        "200":
          description: Ecommerce Product Activity Instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_ecommerce_product_activity_for_campaign
        methodNameCamel: getEcommerceProductActivityForCampaign
  /templates:
    get:
      tags:
      - templates
      summary: List templates
      description: Get a list of an account's available templates.
      operationId: getTemplates
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: created_by
        in: query
        description: The Mailchimp account user who created the template.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Created By
        x-title: Created By
      - name: since_date_created
        in: query
        description: "Restrict the response to templates created after the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Since Date Created
        x-title: Since Date Created
      - name: before_date_created
        in: query
        description: "Restrict the response to templates created before the set date.\
          \ Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Before Date Created
        x-title: Before Date Created
      - name: type
        in: query
        description: Limit results based on template type.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Template Type
        x-title: Template Type
      - name: category
        in: query
        description: Limit results based on category.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Category
        x-title: Category
      - name: folder_id
        in: query
        description: The unique folder id.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Folder ID
        x-title: Folder ID
      - name: sort_field
        in: query
        description: Returns user templates sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - date_created
          - date_edited
          - name
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Templates'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
    post:
      tags:
      - templates
      summary: Add template
      description: Create a new template for the account. Only Classic templates are
        supported.
      operationId: postTemplates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template Instance'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template Instance_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template Instance_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create
        methodNameCamel: create
      x-codegen-request-body-name: body
  /templates/{template_id}:
    get:
      tags:
      - templates
      summary: Get template info
      description: Get information about a specific template.
      operationId: getTemplatesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: template_id
        in: path
        description: The unique id for the template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Template ID
        x-title: Template ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template Instance_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template Instance_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_template
        methodNameCamel: getTemplate
    delete:
      tags:
      - templates
      summary: Delete template
      description: Delete a specific template.
      operationId: deleteTemplatesId
      parameters:
      - name: template_id
        in: path
        description: The unique id for the template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Template ID
        x-title: Template ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_template
        methodNameCamel: deleteTemplate
    patch:
      tags:
      - templates
      summary: Update template
      description: "Update the name, HTML, or `folder_id` of an existing template."
      operationId: patchTemplatesId
      parameters:
      - name: template_id
        in: path
        description: The unique id for the template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Template ID
        x-title: Template ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template Instance_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template Instance_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template Instance_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_template
        methodNameCamel: updateTemplate
      x-codegen-request-body-name: body
  /templates/{template_id}/default-content:
    get:
      tags:
      - templates
      summary: View default content
      description: "Get the sections that you can edit in a template, including each\
        \ section's default content."
      operationId: getTemplatesIdDefaultContent
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: template_id
        in: path
        description: The unique id for the template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Template ID
        x-title: Template ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template Default Content'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Template Default Content'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_default_content_for_template
        methodNameCamel: getDefaultContentForTemplate
  /ecommerce/orders:
    get:
      tags:
      - ecommerce
      summary: List account orders
      description: Get information about an account's orders.
      operationId: getEcommerceOrders
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: campaign_id
        in: query
        description: Restrict results to orders with a specific `campaign_id` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: outreach_id
        in: query
        description: Restrict results to orders with a specific `outreach_id` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: customer_id
        in: query
        description: Restrict results to orders made by a specific customer.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      - name: has_outreach
        in: query
        description: "Restrict results to orders that have an outreach attached. For\
          \ example, an email campaign or Facebook ad."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Has Outreach
        x-title: Has Outreach
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Orders'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: orders
        methodNameCamel: orders
  /ecommerce/stores:
    get:
      tags:
      - ecommerce
      summary: List stores
      description: Get information about all stores in the account.
      operationId: getEcommerceStores
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Stores'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Stores'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: stores
        methodNameCamel: stores
    post:
      tags:
      - ecommerce
      summary: Add store
      description: Add a new store to your Mailchimp account.
      operationId: postEcommerceStores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Store'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Store_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Store_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_store
        methodNameCamel: addStore
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}:
    get:
      tags:
      - ecommerce
      summary: Get store info
      description: Get information about a specific store.
      operationId: getEcommerceStoresId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Store_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Store_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_store
        methodNameCamel: getStore
    delete:
      tags:
      - ecommerce
      summary: Delete store
      description: "Delete a store. Deleting a store will also delete any associated\
        \ subresources, including Customers, Orders, Products, and Carts."
      operationId: deleteEcommerceStoresId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "204":
          description: Empty Response
          content:
            application/json:
              schema:
                type: object
                description: Empty Response
                x-content-type: application/json
            application/problem+json:
              schema:
                type: object
                description: Empty Response
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_store
        methodNameCamel: deleteStore
    patch:
      tags:
      - ecommerce
      summary: Update store
      description: Update a store.
      operationId: patchEcommerceStoresId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Store_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Store_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Store_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_store
        methodNameCamel: updateStore
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/carts:
    get:
      tags:
      - ecommerce
      summary: List carts
      description: Get information about a store's carts.
      operationId: getEcommerceStoresIdCarts
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Carts'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_store_carts
        methodNameCamel: getStoreCarts
    post:
      tags:
      - ecommerce
      summary: Add cart
      description: Add a new cart to a store.
      operationId: postEcommerceStoresIdCarts
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Cart'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_store_cart
        methodNameCamel: addStoreCart
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/carts/{cart_id}:
    get:
      tags:
      - ecommerce
      summary: Get cart info
      description: Get information about a specific cart.
      operationId: getEcommerceStoresIdCartsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: cart_id
        in: path
        description: The id for the cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_store_cart
        methodNameCamel: getStoreCart
    delete:
      tags:
      - ecommerce
      summary: Delete cart
      description: Delete a cart.
      operationId: deleteEcommerceStoresIdCartsId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: cart_id
        in: path
        description: The id for the cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_store_cart
        methodNameCamel: deleteStoreCart
    patch:
      tags:
      - ecommerce
      summary: Update cart
      description: Update a specific cart.
      operationId: patchEcommerceStoresIdCartsId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: cart_id
        in: path
        description: The id for the cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Cart_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_store_cart
        methodNameCamel: updateStoreCart
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/carts/{cart_id}/lines:
    get:
      tags:
      - ecommerce
      summary: List cart line items
      description: Get information about a cart's line items.
      operationId: getEcommerceStoresIdCartsIdLines
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: cart_id
        in: path
        description: The id for the cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart Lines'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Cart Lines'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_all_cart_line_items
        methodNameCamel: getAllCartLineItems
    post:
      tags:
      - ecommerce
      summary: Add cart line item
      description: Add a new line item to an existing cart.
      operationId: postEcommerceStoresIdCartsIdLines
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: cart_id
        in: path
        description: The id for the cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Cart Line Item_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart Line Item_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart Line Item_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_cart_line_item
        methodNameCamel: addCartLineItem
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}:
    get:
      tags:
      - ecommerce
      summary: Get cart line item
      description: Get information about a specific cart line item.
      operationId: getEcommerceStoresIdCartsIdLinesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: cart_id
        in: path
        description: The id for the cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      - name: line_id
        in: path
        description: The id for the line item of a cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart Line ID
        x-title: Cart Line ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart Line Item_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart Line Item_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_cart_line_item
        methodNameCamel: getCartLineItem
    delete:
      tags:
      - ecommerce
      summary: Delete cart line item
      description: Delete a specific cart line item.
      operationId: deleteEcommerceStoresIdCartsLinesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: cart_id
        in: path
        description: The id for the cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      - name: line_id
        in: path
        description: The id for the line item of a cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart Line ID
        x-title: Cart Line ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_cart_line_item
        methodNameCamel: deleteCartLineItem
    patch:
      tags:
      - ecommerce
      summary: Update cart line item
      description: Update a specific cart line item.
      operationId: patchEcommerceStoresIdCartsIdLinesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: cart_id
        in: path
        description: The id for the cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart ID
        x-title: Cart ID
      - name: line_id
        in: path
        description: The id for the line item of a cart.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Cart Line ID
        x-title: Cart Line ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Cart Line Item_4'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart Line Item_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Cart Line Item_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_cart_line_item
        methodNameCamel: updateCartLineItem
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/customers:
    get:
      tags:
      - ecommerce
      summary: List customers
      description: Get information about a store's customers.
      operationId: getEcommerceStoresIdCustomers
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: email_address
        in: query
        description: Restrict the response to customers with the email address.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Customer Email Address
        x-title: Customer Email Address
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Customers'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_all_store_customers
        methodNameCamel: getAllStoreCustomers
    post:
      tags:
      - ecommerce
      summary: Add customer
      description: Add a new customer to a store.
      operationId: postEcommerceStoresIdCustomers
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Customer_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Customer_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Customer_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_store_customer
        methodNameCamel: addStoreCustomer
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/customers/{customer_id}:
    get:
      tags:
      - ecommerce
      summary: Get customer info
      description: Get information about a specific customer.
      operationId: getEcommerceStoresIdCustomersId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: customer_id
        in: path
        description: The id for the customer of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Customer_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Customer_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_store_customer
        methodNameCamel: getStoreCustomer
    put:
      tags:
      - ecommerce
      summary: Add or update customer
      description: Add or update a customer.
      operationId: putEcommerceStoresIdCustomersId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: customer_id
        in: path
        description: The id for the customer of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Customer_4'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Customer_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Customer_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: set_store_customer
        methodNameCamel: setStoreCustomer
      x-codegen-request-body-name: body
    delete:
      tags:
      - ecommerce
      summary: Delete customer
      description: Delete a customer from a store.
      operationId: deleteEcommerceStoresIdCustomersId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: customer_id
        in: path
        description: The id for the customer of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_store_customer
        methodNameCamel: deleteStoreCustomer
    patch:
      tags:
      - ecommerce
      summary: Update customer
      description: Update a customer.
      operationId: patchEcommerceStoresIdCustomersId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: customer_id
        in: path
        description: The id for the customer of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Customer_5'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Customer_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Customer_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_store_customer
        methodNameCamel: updateStoreCustomer
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/promo-rules:
    get:
      tags:
      - ecommerce
      summary: List promo rules
      description: Get information about a store's promo rules.
      operationId: getEcommerceStoresIdPromorules
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promo Rules'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Promo Rules'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: list_promo_rules
        methodNameCamel: listPromoRules
    post:
      tags:
      - ecommerce
      summary: Add promo rule
      description: Add a new promo rule to a store.
      operationId: postEcommerceStoresIdPromorules
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Promo Rule'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Rule_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Rule_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_promo_rules
        methodNameCamel: addPromoRules
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}:
    get:
      tags:
      - ecommerce
      summary: Get promo rule
      description: Get information about a specific promo rule.
      operationId: getEcommerceStoresIdPromorulesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: promo_rule_id
        in: path
        description: The id for the promo rule of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Rule_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Rule_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_promo_rule
        methodNameCamel: getPromoRule
    delete:
      tags:
      - ecommerce
      summary: Delete promo rule
      description: Delete a promo rule from a store.
      operationId: deleteEcommerceStoresIdPromorulesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: promo_rule_id
        in: path
        description: The id for the promo rule of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_promo_rule
        methodNameCamel: deletePromoRule
    patch:
      tags:
      - ecommerce
      summary: Update promo rule
      description: Update a promo rule.
      operationId: patchEcommerceStoresIdPromorulesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: promo_rule_id
        in: path
        description: The id for the promo rule of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Promo Rule_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Rule_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Rule_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_promo_rule
        methodNameCamel: updatePromoRule
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes:
    get:
      tags:
      - ecommerce
      summary: List promo codes
      description: Get information about a store's promo codes.
      operationId: getEcommerceStoresIdPromocodes
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: promo_rule_id
        in: path
        description: The id for the promo rule of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promo Codes'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Promo Codes'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_promo_codes
        methodNameCamel: getPromoCodes
    post:
      tags:
      - ecommerce
      summary: Add promo code
      description: Add a new promo code to a store.
      operationId: postEcommerceStoresIdPromocodes
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: promo_rule_id
        in: path
        description: The id for the promo rule of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Promo Code'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Code_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Code_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_promo_code
        methodNameCamel: addPromoCode
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}:
    get:
      tags:
      - ecommerce
      summary: Get promo code
      description: Get information about a specific promo code.
      operationId: getEcommerceStoresIdPromocodesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: promo_rule_id
        in: path
        description: The id for the promo rule of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      - name: promo_code_id
        in: path
        description: The id for the promo code of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Code ID
        x-title: Promo Code ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Code_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Code_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_promo_code
        methodNameCamel: getPromoCode
    delete:
      tags:
      - ecommerce
      summary: Delete promo code
      description: Delete a promo code from a store.
      operationId: deleteEcommerceStoresIdPromocodesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: promo_rule_id
        in: path
        description: The id for the promo rule of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      - name: promo_code_id
        in: path
        description: The id for the promo code of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Code ID
        x-title: Promo Code ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_promo_code
        methodNameCamel: deletePromoCode
    patch:
      tags:
      - ecommerce
      summary: Update promo code
      description: Update a promo code.
      operationId: patchEcommerceStoresIdPromocodesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: promo_rule_id
        in: path
        description: The id for the promo rule of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Rule ID
        x-title: Promo Rule ID
      - name: promo_code_id
        in: path
        description: The id for the promo code of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Promo Code ID
        x-title: Promo Code ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Promo Code_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Code_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Promo Code_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_promo_code
        methodNameCamel: updatePromoCode
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/orders:
    get:
      tags:
      - ecommerce
      summary: List orders
      description: Get information about a store's orders.
      operationId: getEcommerceStoresIdOrders
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: customer_id
        in: query
        description: Restrict results to orders made by a specific customer.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Customer ID
        x-title: Customer ID
      - name: has_outreach
        in: query
        description: "Restrict results to orders that have an outreach attached. For\
          \ example, an email campaign or Facebook ad."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          x-title: Has Outreach
        x-title: Has Outreach
      - name: campaign_id
        in: query
        description: Restrict results to orders with a specific `campaign_id` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Campaign ID
        x-title: Campaign ID
      - name: outreach_id
        in: query
        description: Restrict results to orders with a specific `outreach_id` value.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Orders_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_store_orders
        methodNameCamel: getStoreOrders
    post:
      tags:
      - ecommerce
      summary: Add order
      description: Add a new order to a store.
      operationId: postEcommerceStoresIdOrders
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Order'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_store_order
        methodNameCamel: addStoreOrder
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/orders/{order_id}:
    get:
      tags:
      - ecommerce
      summary: Get order info
      description: Get information about a specific order.
      operationId: getEcommerceStoresIdOrdersId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: order_id
        in: path
        description: The id for the order in a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_order
        methodNameCamel: getOrder
    delete:
      tags:
      - ecommerce
      summary: Delete order
      description: Delete an order.
      operationId: deleteEcommerceStoresIdOrdersId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: order_id
        in: path
        description: The id for the order in a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_order
        methodNameCamel: deleteOrder
    patch:
      tags:
      - ecommerce
      summary: Update order
      description: Update a specific order.
      operationId: patchEcommerceStoresIdOrdersId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: order_id
        in: path
        description: The id for the order in a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Order_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_order
        methodNameCamel: updateOrder
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/orders/{order_id}/lines:
    get:
      tags:
      - ecommerce
      summary: List order line items
      description: Get information about an order's line items.
      operationId: getEcommerceStoresIdOrdersIdLines
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: order_id
        in: path
        description: The id for the order in a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order Lines'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Order Lines'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_all_order_line_items
        methodNameCamel: getAllOrderLineItems
    post:
      tags:
      - ecommerce
      summary: Add order line item
      description: Add a new line item to an existing order.
      operationId: postEcommerceStoresIdOrdersIdLines
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: order_id
        in: path
        description: The id for the order in a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Order Line Item_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order Line Item_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order Line Item_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_order_line_item
        methodNameCamel: addOrderLineItem
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}:
    get:
      tags:
      - ecommerce
      summary: Get order line item
      description: Get information about a specific order line item.
      operationId: getEcommerceStoresIdOrdersIdLinesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: order_id
        in: path
        description: The id for the order in a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      - name: line_id
        in: path
        description: The id for the line item of an order.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order Line ID
        x-title: Order Line ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order Line Item_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order Line Item_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_order_line_item
        methodNameCamel: getOrderLineItem
    delete:
      tags:
      - ecommerce
      summary: Delete order line item
      description: Delete a specific order line item.
      operationId: deleteEcommerceStoresIdOrdersIdLinesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: order_id
        in: path
        description: The id for the order in a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      - name: line_id
        in: path
        description: The id for the line item of an order.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order Line ID
        x-title: Order Line ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_order_line_item
        methodNameCamel: deleteOrderLineItem
    patch:
      tags:
      - ecommerce
      summary: Update order line item
      description: Update a specific order line item.
      operationId: patchEcommerceStoresIdOrdersIdLinesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: order_id
        in: path
        description: The id for the order in a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order ID
        x-title: Order ID
      - name: line_id
        in: path
        description: The id for the line item of an order.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Order Line ID
        x-title: Order Line ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Order Line Item_4'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order Line Item_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Order Line Item_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_order_line_item
        methodNameCamel: updateOrderLineItem
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products:
    get:
      tags:
      - ecommerce
      summary: List product
      description: Get information about a store's products.
      operationId: getEcommerceStoresIdProducts
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Products'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_all_store_products
        methodNameCamel: getAllStoreProducts
    post:
      tags:
      - ecommerce
      summary: Add product
      description: Add a new product to a store.
      operationId: postEcommerceStoresIdProducts
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Product'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_store_product
        methodNameCamel: addStoreProduct
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}:
    get:
      tags:
      - ecommerce
      summary: Get product info
      description: Get information about a specific product.
      operationId: getEcommerceStoresIdProductsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_store_product
        methodNameCamel: getStoreProduct
    delete:
      tags:
      - ecommerce
      summary: Delete product
      description: Delete a product.
      operationId: deleteEcommerceStoresIdProductsId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_store_product
        methodNameCamel: deleteStoreProduct
    patch:
      tags:
      - ecommerce
      summary: Update product
      description: Update a specific product.
      operationId: patchEcommerceStoresIdProductsId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Product_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_store_product
        methodNameCamel: updateStoreProduct
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}/variants:
    get:
      tags:
      - ecommerce
      summary: List product variants
      description: Get information about a product's variants.
      operationId: getEcommerceStoresIdProductsIdVariants
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variants'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variants'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_product_variants
        methodNameCamel: getProductVariants
    post:
      tags:
      - ecommerce
      summary: Add product variant
      description: Add a new variant to the product.
      operationId: postEcommerceStoresIdProductsIdVariants
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Product Variant_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variant_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variant_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_product_variants
        methodNameCamel: addProductVariants
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}:
    get:
      tags:
      - ecommerce
      summary: Get product variant info
      description: Get information about a specific product variant.
      operationId: getEcommerceStoresIdProductsIdVariantsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - name: variant_id
        in: path
        description: The id for the product variant.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product Variant ID
        x-title: Product Variant ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variant_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variant_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_product_variant
        methodNameCamel: getProductVariant
    put:
      tags:
      - ecommerce
      summary: Add or update product variant
      description: Add or update a product variant.
      operationId: putEcommerceStoresIdProductsIdVariantsId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - name: variant_id
        in: path
        description: The id for the product variant.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product Variant ID
        x-title: Product Variant ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Product Variant_4'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variant_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variant_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_product_variant
        methodNameCamel: addProductVariant
      x-codegen-request-body-name: body
    delete:
      tags:
      - ecommerce
      summary: Delete product variant
      description: Delete a product variant.
      operationId: deleteEcommerceStoresIdProductsIdVariantsId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - name: variant_id
        in: path
        description: The id for the product variant.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product Variant ID
        x-title: Product Variant ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_product_variant
        methodNameCamel: deleteProductVariant
    patch:
      tags:
      - ecommerce
      summary: Update product variant
      description: Update a product variant.
      operationId: patchEcommerceStoresIdProductsIdVariantsId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - name: variant_id
        in: path
        description: The id for the product variant.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product Variant ID
        x-title: Product Variant ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Product Variant_5'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variant_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Variant_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_product_variant
        methodNameCamel: updateProductVariant
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}/images:
    get:
      tags:
      - ecommerce
      summary: List product images
      description: Get information about a product's images.
      operationId: getEcommerceStoresIdProductsIdImages
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Images'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Images'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_product_images
        methodNameCamel: getProductImages
    post:
      tags:
      - ecommerce
      summary: Add product image
      description: Add a new image to the product.
      operationId: postEcommerceStoresIdProductsIdImages
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Product Image_2'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Image_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Image_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: add_product_image
        methodNameCamel: addProductImage
      x-codegen-request-body-name: body
  /ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}:
    get:
      tags:
      - ecommerce
      summary: Get product image info
      description: Get information about a specific product image.
      operationId: getEcommerceStoresIdProductsIdImagesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - name: image_id
        in: path
        description: The id for the product image.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product Image ID
        x-title: Product Image ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Image_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Image_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_product_image
        methodNameCamel: getProductImage
    delete:
      tags:
      - ecommerce
      summary: Delete product image
      description: Delete a product image.
      operationId: deleteEcommerceStoresIdProductsIdImagesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - name: image_id
        in: path
        description: The id for the product image.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product Image ID
        x-title: Product Image ID
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_product_image
        methodNameCamel: deleteProductImage
    patch:
      tags:
      - ecommerce
      summary: Update product image
      description: Update a product image.
      operationId: patchEcommerceStoresIdProductsIdImagesId
      parameters:
      - name: store_id
        in: path
        description: The store id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Store ID
        x-title: Store ID
      - name: product_id
        in: path
        description: The id for the product of a store.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product ID
        x-title: Product ID
      - name: image_id
        in: path
        description: The id for the product image.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Product Image ID
        x-title: Product Image ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ecommerce Product Image_4'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Image_3'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Ecommerce Product Image_3'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: update_product_image
        methodNameCamel: updateProductImage
      x-codegen-request-body-name: body
  /search-campaigns:
    get:
      tags:
      - searchCampaigns
      summary: Search campaigns
      description: Search all campaigns for the specified query terms.
      operationId: getSearchCampaigns
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: query
        in: query
        description: The search query used to filter results.
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-title: Query
        x-title: Query
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaigns'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Campaigns'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: search
        methodNameCamel: search
  /search-members:
    get:
      tags:
      - searchMembers
      summary: Search members
      description: "Search for list members. This search can be restricted to a specific\
        \ list, or can be used to search across all lists in an account."
      operationId: getSearchMembers
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: query
        in: query
        description: "The search query used to filter results. Query should be a valid\
          \ email, or a string representing a contact's first or last name."
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-title: Query
        x-title: Query
      - name: list_id
        in: query
        description: The unique id for the list.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: List ID
        x-title: List ID
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Members'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: search
        methodNameCamel: search
  /ping:
    get:
      tags:
      - ping
      summary: Ping
      description: A health check for the API that won't return any account-specific
        information.
      operationId: getPing
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API health status'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/API health status'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get
        methodNameCamel: get
  /facebook-ads:
    get:
      tags:
      - facebookAds
      summary: List facebook ads
      description: Get list of Facebook ads.
      operationId: getAllFacebookAds
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - end_time
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          description: List of Facebook Ad Instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: list
        methodNameCamel: list
  /facebook-ads/{outreach_id}:
    get:
      tags:
      - facebookAds
      summary: Get facebook ad info
      description: Get details of a Facebook ad.
      operationId: getFacebookAdsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: Facebook Ad Instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_ad
        methodNameCamel: getAd
  /reporting/facebook-ads:
    get:
      tags:
      - reporting
      summary: List facebook ads reports
      description: Get reports of Facebook ads.
      operationId: getReportingFacebookAds
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - end_time
          x-title: Sort By Field
        x-title: Sort By Field
      - name: sort_dir
        in: query
        description: Determines the order direction for sorted results.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
          x-title: Sort Direction
        x-title: Sort Direction
      responses:
        "200":
          description: List of Facebook Ad Report Instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_facebook_ads_report_all
        methodNameCamel: getFacebookAdsReportAll
  /reporting/facebook-ads/{outreach_id}:
    get:
      tags:
      - reporting
      summary: Get facebook ad report
      description: Get report of a Facebook ad.
      operationId: getReportingFacebookAdsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: Facebook Ad report Instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_facebook_ad_report
        methodNameCamel: getFacebookAdReport
  /reporting/facebook-ads/{outreach_id}/ecommerce-product-activity:
    get:
      tags:
      - reporting
      summary: List facebook ecommerce report
      description: Get breakdown of product activity for an outreach.
      operationId: getReportingFacebookAdsIdEcommerceProductActivity
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: sort_field
        in: query
        description: Returns files sorted by the specified field.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - title
          - total_revenue
          - total_purchased
          x-title: Sort By Field
        x-title: Sort By Field
      responses:
        "200":
          description: Ecommerce Product Activity Instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_facebook_ad_product_activity_report
        methodNameCamel: getFacebookAdProductActivityReport
  /reporting/landing-pages/{outreach_id}:
    get:
      tags:
      - reporting
      summary: Get landing page report
      description: Get report of a landing page.
      operationId: getReportingLandingPagesId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      responses:
        "200":
          description: Landing Page Report Instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing Page Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Landing Page Report'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_landing_page_report
        methodNameCamel: getLandingPageReport
  /reporting/landing-pages:
    get:
      tags:
      - reporting
      summary: List landing pages reports
      description: Get reports of landing pages.
      operationId: getReportingLandingPages
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: List of Landing Page Report Instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_landing_page_reports_all
        methodNameCamel: getLandingPageReportsAll
  /reporting/surveys:
    get:
      tags:
      - reporting
      summary: List survey reports
      description: Get reports for surveys.
      operationId: getReportingSurveys
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      responses:
        "200":
          description: List of Survey Report Instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_survey_reports_all
        methodNameCamel: getSurveyReportsAll
  /reporting/surveys/{outreach_id}:
    get:
      tags:
      - reporting
      summary: Get survey report
      description: Get report for a survey.
      operationId: getReportingSurveysId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      responses:
        "200":
          description: Survey Report Instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey Report'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Survey Report'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_survey_report
        methodNameCamel: getSurveyReport
  /reporting/surveys/{outreach_id}/questions:
    get:
      tags:
      - reporting
      summary: List survey question reports
      description: Get reports for survey questions.
      operationId: getReportingSurveysIdQuestions
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      responses:
        "200":
          description: List of Survey Question Report Instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_survey_question_reports_all
        methodNameCamel: getSurveyQuestionReportsAll
  /reporting/surveys/{outreach_id}/questions/{question_id}:
    get:
      tags:
      - reporting
      summary: Get survey question report
      description: Get report for a survey question.
      operationId: getReportingSurveysIdQuestionsId
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: question_id
        in: path
        description: The ID of the survey question.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Question ID
        x-title: Question ID
      responses:
        "200":
          description: Survey Question Report Instance
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_survey_question_report
        methodNameCamel: getSurveyQuestionReport
  /reporting/surveys/{outreach_id}/questions/{question_id}/answers:
    get:
      tags:
      - reporting
      summary: List answers for question
      description: Get answers for a survey question.
      operationId: getReportingSurveysIdQuestionsIdAnswers
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: question_id
        in: path
        description: The ID of the survey question.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Question ID
        x-title: Question ID
      responses:
        "200":
          description: List of Survey Question Answers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_survey_question_answers
        methodNameCamel: getSurveyQuestionAnswers
  /reporting/surveys/{outreach_id}/responses:
    get:
      tags:
      - reporting
      summary: List survey responses
      description: Get responses to a survey.
      operationId: getReportingSurveysIdResponses
      parameters:
      - name: fields
        in: query
        description: A comma-separated list of fields to return. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Fields
        x-title: Fields
      - name: exclude_fields
        in: query
        description: A comma-separated list of fields to exclude. Reference parameters
          of sub-objects with dot notation.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
          x-title: Exclude Fields
        x-title: Exclude Fields
      - name: count
        in: query
        description: The number of records to return. Default value is 10. Maximum
          value is 1000
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          default: 10
          x-title: Count
        x-title: Count
      - name: offset
        in: query
        description: "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination),\
          \ this it the number of records from a collection to skip. Default value\
          \ is 0."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
          x-title: Offset
        x-title: Offset
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: answered_question
        in: query
        description: The ID of the question that was answered.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          x-title: Answered Question
        x-title: Answered Question
      - name: chose_answer
        in: query
        description: The ID of the option chosen to filter responses on.
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-title: Chose Answer
        x-title: Chose Answer
      responses:
        "200":
          description: List of survey responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_survey_responses_all
        methodNameCamel: getSurveyResponsesAll
  /reporting/surveys/{outreach_id}/responses/{response_id}:
    get:
      tags:
      - reporting
      summary: Get survey response
      description: Get a single survey response.
      operationId: getReportingSurveysIdResponsesId
      parameters:
      - name: outreach_id
        in: path
        description: The outreach id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Outreach ID
        x-title: Outreach ID
      - name: response_id
        in: path
        description: The ID of the survey response.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Response ID
        x-title: Response ID
      responses:
        "200":
          description: Get a single survey response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Survey Response'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      x-custom-config:
        methodNameSnake: get_survey_response
        methodNameCamel: getSurveyResponse
  /verified-domains/{domain_name}:
    get:
      tags:
      - verifiedDomains
      summary: Get domain info
      description: Get the details for a single domain on the account.
      operationId: getVerifiedDomain
      parameters:
      - name: domain_name
        in: path
        description: The domain name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Domain Name
        x-title: Domain Name
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verified Domains'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Verified Domains'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_domain
        methodNameCamel: getDomain
    delete:
      tags:
      - verifiedDomains
      summary: Delete domain
      description: Delete a verified domain from the account.
      operationId: deleteVerifiedDomain
      parameters:
      - name: domain_name
        in: path
        description: The domain name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Domain Name
        x-title: Domain Name
      responses:
        "204":
          description: Empty Response
          content: {}
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: delete_domain
        methodNameCamel: deleteDomain
  /verified-domains/{domain_name}/actions/verify:
    post:
      tags:
      - verifiedDomains
      summary: Verify domain
      description: Verify a domain for sending.
      operationId: verifyDomain
      parameters:
      - name: domain_name
        in: path
        description: The domain name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-title: Domain Name
        x-title: Domain Name
      requestBody:
        content:
          application/json:
            schema:
              $ref: Verify a domain for sending.
        required: true
      responses:
        "200":
          description: The domain being verified for sending.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verified Domains'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Verified Domains'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: submit_domain_verification
        methodNameCamel: submitDomainVerification
      x-codegen-request-body-name: body
  /verified-domains:
    get:
      tags:
      - verifiedDomains
      summary: List sending domains
      description: Get all of the sending domains on the account.
      operationId: getVerifiedDomains
      responses:
        "200":
          description: The domains on the account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verified Domains_1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Verified Domains_1'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: get_verified_domains_all
        methodNameCamel: getVerifiedDomainsAll
    post:
      tags:
      - verifiedDomains
      summary: Add domain to account
      description: Add a domain to the account.
      operationId: createVerifiedDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verified Domains_2'
        required: true
      responses:
        "200":
          description: The newly-created domain.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verified Domains'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Verified Domains'
        default:
          description: An error generated by the Mailchimp API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem Detail Document'
      deprecated: false
      x-custom-config:
        methodNameSnake: create_verified_domain
        methodNameCamel: createVerifiedDomain
      x-codegen-request-body-name: body
components:
  schemas:
    List Contact:
      title: List Contact
      required:
      - address1
      - city
      - company
      - country
      type: object
      properties:
        company:
          title: Company Name
          type: string
          description: The company name for the list.
        address1:
          title: Address
          type: string
          description: The street address for the list contact.
        address2:
          title: Address
          type: string
          description: The street address for the list contact.
        city:
          title: City
          type: string
          description: The city for the list contact.
        state:
          title: State
          type: string
          description: The state for the list contact.
        zip:
          title: Postal Code
          type: string
          description: The postal or zip code for the list contact.
        country:
          title: Country Code
          type: string
          description: A two-character ISO3166 country code. Defaults to US if invalid.
        phone:
          title: Phone Number
          type: string
          description: The phone number for the list contact.
      description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
        \ to comply with international spam laws."
      example: null
    Collection of Member Activity Events:
      title: Collection of Member Activity Events
      type: object
      properties:
        goals:
          title: Goal Activity
          type: array
          description: The last 50 Goal events triggered by a member.
          items:
            $ref: '#/components/schemas/Goal'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The last 50 Goal events for a member on a specific list.
      example:
        email_id: email_id
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
        goals:
        - goal_id: 0
          data: data
          last_visited_at: 2000-01-23T04:56:07.000+00:00
          event: event
        - goal_id: 0
          data: data
          last_visited_at: 2000-01-23T04:56:07.000+00:00
          event: event
    Salesforce CRM Tracking_1:
      title: Salesforce CRM Tracking
      type: object
      properties:
        campaign:
          title: Salesforce Campaign
          type: boolean
          description: Create a campaign in a connected Salesforce account.
        notes:
          title: Salesforce Note
          type: boolean
          description: Update contact notes for a campaign based on a subscriber's
            email address.
      description: Deprecated
      example:
        notes: true
        campaign: true
    Sending Schedule:
      title: Sending Schedule
      type: object
      properties:
        hour:
          title: Sending Hour
          maximum: 23
          minimum: 0
          type: integer
          description: "The hour to send the campaign in local time. Acceptable hours\
            \ are 0-23. For example, '4' would be 4am in [your account's default time\
            \ zone](https://mailchimp.com/help/set-account-defaults/)."
        daily_send:
          $ref: '#/components/schemas/Daily Sending Days'
        weekly_send_day:
          title: Weekly Sending Day
          type: string
          description: The day of the week to send a weekly RSS Campaign.
          enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
        monthly_send_date:
          title: Monthly Sending Day
          maximum: 31
          minimum: 0
          type: number
          description: "The day of the month to send a monthly RSS Campaign. Acceptable\
            \ days are 0-31, where '0' is always the last day of a month. Months with\
            \ fewer than the selected number of days will not have an RSS campaign\
            \ sent out that day. For example, RSS Campaigns set to send on the 30th\
            \ will not go out in February."
      description: The schedule for sending the RSS Campaign.
      example:
        hour: 2
        weekly_send_day: sunday
        daily_send:
          sunday: true
          saturday: true
          tuesday: true
          wednesday: true
          thursday: true
          friday: true
          monday: true
        monthly_send_date: 3.1764016704468894
    Email Activity:
      title: Email Activity
      type: object
      properties:
        emails:
          title: Sent To
          type: array
          description: An array of members that were sent the campaign.
          items:
            $ref: '#/components/schemas/Email Activity_2'
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the sent campaign.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of member's subscriber activity in a specific campaign.
      example:
        emails:
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          activity:
          - ip: ip
            action: action
            type: type
            url: url
            timestamp: 2000-01-23T04:56:07.000+00:00
          - ip: ip
            action: action
            type: type
            url: url
            timestamp: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          list_is_active: true
          campaign_id: campaign_id
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          activity:
          - ip: ip
            action: action
            type: type
            url: url
            timestamp: 2000-01-23T04:56:07.000+00:00
          - ip: ip
            action: action
            type: type
            url: url
            timestamp: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          list_is_active: true
          campaign_id: campaign_id
        _links:
        - null
        - null
        total_items: 0
        campaign_id: campaign_id
    Template Instance:
      title: Template Instance
      required:
      - html
      - name
      type: object
      properties:
        name:
          title: Template Name
          type: string
          description: The name of the template.
          example: Freddie's Jokes
        folder_id:
          title: Folder ID
          type: string
          description: The id of the folder the template is currently in.
          example: a4b830b
        html:
          title: Template HTML
          type: string
          description: "The raw HTML for the template. We  support the Mailchimp [Template\
            \ Language](https://mailchimp.com/help/getting-started-with-mailchimps-template-language/)\
            \ in any HTML code passed via the API."
      description: Information about a specific template.
    Orders_1_promos:
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The Promo Code
        amount_discounted:
          title: Amount Discounted
          type: number
          description: "The amount of discount applied on the total price. For example\
            \ if the total cost was $100 and the customer paid $95.5, amount_discounted\
            \ will be 4.5 For free shipping set amount_discounted to 0"
        type:
          title: Type
          type: string
          description: Type of discount. For free shipping set type to fixed
          enum:
          - fixed
          - percentage
      example:
        code: code
        amount_discounted: 5.637376656633329
        type: fixed
    Orders_1:
      title: Orders
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The unique identifier for the store.
        orders:
          title: Orders
          type: array
          description: "An array of objects, each representing an order in a store."
          items:
            $ref: '#/components/schemas/Ecommerce Order_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of orders in a store.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        orders:
        - discount_total: 6.027456183070403
          fulfillment_status: fulfillment_status
          tax_total: 1.4658129805029452
          _links:
          - null
          - null
          processed_at_foreign: 2015-07-15T19:28:00Z
          billing_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          currency_code: currency_code
          landing_site: http://www.example.com?source=abc
          order_url: order_url
          tracking_number: tracking_number
          id: id
          shipping_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          updated_at_foreign: 2015-07-15T19:28:00Z
          lines:
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - null
            - null
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - null
            - null
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          promos:
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          tracking_url: tracking_url
          campaign_id: 839488a60b
          cancelled_at_foreign: 2015-07-15T19:28:00Z
          store_id: store_id
          shipping_total: 5.962133916683182
          outreach:
            published_time: 2017-06-06T13:56:12Z
            name: Freddie's Jokes
            id: 839488a60b
            type: regular
          tracking_code: prec
          tracking_carrier: tracking_carrier
          financial_status: financial_status
          order_total: 0.8008281904610115
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        - discount_total: 6.027456183070403
          fulfillment_status: fulfillment_status
          tax_total: 1.4658129805029452
          _links:
          - null
          - null
          processed_at_foreign: 2015-07-15T19:28:00Z
          billing_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          currency_code: currency_code
          landing_site: http://www.example.com?source=abc
          order_url: order_url
          tracking_number: tracking_number
          id: id
          shipping_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          updated_at_foreign: 2015-07-15T19:28:00Z
          lines:
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - null
            - null
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - null
            - null
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          promos:
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          tracking_url: tracking_url
          campaign_id: 839488a60b
          cancelled_at_foreign: 2015-07-15T19:28:00Z
          store_id: store_id
          shipping_total: 5.962133916683182
          outreach:
            published_time: 2017-06-06T13:56:12Z
            name: Freddie's Jokes
            id: 839488a60b
            type: regular
          tracking_code: prec
          tracking_carrier: tracking_carrier
          financial_status: financial_status
          order_total: 0.8008281904610115
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        total_items: 0
    Campaign Settings:
      title: Campaign Settings
      type: object
      properties:
        subject_line:
          title: Campaign Subject Line
          type: string
          description: The subject line for the campaign.
        preview_text:
          title: Campaign Preview Text
          type: string
          description: The preview text for the campaign.
        title:
          title: Automation Title
          type: string
          description: The title of the Automation.
        from_name:
          title: From Name
          type: string
          description: The 'from' name for the Automation (not an email address).
        reply_to:
          title: Reply To Address
          type: string
          description: The reply-to email address for the Automation.
      description: "Settings for the campaign including the email subject, from name,\
        \ and from email address."
      example: null
    Ecommerce Customer:
      title: E-commerce Customer
      required:
      - id
      type: object
      properties:
        id:
          title: Customer Foreign ID
          maxLength: 50
          type: string
          description: A unique identifier for the customer. Limited to 50 characters.
        email_address:
          title: Email Address
          type: string
          description: The customer's email address.
        opt_in_status:
          title: Opt-in Status
          type: boolean
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        company:
          title: Company
          type: string
          description: The customer's company.
        first_name:
          title: First Name
          type: string
          description: The customer's first name.
        last_name:
          title: Last Name
          type: string
          description: The customer's last name.
        address:
          $ref: '#/components/schemas/Address_1'
      description: Information about a specific customer. For existing customers include
        only the `id` parameter in the `customer` object body.
      example: null
    inline_response_200_11_audience:
      type: object
      properties:
        type:
          type: string
          description: Type of the audience
          enum:
          - Custom Audience
          - Lookalike Audience
          - Interest-based Audience
        source_type:
          type: string
          description: List or Facebook based audience
          enum:
          - facebook
          - list
        email_source:
          $ref: '#/components/schemas/inline_response_200_11_audience_email_source'
        include_source_in_target:
          type: boolean
          description: To include list contacts as part of audience
        lookalike_country_code:
          type: string
          description: To find similar audience in given country
        targeting_specs:
          $ref: '#/components/schemas/inline_response_200_11_audience_targeting_specs'
      description: Audience settings
      example:
        include_source_in_target: true
        email_source:
          name: name
          segment_type: segment_type
          list_name: list_name
          type: type
          is_segment: true
        targeting_specs:
          max_age: 1
          gender: 0
          locations:
            regions:
            - regions
            - regions
            cities:
            - cities
            - cities
            countries:
            - countries
            - countries
            zips:
            - zips
            - zips
          min_age: 6
          interests:
          - name: name
          - name: name
        source_type: facebook
        type: Custom Audience
        lookalike_country_code: lookalike_country_code
    Member Notes:
      title: Member Notes
      type: object
      properties:
        note:
          title: Note
          type: string
          description: "The content of the note. Note length is limited to 1,000 characters."
      description: A specific note for a specific member.
    List Activity:
      title: List Activity
      type: object
      properties:
        activity:
          title: List Activity
          type: array
          description: Recent list activity.
          items:
            $ref: '#/components/schemas/Daily List Activity'
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Up to the previous 180 days of daily detailed aggregated activity
        stats for a specific list. Does not include AutoResponder or Automation activity.
      example:
        activity:
        - soft_bounce: 5
          hard_bounce: 5
          subs: 2
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          emails_sent: 0
          unsubs: 7
          recipient_clicks: 1
          other_adds: 9
          day: day
          unique_opens: 6
          other_removes: 3
        - soft_bounce: 5
          hard_bounce: 5
          subs: 2
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          emails_sent: 0
          unsubs: 7
          recipient_clicks: 1
          other_adds: 9
          day: day
          unique_opens: 6
          other_removes: 3
        list_id: list_id
        _links:
        - null
        - null
        total_items: 2
    Ecommerce Stores:
      title: E-commerce Stores
      type: object
      properties:
        stores:
          title: Stores
          type: array
          description: "An array of objects, each representing a store."
          items:
            $ref: '#/components/schemas/Ecommerce Store_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of stores in the account.
      example:
        _links:
        - null
        - null
        stores:
        - is_syncing: true
          automations:
            abandoned_browse:
              is_supported: false
              id: 355a72bfc3
              status: sending
            abandoned_cart:
              is_supported: false
              id: 355a72bfc3
              status: sending
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            postal_code: "30308"
            longitude: -75.68903
          list_id: 1a2df69511
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          timezone: Eastern
          primary_locale: fr
          created_at: 2015-07-15T19:28:00Z
          list_is_active: true
          platform: platform
          currency_code: USD
          money_format: $
          connected_site:
            site_script:
              fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
                script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
                );</script>"
              url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
            site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created\
              \ via API"
          email_address: freddie@mailchimp.com
          updated_at: 2015-07-15T19:28:00Z
          phone: 404-444-4444
          domain: example.com
          name: Freddie's Cat Hat Emporium
          id: example_store
        - is_syncing: true
          automations:
            abandoned_browse:
              is_supported: false
              id: 355a72bfc3
              status: sending
            abandoned_cart:
              is_supported: false
              id: 355a72bfc3
              status: sending
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            postal_code: "30308"
            longitude: -75.68903
          list_id: 1a2df69511
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          timezone: Eastern
          primary_locale: fr
          created_at: 2015-07-15T19:28:00Z
          list_is_active: true
          platform: platform
          currency_code: USD
          money_format: $
          connected_site:
            site_script:
              fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
                script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
                );</script>"
              url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
            site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created\
              \ via API"
          email_address: freddie@mailchimp.com
          updated_at: 2015-07-15T19:28:00Z
          phone: 404-444-4444
          domain: example.com
          name: Freddie's Cat Hat Emporium
          id: example_store
        total_items: 0
    Abandoned Cart Automation:
      title: Abandoned Cart Automation
      type: object
      properties:
        is_supported:
          title: Is Supported
          type: boolean
          description: Whether this store supports the abandonedCart automation.
          readOnly: true
          example: false
        id:
          title: ID
          type: string
          description: Unique ID of automation parent campaign.
          readOnly: true
          example: 355a72bfc3
        status:
          title: Status
          type: string
          description: Status of the abandonedCart automation.
          readOnly: true
          example: sending
          enum:
          - save
          - sending
          - paused
      description: abandonedCart automation details.
      readOnly: true
      example:
        is_supported: false
        id: 355a72bfc3
        status: sending
    Order Lines:
      title: Order Lines
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        order_id:
          title: Order ID
          type: string
          description: The order id.
        lines:
          title: Ecommerce Order Lines
          type: array
          description: "An array of objects, each representing an order's line item."
          items:
            $ref: '#/components/schemas/Ecommerce Order Line Item_5'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of an order's line items.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        lines:
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - null
          - null
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - null
          - null
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        order_id: order_id
        total_items: 0
    Facebook Likes:
      title: Facebook Likes
      type: object
      properties:
        recipient_likes:
          title: Recipient Likes
          type: integer
          description: The number of recipients who liked the campaign on Facebook.
        unique_likes:
          title: Unique Likes
          type: integer
          description: The number of unique likes.
        facebook_likes:
          title: Facebook Likes
          type: integer
          description: The number of Facebook likes for the campaign.
      description: An object describing campaign engagement on Facebook.
      example:
        facebook_likes: 1
        unique_likes: 7
        recipient_likes: 6
    Marketing Permission:
      title: Marketing Permission
      type: object
      properties:
        marketing_permission_id:
          title: Marketing Permission ID
          type: string
          description: The id for the marketing permission on the list
        enabled:
          title: Enabled
          type: boolean
          description: If the subscriber has opted-in to the marketing permission.
      description: A single marketing permission a subscriber has either opted-in
        to or opted-out of.
      example: null
    Subscriber Stats_1:
      title: Subscriber Stats
      type: object
      properties:
        avg_open_rate:
          title: Average Open Rate
          type: number
          description: A subscriber's average open rate.
          readOnly: true
        avg_click_rate:
          title: Average Click Rate
          type: number
          description: A subscriber's average clickthrough rate.
          readOnly: true
        ecommerce_data:
          $ref: '#/components/schemas/Ecommerce Stats'
      description: Open and click rates for this subscriber.
      readOnly: true
      example:
        ecommerce_data:
          total_revenue: 5.962133916683182
          number_of_orders: 5.637376656633329
          currency_code: USD
        avg_click_rate: 1.4658129805029452
        avg_open_rate: 6.027456183070403
    Email Domain:
      title: Email Domain
      type: object
      properties:
        domain:
          title: Domain
          type: string
          description: "The name of the domain (gmail.com, hotmail.com, yahoo.com)."
          readOnly: true
        emails_sent:
          title: Total Sent
          type: integer
          description: The number of emails sent to that specific domain.
          readOnly: true
        bounces:
          title: Bounces
          type: integer
          description: The number of bounces at a domain.
          readOnly: true
        opens:
          title: Opens
          type: integer
          description: The number of opens for a domain.
          readOnly: true
        clicks:
          title: Clicks
          type: integer
          description: The number of clicks for a domain.
          readOnly: true
        unsubs:
          title: Unsubscribes
          type: integer
          description: The total number of unsubscribes for a domain.
          readOnly: true
        delivered:
          title: Successful Deliveries
          type: integer
          description: The number of successful deliveries for a domain.
          readOnly: true
        emails_pct:
          title: Email Percent
          type: number
          description: The percentage of total emails that went to this domain.
          readOnly: true
        bounces_pct:
          title: Bounces Percent
          type: number
          description: The percentage of total bounces from this domain.
          readOnly: true
        opens_pct:
          title: Opens Percent
          type: number
          description: The percentage of total opens from this domain.
          readOnly: true
        clicks_pct:
          title: Clicks Percent
          type: number
          description: The percentage of total clicks from this domain.
          readOnly: true
        unsubs_pct:
          title: Unsubscribes Percent
          type: number
          description: The percentage of total unsubscribes from this domain.
          readOnly: true
      description: A single email domain's performance
      example:
        opens_pct: 3.616076749251911
        emails_pct: 7.061401241503109
        domain: domain
        emails_sent: 0
        unsubs: 5
        opens: 1
        clicks: 5
        delivered: 2
        unsubs_pct: 4.145608029883936
        bounces: 6
        clicks_pct: 2.027123023002322
        bounces_pct: 9.301444243932576
    Campaign Content:
      title: Campaign Content
      type: object
      properties:
        variate_contents:
          title: Variate Contents
          type: array
          description: Content options for multivariate campaigns.
          items:
            $ref: '#/components/schemas/Campaign Content_variate_contents'
        plain_text:
          title: Plain Text
          type: string
          description: "The plain-text portion of the campaign. If left unspecified,\
            \ we'll generate this automatically."
        html:
          title: Campaign HTML
          type: string
          description: The raw HTML for the campaign.
        archive_html:
          title: Campaign Archive HTML
          type: string
          description: The Archive HTML for the campaign.
          example: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
            \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My\
            \ Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body\
            \ leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The HTML and plain-text content for a campaign.
      example:
        archive_html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
          \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My\
          \ Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body\
          \ leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        plain_text: plain_text
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        variate_contents:
        - content_label: Green header
          plain_text: plain_text
          html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
            \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
            \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
            \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        - content_label: Green header
          plain_text: plain_text
          html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
            \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
            \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
            \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
        html: html
    ecommercestoresstore_idorders_promos:
      required:
      - amount_discounted
      - code
      - type
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The Promo Code
        amount_discounted:
          title: Amount Discounted
          type: number
          description: "The amount of discount applied on the total price. For example\
            \ if the total cost was $100 and the customer paid $95.5, amount_discounted\
            \ will be 4.5 For free shipping set amount_discounted to 0"
        type:
          title: Type
          type: string
          description: Type of discount. For free shipping set type to fixed
          enum:
          - fixed
          - percentage
      example: null
    Ecommerce Product Variants:
      title: Ecommerce Product Variants
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        product_id:
          title: Product ID
          type: string
          description: The product id.
        variants:
          title: Ecommerce Product Variants
          type: array
          description: "An array of objects, each representing a product's variants."
          items:
            $ref: '#/components/schemas/Ecommerce Product Variant_6'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of a product's variants.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        product_id: product_id
        variants:
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        total_items: 0
    Gallery File_3:
      title: Gallery File
      type: object
      properties:
        id:
          title: File ID
          type: integer
          description: The unique id of the file.
          readOnly: true
        folder_id:
          title: Folder ID
          type: integer
          description: The id of the folder.
        type:
          title: File Type
          type: string
          description: The type of file in the File Manager.
          readOnly: true
          enum:
          - image
          - file
        name:
          title: File Name
          type: string
          description: The name of the file.
        full_size_url:
          title: File URL
          type: string
          description: The url of the full-size file.
          format: uri
          readOnly: true
        thumbnail_url:
          title: Thumbnail URL
          type: string
          description: The url of the thumbnail preview.
          format: uri
          readOnly: true
        size:
          title: File Size
          type: integer
          description: The size of the file in bytes.
          readOnly: true
        created_at:
          title: Created Date
          type: string
          description: The date and time a file was added to the File Manager in ISO
            8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Created By
          type: string
          description: The username of the profile that uploaded the file.
          readOnly: true
        width:
          title: Image Width
          type: integer
          description: The width of the image.
          readOnly: true
        height:
          title: Image Height
          type: integer
          description: The height of an image.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An individual file listed in the File Manager.
      example:
        full_size_url: http://example.com/aeiou
        size: 1
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        width: 5
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        folder_id: 6
        type: image
        thumbnail_url: http://example.com/aeiou
        created_by: created_by
        height: 5
    Gallery File_2:
      title: Gallery File
      type: object
      properties:
        folder_id:
          title: Folder ID
          type: integer
          description: The id of the folder. Setting `folder_id` to `0` will remove
            a file from its current folder.
        name:
          title: File Name
          type: string
          description: The name of the file.
      description: An individual file listed in the File Manager.
    Template Folder_3:
      title: Template Folder
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
        id:
          title: Folder Id
          type: string
          description: A string that uniquely identifies this template folder.
          readOnly: true
        count:
          title: Template Count
          type: integer
          description: The number of templates in the folder.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A folder used to organize templates.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        count: 0
        id: id
    Gallery File_1:
      title: Gallery File
      type: object
      properties:
        id:
          title: File ID
          type: integer
          description: The unique id of the file.
          readOnly: true
        folder_id:
          title: Folder ID
          type: integer
          description: The id of the folder.
        type:
          title: File Type
          type: string
          description: The type of file in the File Manager.
          readOnly: true
          enum:
          - image
          - file
        name:
          title: File Name
          type: string
          description: The name of the file.
        full_size_url:
          title: File URL
          type: string
          description: The url of the full-size file.
          format: uri
          readOnly: true
        thumbnail_url:
          title: Thumbnail URL
          type: string
          description: The url of the thumbnail preview.
          format: uri
          readOnly: true
        size:
          title: File Size
          type: integer
          description: The size of the file in bytes.
          readOnly: true
        created_at:
          title: Created Date
          type: string
          description: The date and time a file was added to the File Manager in ISO
            8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Created By
          type: string
          description: The username of the profile that uploaded the file.
          readOnly: true
        width:
          title: Image Width
          type: integer
          description: The width of the image.
          readOnly: true
        height:
          title: Image Height
          type: integer
          description: The height of an image.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An individual file listed in the File Manager.
      example:
        full_size_url: http://example.com/aeiou
        size: 1
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        width: 5
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        folder_id: 6
        type: image
        thumbnail_url: http://example.com/aeiou
        created_by: created_by
        height: 5
    Template Folder_1:
      title: Template Folder
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
        id:
          title: Folder Id
          type: string
          description: A string that uniquely identifies this template folder.
          readOnly: true
        count:
          title: Template Count
          type: integer
          description: The number of templates in the folder.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A folder used to organize templates.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        count: 0
        id: id
    Template Folder_2:
      title: Template Folder
      required:
      - name
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
      description: A folder used to organize templates.
    Segment Members:
      title: Segment Members
      type: object
      properties:
        members:
          title: Members
          type: array
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List Members_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: View members in a specific list segment.
      example:
        _links:
        - null
        - null
        members:
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 0
          language: language
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 0
          language: language
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        total_items: 6
    Landing Page Content:
      title: Landing Page Content
      type: object
      properties:
        html:
          title: Landing Page HTML
          type: string
          description: The raw HTML for the landing page.
        json:
          title: Landing Page JSON
          type: string
          description: The JSON Structure for the landing page
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The HTML content for a landing page.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        json: json
        html: html
    inline_response_200_13_audience_activity:
      type: object
      properties:
        clicks:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_13_audience_activity_clicks'
        impressions:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_13_audience_activity_impressions'
        revenue:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_13_audience_activity_revenue'
      example:
        revenue:
        - date: date
          revenue: 1.4658129805029452
        - date: date
          revenue: 1.4658129805029452
        clicks:
        - date: date
          clicks: 0
        - date: date
          clicks: 0
        impressions:
        - date: date
          impressions: 6
        - date: date
          impressions: 6
    Automation Delay:
      title: Automation Delay
      required:
      - action
      type: object
      properties:
        amount:
          title: Delay Amount
          type: integer
          description: The delay amount for an automation email.
          example: 1
        type:
          title: Delay Type
          type: string
          description: The type of delay for an automation email.
          example: day
          enum:
          - now
          - day
          - hour
          - week
        direction:
          title: Delay Direction
          type: string
          description: Whether the delay settings describe before or after the delay
            action of an automation email.
          example: after
          enum:
          - after
        action:
          title: Delay Action
          type: string
          description: The action that triggers the delay of an automation emails.
          example: signup
          enum:
          - signup
          - ecomm_abandoned_browse
          - ecomm_abandoned_cart
      description: The delay settings for an automation email.
      example: null
    Campaign Social Card:
      title: Campaign Social Card
      type: object
      properties:
        image_url:
          title: Image URL
          type: string
          description: The url for the header image for the card.
        description:
          title: Campaign Description
          type: string
          description: A short summary of the campaign to display.
        title:
          title: Title
          type: string
          description: The title for the card. Typically the subject line of the campaign.
      description: "The preview for the campaign, rendered by social networks like\
        \ Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/)."
      example:
        image_url: image_url
        description: description
        title: title
    Add Webhook:
      title: Add Webhook
      type: object
      properties:
        url:
          title: URL
          type: string
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
        events:
          $ref: '#/components/schemas/Events_1'
        sources:
          $ref: '#/components/schemas/Sources'
      description: Configure a webhook for the given list.
    Open Locations:
      title: Open Locations
      type: object
      properties:
        locations:
          title: Lists
          type: array
          description: "An array of objects, each representing a top location for\
            \ opens."
          items:
            $ref: '#/components/schemas/Open Locations_locations'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Top open locations for a specific campaign.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        locations:
        - country_code: country_code
          opens: 0
          region_name: region_name
          region: region
        - country_code: country_code
          opens: 0
          region_name: region_name
          region: region
        total_items: 6
        campaign_id: campaign_id
    Ecommerce Order:
      title: E-commerce Order
      required:
      - currency_code
      - customer
      - id
      - lines
      - order_total
      type: object
      properties:
        id:
          title: Order Foreign ID
          type: string
          description: A unique identifier for the order.
        customer:
          $ref: '#/components/schemas/Ecommerce Customer'
        campaign_id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies the campaign for an order.
          example: 839488a60b
        landing_site:
          title: Landing Site
          type: string
          description: The URL for the page where the buyer landed when entering the
            shop.
          example: http://www.example.com?source=abc
        financial_status:
          title: Financial Status
          type: string
          description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        fulfillment_status:
          title: Fulfillment Status
          type: string
          description: "The fulfillment status for the order. Use this parameter to\
            \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        currency_code:
          title: Currency Code
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
        order_total:
          title: Order Total
          type: number
          description: The total for the order.
        order_url:
          title: Order URL
          type: string
          description: The URL for the order.
        discount_total:
          title: Discount Total
          type: number
          description: The total amount of the discounts to be applied to the price
            of the order.
        tax_total:
          title: Tax Total
          type: number
          description: The tax total for the order.
        shipping_total:
          title: Shipping Total
          type: number
          description: The shipping total for the order.
        tracking_code:
          title: Tracking Code
          type: string
          description: The Mailchimp tracking code for the order. Uses the 'mc_tc'
            parameter in E-Commerce tracking URLs.
          enum:
          - prec
        processed_at_foreign:
          title: Foreign Processed Time
          type: string
          description: The date and time the order was processed in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        cancelled_at_foreign:
          title: Foreign Cancel Time
          type: string
          description: "The date and time the order was cancelled in ISO 8601 format.\
            \ Note: passing a value for this parameter will cancel the order being\
            \ created."
          format: date-time
          example: 2015-07-15T19:28:00Z
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the order was updated in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        shipping_address:
          $ref: '#/components/schemas/Shipping Address'
        billing_address:
          $ref: '#/components/schemas/Billing Address'
        promos:
          title: Promos
          type: array
          description: The promo codes applied on the order
          items:
            $ref: '#/components/schemas/ecommercestoresstore_idorders_promos'
        lines:
          title: Order Line Items
          type: array
          description: An array of the order's line items.
          items:
            $ref: '#/components/schemas/Ecommerce Order Line Item'
        outreach:
          $ref: '#/components/schemas/Outreach'
        tracking_number:
          title: Tracking number
          type: string
          description: The tracking number associated with the order.
        tracking_carrier:
          title: Tracking carrier
          type: string
          description: The tracking carrier associated with the order.
        tracking_url:
          title: Tracking URL
          type: string
          description: The tracking URL associated with the order.
      description: Information about a specific order.
    Statistics:
      title: Statistics
      type: object
      properties:
        member_count:
          title: Member Count
          type: integer
          description: The number of active members in the list.
          readOnly: true
        total_contacts:
          title: Total Contacts
          type: integer
          description: "The number of contacts in the list, including subscribed,\
            \ unsubscribed, pending, cleaned, deleted, transactional, and those that\
            \ need to be reconfirmed. Requires include_total_contacts query parameter\
            \ to be included."
          readOnly: true
        unsubscribe_count:
          title: Unsubscribe Count
          type: integer
          description: The number of members who have unsubscribed from the list.
          readOnly: true
        cleaned_count:
          title: Cleaned Count
          type: integer
          description: The number of members cleaned from the list.
          readOnly: true
        member_count_since_send:
          title: Member Count Since Send
          type: integer
          description: The number of active members in the list since the last campaign
            was sent.
          readOnly: true
        unsubscribe_count_since_send:
          title: Unsubscribe Count Since Send
          type: integer
          description: The number of members who have unsubscribed since the last
            campaign was sent.
          readOnly: true
        cleaned_count_since_send:
          title: Cleaned Count Since Send
          type: integer
          description: The number of members cleaned from the list since the last
            campaign was sent.
          readOnly: true
        campaign_count:
          title: Campaign Count
          type: integer
          description: The number of campaigns in any status that use this list.
          readOnly: true
        campaign_last_sent:
          title: Campaign Last Sent
          type: string
          description: The date and time the last campaign was sent to this list in
            ISO 8601 format. This is updated when a campaign is sent to 10 or more
            recipients.
          format: date-time
          readOnly: true
        merge_field_count:
          title: Merge Field Count
          type: integer
          description: "The number of merge fields ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/))\
            \ for this list (doesn't include EMAIL)."
          readOnly: true
        avg_sub_rate:
          title: Average Subscription Rate
          type: number
          description: The average number of subscriptions per month for the list
            (not returned if we haven't calculated it yet).
          readOnly: true
        avg_unsub_rate:
          title: Average Unsubscription Rate
          type: number
          description: The average number of unsubscriptions per month for the list
            (not returned if we haven't calculated it yet).
          readOnly: true
        target_sub_rate:
          title: Average Subscription Rate
          type: number
          description: The target number of subscriptions per month for the list to
            keep it growing (not returned if we haven't calculated it yet).
          readOnly: true
        open_rate:
          title: Open Rate
          type: number
          description: The average open rate (a percentage represented as a number
            between 0 and 100) per campaign for the list (not returned if we haven't
            calculated it yet).
          readOnly: true
        click_rate:
          title: Click Rate
          type: number
          description: The average click rate (a percentage represented as a number
            between 0 and 100) per campaign for the list (not returned if we haven't
            calculated it yet).
          readOnly: true
        last_sub_date:
          title: Date of Last List Subscribe
          type: string
          description: The date and time of the last time someone subscribed to this
            list in ISO 8601 format.
          format: date-time
          readOnly: true
        last_unsub_date:
          title: Date of Last List Unsubscribe
          type: string
          description: The date and time of the last time someone unsubscribed from
            this list in ISO 8601 format.
          format: date-time
          readOnly: true
      description: Stats for the list. Many of these are cached for at least five
        minutes.
      readOnly: true
      example:
        cleaned_count: 2
        unsubscribe_count_since_send: 9
        member_count_since_send: 7
        click_rate: 6.84685269835264
        cleaned_count_since_send: 3
        total_contacts: 5
        campaign_count: 2
        avg_unsub_rate: 1.2315135367772556
        last_sub_date: 2000-01-23T04:56:07.000+00:00
        unsubscribe_count: 5
        target_sub_rate: 1.0246457001441578
        campaign_last_sent: 2000-01-23T04:56:07.000+00:00
        avg_sub_rate: 7.386281948385884
        member_count: 1
        merge_field_count: 4
        open_rate: 1.4894159098541704
        last_unsub_date: 2000-01-23T04:56:07.000+00:00
    Batch Operations:
      title: Batch Operations
      type: object
      properties:
        batches:
          title: Batches
          type: array
          description: An array of objects representing batch calls.
          items:
            $ref: '#/components/schemas/Batch_1'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of batch requests that have been made.
      example:
        batches:
        - finished_operations: 6
          completed_at: 2000-01-23T04:56:07.000+00:00
          submitted_at: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          total_operations: 0
          errored_operations: 1
          id: id
          response_body_url: response_body_url
          status: pending
        - finished_operations: 6
          completed_at: 2000-01-23T04:56:07.000+00:00
          submitted_at: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          total_operations: 0
          errored_operations: 1
          id: id
          response_body_url: response_body_url
          status: pending
        _links:
        - null
        - null
        total_items: 5
    Unsubscribes:
      title: Unsubscribes
      type: object
      properties:
        unsubscribes:
          title: Lists
          type: array
          description: "An array of objects, each representing a member who unsubscribed\
            \ from a campaign."
          items:
            $ref: '#/components/schemas/Unsubscribes_2'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of members who have unsubscribed from a specific campaign.
      example:
        unsubscribes:
        - email_id: email_id
          reason: reason
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          vip: true
          list_is_active: true
          campaign_id: campaign_id
          timestamp: 2000-01-23T04:56:07.000+00:00
        - email_id: email_id
          reason: reason
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          vip: true
          list_is_active: true
          campaign_id: campaign_id
          timestamp: 2000-01-23T04:56:07.000+00:00
        _links:
        - null
        - null
        total_items: 0
        campaign_id: campaign_id
    Click Detail Member:
      title: Click Detail Member
      type: object
      properties:
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        clicks:
          title: Total Clicks
          type: integer
          description: The total number of times the subscriber clicked on the link.
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        url_id:
          title: URL ID
          type: string
          description: The id for the tracked URL in the campaign.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        contact_status:
          title: Member Status
          type: string
          description: "The status of the member, namely if they are subscribed, unsubscribed,\
            \ deleted, non-subscribed, transactional, pending, or need reconfirmation."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A subscriber who clicked a specific URL in a specific campaign.
      example:
        email_id: email_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        clicks: 0
        contact_status: contact_status
        url_id: url_id
        vip: true
        list_is_active: true
        campaign_id: campaign_id
    inline_response_200_11_audience_targeting_specs_locations:
      type: object
      properties:
        countries:
          type: array
          items:
            type: string
        regions:
          type: array
          items:
            type: string
        cities:
          type: array
          items:
            type: string
        zips:
          type: array
          items:
            type: string
      example:
        regions:
        - regions
        - regions
        cities:
        - cities
        - cities
        countries:
        - countries
        - countries
        zips:
        - zips
        - zips
    Clicks:
      title: Clicks
      type: object
      properties:
        clicks_total:
          title: Total Clicks
          type: integer
          description: The total number of clicks for the campaign.
        unique_clicks:
          title: Unique Clicks
          type: integer
          description: The total number of unique clicks for links across a campaign.
        unique_subscriber_clicks:
          title: Unique Subscriber Clicks
          type: integer
          description: The total number of subscribers who clicked on a campaign.
        click_rate:
          title: Click Rate
          type: number
          description: The number of unique clicks divided by the total number of
            successful deliveries.
        last_click:
          title: Last Click
          type: string
          description: The date and time of the last recorded click for the campaign
            in ISO 8601 format.
          format: date-time
      description: An object describing the click activity for the campaign.
      example:
        clicks_total: 7
        unique_clicks: 1
        click_rate: 1.4894159098541704
        last_click: 2000-01-23T04:56:07.000+00:00
        unique_subscriber_clicks: 1
    Ecommerce Order Line Item:
      title: E-commerce Order Line Item
      required:
      - id
      - price
      - product_id
      - product_variant_id
      - quantity
      type: object
      properties:
        id:
          title: Order Line Item Foreign ID
          type: string
          description: A unique identifier for the order line item.
        product_id:
          title: Order Line Item Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the order
            line item.
        product_variant_id:
          title: Order Line Item Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the order line item.
        quantity:
          title: Quantity
          type: integer
          description: The quantity of an order line item.
        price:
          title: Price
          type: number
          description: The price of an order line item.
        discount:
          title: Discount
          type: number
          description: The total discount amount applied to this line item.
      description: Information about a specific order line.
      example: null
    Campaign Folder_3:
      title: Campaign Folder
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
        id:
          title: Folder Id
          type: string
          description: A string that uniquely identifies this campaign folder.
          readOnly: true
        count:
          title: Campaign Count
          type: integer
          description: The number of campaigns in the folder.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A folder used to organize campaigns.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        count: 0
        id: id
    Campaign Folder_2:
      title: Campaign Folder
      required:
      - name
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: Name to associate with the folder.
      description: A folder used to organize campaigns.
    Campaign Folder_1:
      title: Campaign Folder
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
        id:
          title: Folder Id
          type: string
          description: A string that uniquely identifies this campaign folder.
          readOnly: true
        count:
          title: Campaign Count
          type: integer
          description: The number of campaigns in the folder.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A folder used to organize campaigns.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        count: 0
        id: id
    AB Test Options_1_combinations:
      type: object
      properties:
        id:
          title: ID
          type: string
          description: Unique ID for the combination.
        subject_line:
          title: Subject Line
          type: integer
          description: The index of `variate_settings.subject_lines` used.
        send_time:
          title: Send Time
          type: integer
          description: The index of `variate_settings.send_times` used.
        from_name:
          title: From Name
          type: integer
          description: The index of `variate_settings.from_names` used.
        reply_to:
          title: Reply To
          type: integer
          description: The index of `variate_settings.reply_to_addresses` used.
        content_description:
          title: Content Description
          type: integer
          description: The index of `variate_settings.contents` used.
        recipients:
          title: Recipients
          type: integer
          description: The number of recipients for this combination.
      example:
        subject_line: 7
        send_time: 9
        reply_to: 2
        recipients: 7
        id: id
        from_name: 3
        content_description: 4
    List Location:
      title: List Location
      type: object
      properties:
        country:
          title: Country Name
          type: string
          description: The name of the country.
          readOnly: true
        cc:
          title: cc
          type: string
          description: The ISO 3166 2 digit country code.
          readOnly: true
        percent:
          title: percent
          type: number
          description: The percent of subscribers in the country.
          readOnly: true
        total:
          title: total
          type: integer
          description: The total number of subscribers in the country.
          readOnly: true
      example:
        cc: cc
        country: country
        total: 6
        percent: 0.8008281904610115
    Abuse Complaints_1:
      title: Abuse Complaints
      type: object
      properties:
        abuse_reports:
          title: Abuse Reports
          type: array
          description: "An array of objects, each representing an abuse report resource."
          items:
            $ref: '#/components/schemas/Abuse Complaint_2'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of abuse complaints for a specific list.
      example:
        _links:
        - null
        - null
        total_items: 6
        abuse_reports:
        - email_id: email_id
          date: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          id: 0
          list_is_active: true
          vip: true
          campaign_id: campaign_id
        - email_id: email_id
          date: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          id: 0
          list_is_active: true
          vip: true
          campaign_id: campaign_id
        campaign_id: campaign_id
    Verified Domains:
      title: Verified Domains
      type: object
      properties:
        domain:
          title: Domain Name
          type: string
          description: The name of this domain.
          readOnly: true
        verified:
          title: Verified
          type: boolean
          description: Whether the domain has been verified for sending.
          readOnly: true
        authenticated:
          title: Authenticated
          type: boolean
          description: Whether domain authentication is enabled for this domain.
          readOnly: true
        verification_email:
          title: Verification Email
          type: string
          description: The e-mail address receiving the two-factor challenge for this
            domain.
          readOnly: true
        verification_sent:
          title: Verification Challenge Sent
          type: string
          description: The date/time that the two-factor challenge was sent to the
            verification email.
          format: date-time
          readOnly: true
      description: The verified domains currently on the account.
      example:
        authenticated: true
        domain: domain
        verified: true
        verification_email: verification_email
        verification_sent: 2000-01-23T04:56:07.000+00:00
    Member Activity Events_1:
      title: Member Activity Events
      type: object
      properties:
        activity:
          title: Activity
          type: array
          description: "An array of objects, each representing a contact event. There\
            \ are multiple possible types, see the [activity schema documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#activity-schemas)."
          readOnly: true
          items:
            type: object
            x-oneOf:
            - type: object
              title: Email Opens
              description: Activity feed item representing opening an email.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: open
                  enum:
                  - open
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
            - type: object
              title: Email Clicks
              description: Activity feed item representing having a link clicked by
                a contact.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: click
                  enum:
                  - click
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
                link_clicked:
                  type: string
                  title: Link Clicked
                  description: The URL of the link that was clicked.
            - type: object
              title: Email Bounced
              description: Activity feed item representing an email to this contact
                bouncing.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: bounce
                  enum:
                  - bounce
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
                bounce_type:
                  type: string
                  title: Bounce Type
                  description: The type of bounce.
                  enum:
                  - hard
                  - soft
                bounce_has_open_activity:
                  type: boolean
                  title: Bounce Has Open Activity
                  description: Indicates if the email associated with this bounce
                    also has open activity on the same campaign.
            - type: object
              title: List Unsubscribed
              description: Activity feed item representing this contact unsubscribing
                from a list.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: unsub
                  enum:
                  - unsub
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Text
                  description: The title of the campaign.
                is_admin_unsubscribed:
                  type: boolean
                  title: Is Admin Unsubscribed
                  description: Indicates if an admin unsubscribed a contact.
                unsubscribe_reason:
                  type: string
                  title: Unsubscribe Reason
                  description: Indicates the reason that the contact was unsubscribed.
            - type: object
              title: Email Sent
              description: Activity feed item representing having an email sent to
                the contact.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: sent
                  enum:
                  - sent
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
            - type: object
              title: Email Conversation
              description: Activity feed item representing an individual reply in
                a conversation.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: conversation
                  enum:
                  - conversation
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                campaign_id:
                  type: string
                  title: Campaign ID
                  description: The campaign's unique id.
                campaign_title:
                  type: string
                  title: Campaign Title
                  description: The title of the campaign.
                thread_id:
                  type: string
                  title: Thread ID
                  description: The thread's unique id of the conversation referenced
                    in this event.
                message_text:
                  type: string
                  title: Message Text
                  description: The body of the message in this conversation.
                created_by:
                  type: string
                  title: Created By
                  description: The username of the person who created this event.
                is_user:
                  type: boolean
                  title: Is User
                  description: Indicates that the message created by a user (as opposed
                    to a contact).
                has_read:
                  type: boolean
                  title: Has Read
                  description: Indicates that the message has been read.
                from_email:
                  type: string
                  title: From Email
                  description: The email of the contact who sent the reply.
                avatar_url:
                  type: string
                  title: Avatar URL
                  description: The gravatar URL of the contact who sent the reply.
            - type: object
              title: Note
              description: Activity feed item representing a note on the contact record.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: note
                  enum:
                  - note
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                updated_at_timestamp:
                  type: string
                  title: Updated At Timestamp
                  format: date-time
                  description: The updated at timestamp in ISO8601.
                note_id:
                  type: string
                  title: Note ID
                  description: The note's unique id.
                note_text:
                  type: string
                  title: Note Text
                  description: The note's text.
                created_by:
                  type: string
                  title: Created By
                  description: The person who created the note.
                avatar_url:
                  type: string
                  title: Avatar URL
                  description: The URL of the contact's profile gravatar image.
            - type: object
              title: Marketing Permission
              description: Activity feed item indicating if a marketing permission
                was added or updated.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: marketing_permission
                  enum:
                  - marketing_permission
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                marketing_permisson_text:
                  type: string
                  title: Marketing Permission Text
                  description: The text describing this marketing permission.
                updated_by:
                  type: string
                  title: Updated By
                  description: The name of the contact who updated this permission.
                marketing_permission_opted_in:
                  type: boolean
                  title: Marketing Permission Opted In
                  description: Indicates if the marketing permission is enabled or
                    not.
            - type: object
              title: Postcard Sent
              description: Activity feed item representing a time when a contact was
                sent a particular postcard.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: postcard_sent
                  enum:
                  - postcard_sent
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
            - type: object
              title: Squatter Signup
              description: Activity feed item to representing a contact signing up
                for the audience from a squatter page.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: squatter_signup
                  enum:
                  - squatter_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
            - type: object
              title: Website Signup
              description: Activity feed item to representing a contact signing up
                for the contact through a website page.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: website_signup
                  enum:
                  - website_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
            - type: object
              title: Landing Page Signup
              description: Activity feed item to representing a contact signing up
                for the list via a landing page.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: landing_page_signup
                  enum:
                  - landing_page_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
            - type: object
              title: Ecommerce Signup
              description: Activity feed item to representing a contact signing up
                for the list via a ecommerce store.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: ecommerce_signup
                  enum:
                  - ecommerce_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                store_name:
                  type: string
                  title: Store Name
                  description: The name of the store.
            - type: object
              title: Generic Signup
              description: "Activity feed item that represents a contact signing up\
                \ for the audience via a generic some generic method (specifically,\
                \ one we can't link to)."
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: generic_signup
                  enum:
                  - generic_signup
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                signup_category:
                  type: string
                  title: Signup Category
                  description: How was this user added to the list.
            - type: object
              title: Ecommerce Order
              description: Activity feed item that represents an order.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: order
                  enum:
                  - order
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                outreach_id:
                  type: string
                  title: Outreach ID
                  description: The outreach's unique id.
                outreach_type:
                  type: string
                  title: Outreach Type
                  description: The type of outreach that triggered the event.
                outreach_title:
                  type: string
                  title: Outreach Title
                  description: The title of the outreach.
                order_id:
                  type: string
                  title: Order ID
                  description: The unique order id.
                order_total:
                  type: string
                  title: Order Total
                  description: The order total formatted as a string.
                order_items:
                  type: array
                  title: Order Items
                  description: An array of items that have been ordered.
                  items:
                    type: object
                    title: E-commerce Order Line Item
                    description: Information about a specific order line.
                    properties:
                      id:
                        type: string
                        title: Order Line Item Foreign ID
                        description: A unique identifier for an order line item.
                        readOnly: true
                      product_id:
                        type: string
                        title: Order Line Item Product Foreign ID
                        description: A unique identifier for the product associated
                          with an order line item.
                      product_title:
                        type: string
                        title: Order Line Item Product Title
                        description: The name of the product for an order line item.
                        readOnly: true
                      product_variant_id:
                        type: string
                        title: Order Line Item Product Variant Foreign ID
                        description: A unique identifier for the product variant associated
                          with an order line item.
                      product_variant_title:
                        type: string
                        title: Order Line Item Product Variant Title
                        description: The name of the product variant for an order
                          line item.
                        readOnly: true
                      image_url:
                        type: string
                        title: Product Image URL
                        description: The image URL for a product.
                        readOnly: true
                      quantity:
                        type: integer
                        title: Quantity
                        description: The order line item quantity.
                      price:
                        type: number
                        title: Price
                        description: The order line item price.
                      discount:
                        type: number
                        title: Discount
                        description: The total discount amount applied to a line item.
                      _links:
                        title: Links
                        description: A list of link types and descriptions for the
                          API schema documents.
                        type: array
                        items:
                          type: object
                          title: Resource Link
                          description: This object represents a link from the resource
                            where it is found to another resource or action that may
                            be performed.
                          properties:
                            rel:
                              type: string
                              title: Rel
                              description: "As with an HTML 'rel' attribute, this\
                                \ describes the type of link."
                              readOnly: true
                            href:
                              type: string
                              title: Href
                              description: This property contains a fully-qualified
                                URL that can be called to retrieve the linked resource
                                or perform the linked action.
                              readOnly: true
                            method:
                              type: string
                              title: Method
                              description: The HTTP method that should be used when
                                accessing the URL defined in 'href'.
                              enum:
                              - GET
                              - POST
                              - PUT
                              - PATCH
                              - DELETE
                              - OPTIONS
                              - HEAD
                              readOnly: true
                            targetSchema:
                              type: string
                              title: Target Schema
                              description: "For GETs, this is a URL representing the\
                                \ schema that the response should conform to."
                              readOnly: true
                            schema:
                              type: string
                              title: Schema
                              description: "For HTTP methods that can receive bodies\
                                \ (POST and PUT), this is a URL representing the schema\
                                \ that the body should conform to."
                              readOnly: true
                        readOnly: true
                store_name:
                  type: string
                  title: Store Name
                  description: The name of the store for an order.
                order_url:
                  type: string
                  title: Order URL
                  description: The order URL.
            - type: object
              title: Contact Activity Event
              description: Activity feed item that represents a generic event.
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: event
                  enum:
                  - event
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                event_name:
                  type: string
                  title: Event Name
                  description: The name of the event.
                event_properties:
                  type: array
                  title: Event Properties
                  items:
                    x-skip-validation: true
                    type: string
                  description: An arbitrary datastore containing properties for the
                    given event.
            - type: object
              title: Survey response
              description: Represents when a contact completes and submits a survey
              properties:
                activity_type:
                  type: string
                  description: The type of event activity.
                  x-value: survey_response
                  enum:
                  - survey_response
                created_at_timestamp:
                  type: string
                  title: Created At Timestamp
                  format: date-time
                  description: The created at timestamp in ISO8601.
                survey_id:
                  type: string
                  title: Survey ID
                  description: The survey's unique id.
                survey_title:
                  type: string
                  title: Survey Title
                  description: The title of the survey.
            x-discriminator:
              propertyName: activity_type
              type: string
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The member activity events for a given member.
      example:
        email_id: email_id
        activity:
        - {}
        - {}
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
      x-hidden: false
    API health status:
      title: API health status
      type: object
      properties:
        health_status:
          title: API health status
          type: string
          description: This will return a constant string value if the request is
            successful. Ex. "Everything's Chimpy!"
          readOnly: true
          example: '"Everything''s Chimpy!"'
      description: API health status.
      example:
        health_status: '"Everything''s Chimpy!"'
    List:
      title: List
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The id of the List.
          example: 1a2df69xxx
        store_id:
          title: Store ID
          type: string
          description: The id of the store.
          example: 1a2df69xxx
      description: List settings for the Automation.
      example: null
    Template Folders:
      title: Template Folders
      type: object
      properties:
        folders:
          title: Template Folders
          type: array
          description: An array of objects representing template folders.
          items:
            $ref: '#/components/schemas/Template Folder_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of template folders
      example:
        folders:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          count: 0
          id: id
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          count: 0
          id: id
        _links:
        - null
        - null
        total_items: 6
    Daily clicks and visits data_unique_visits:
      type: object
      properties:
        date:
          title: Date
          type: string
          readOnly: true
          example: 2018-04-25
        val:
          title: Value
          type: integer
          readOnly: true
          example: 1
      example:
        date: 2018-04-25
        val: 1
    Campaign Reports_1_timewarp:
      type: object
      properties:
        gmt_offset:
          title: GMT Offset
          type: integer
          description: "For campaigns sent with timewarp, the time zone group the\
            \ member is apart of."
        opens:
          title: Opens
          type: integer
          description: The number of opens.
        last_open:
          title: Last Open
          type: string
          description: The date and time of the last open in ISO 8601 format.
          format: date-time
        unique_opens:
          title: Unique Opens
          type: integer
          description: The number of unique opens.
        clicks:
          title: Clicks
          type: integer
          description: The number of clicks.
        last_click:
          title: Last Click
          type: string
          description: The date and time of the last click in ISO 8601 format.
          format: date-time
        unique_clicks:
          title: Unique Clicks
          type: integer
          description: The number of unique clicks.
        bounces:
          title: Bounces
          type: integer
          description: The number of bounces.
      example:
        unique_clicks: 3
        opens: 3
        clicks: 5
        last_click: 2000-01-23T04:56:07.000+00:00
        gmt_offset: 3
        bounces: 4
        last_open: 2000-01-23T04:56:07.000+00:00
        unique_opens: 7
    segment_id_members_body:
      required:
      - email_address
      type: object
      properties:
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
    inline_response_200_13_audience_activity_revenue:
      type: object
      properties:
        date:
          type: string
        revenue:
          type: number
      example:
        date: date
        revenue: 1.4658129805029452
    Campaign Report:
      title: Campaign Report
      type: object
      properties:
        id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies this campaign.
        campaign_title:
          title: Campaign Title
          type: string
          description: The title of the campaign.
          readOnly: true
        type:
          title: Campaign Type
          type: string
          description: "The type of campaign (regular, plain-text, ab_split, rss,\
            \ automation, variate, or auto)."
        list_id:
          title: List ID
          type: string
          description: The unique list id.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        list_name:
          title: List Name
          type: string
          description: The name of the list.
          readOnly: true
        subject_line:
          title: Campaign Subject Line
          type: string
          description: The subject line for the campaign.
          readOnly: true
        preview_text:
          title: Campaign Preview Text
          type: string
          description: The preview text for the campaign.
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for this campaign.
        abuse_reports:
          title: Abuse Reports
          type: integer
          description: The number of abuse reports generated for this campaign.
        unsubscribed:
          title: Unsubscribe Count
          type: integer
          description: The total number of unsubscribed members for this campaign.
          readOnly: true
        send_time:
          title: Send Time
          type: string
          description: The date and time a campaign was sent in ISO 8601 format.
          format: date-time
          readOnly: true
        rss_last_send:
          title: RSS Last Send
          type: string
          description: "For RSS campaigns, the date and time of the last send in ISO\
            \ 8601 format."
          format: date-time
          readOnly: true
        bounces:
          $ref: '#/components/schemas/Bounces'
        forwards:
          $ref: '#/components/schemas/Forwards'
        opens:
          $ref: '#/components/schemas/Opens'
        clicks:
          $ref: '#/components/schemas/Clicks'
        facebook_likes:
          $ref: '#/components/schemas/Facebook Likes'
        industry_stats:
          $ref: '#/components/schemas/Industry Stats'
        list_stats:
          $ref: '#/components/schemas/List Stats'
        ab_split:
          $ref: '#/components/schemas/AB Split Stats'
        timewarp:
          title: Timewarp Stats
          type: array
          description: "An hourly breakdown of sends, opens, and clicks if a campaign\
            \ is sent using timewarp."
          items:
            $ref: '#/components/schemas/Campaign Reports_1_timewarp'
        timeseries:
          title: Timeseries
          type: array
          description: An hourly breakdown of the performance of the campaign over
            the first 24 hours.
          items:
            $ref: '#/components/schemas/Campaign Reports_1_timeseries'
        share_report:
          $ref: '#/components/schemas/Share Report'
        ecommerce:
          $ref: '#/components/schemas/ECommerce Report'
        delivery_status:
          $ref: '#/components/schemas/Campaign Delivery Status'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Report details about a sent campaign.
      example:
        forwards:
          forwards_count: 7
          forwards_opens: 9
        share_report:
          share_url: share_url
          share_password: share_password
        preview_text: preview_text
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        rss_last_send: 2000-01-23T04:56:07.000+00:00
        list_name: list_name
        type: type
        list_is_active: true
        industry_stats:
          unopen_rate: 9.369310271410669
          click_rate: 5.025004791520295
          bounce_rate: 9.965781217890562
          unsub_rate: 6.683562403749608
          type: type
          abuse_rate: 8.762042012749001
          open_rate: 4.965218492984954
        list_stats:
          sub_rate: 9.018348186070783
          click_rate: 6.965117697638846
          unsub_rate: 6.438423552598547
          open_rate: 3.5571952270680973
        campaign_title: campaign_title
        facebook_likes:
          facebook_likes: 1
          unique_likes: 7
          recipient_likes: 6
        timeseries:
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: 2000-01-23T04:56:07.000+00:00
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: 2000-01-23T04:56:07.000+00:00
        emails_sent: 0
        ecommerce:
          total_spent: 4.678947989005849
          total_revenue: 7.260521264802104
          total_orders: 1
          currency_code: USD
        id: id
        bounces:
          hard_bounces: 5
          syntax_errors: 2
          soft_bounces: 5
        subject_line: subject_line
        ab_split:
          a:
            forwards: 5
            unsubs: 6
            opens: 3
            bounces: 1
            recipient_clicks: 6
            forwards_opens: 6
            last_open: last_open
            abuse_reports: 2
            unique_opens: 3
          b:
            forwards: 0
            unsubs: 7
            opens: 8
            bounces: 7
            recipient_clicks: 6
            forwards_opens: 4
            last_open: last_open
            abuse_reports: 0
            unique_opens: 7
        timewarp:
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          gmt_offset: 3
          bounces: 4
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 7
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          gmt_offset: 3
          bounces: 4
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 7
        unsubscribed: 1
        send_time: 2000-01-23T04:56:07.000+00:00
        opens:
          opens_total: 3
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 2
          open_rate: 4.145608029883936
        clicks:
          clicks_total: 7
          unique_clicks: 1
          click_rate: 1.4894159098541704
          last_click: 2000-01-23T04:56:07.000+00:00
          unique_subscriber_clicks: 1
        abuse_reports: 6
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: delivering
    Collection of Segments:
      title: Collection of Segments
      type: object
      properties:
        segments:
          title: Lists
          type: array
          description: "An array of objects, each representing a list segment."
          items:
            $ref: '#/components/schemas/List_6'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of available segments.
      example:
        list_id: list_id
        _links:
        - null
        - null
        total_items: 1
        segments:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          options:
            match: any
            conditions:
            - {}
            - {}
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          member_count: 6
          type: saved
        - updated_at: 2000-01-23T04:56:07.000+00:00
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          options:
            match: any
            conditions:
            - {}
            - {}
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          member_count: 6
          type: saved
    Share Report:
      title: Share Report
      type: object
      properties:
        share_url:
          title: Report URL
          type: string
          description: The URL for the VIP report.
          readOnly: true
        share_password:
          title: Report Password
          type: string
          description: "If password protected, the password for the VIP report."
          readOnly: true
      description: "The url and password for the [VIP report](https://mailchimp.com/help/share-a-campaign-report/)."
      example:
        share_url: share_url
        share_password: share_password
    Campaign Report Summary:
      title: Campaign Report Summary
      type: object
      properties:
        opens:
          title: Automation Opens
          type: integer
          description: The total number of opens for a campaign.
          readOnly: true
        unique_opens:
          title: Unique Opens
          type: integer
          description: The number of unique opens.
          readOnly: true
        open_rate:
          title: Open Rate
          type: number
          description: The number of unique opens divided by the total number of successful
            deliveries.
          readOnly: true
        clicks:
          title: Total Clicks
          type: integer
          description: The total number of clicks for an campaign.
          readOnly: true
        subscriber_clicks:
          title: Unique Subscriber Clicks
          type: integer
          description: The number of unique clicks.
          readOnly: true
        click_rate:
          title: Click Rate
          type: number
          description: The number of unique clicks divided by the total number of
            successful deliveries.
          readOnly: true
        ecommerce:
          $ref: '#/components/schemas/ECommerce Report_1'
      description: "For sent campaigns, a summary of opens and clicks."
      example:
        subscriber_clicks: 1
        click_rate: 1.0246457001441578
        ecommerce:
          total_spent: 8.762042012749001
          total_revenue: 9.018348186070783
          total_orders: 6
        opens: 3
        clicks: 7
        unique_opens: 2
        open_rate: 4.145608029883936
    Twitter Status:
      title: Twitter Status
      type: object
      properties:
        status:
          title: Status Body
          type: string
          description: The body of the tweet.
          readOnly: true
        screen_name:
          title: Screen Name
          type: string
          description: The Twitter handle for the author of the tweet.
          readOnly: true
        status_id:
          title: Status ID
          type: string
          description: The individual id for the tweet.
          readOnly: true
        datetime:
          title: Datetime
          type: string
          description: A timestamp for the tweet.
          format: date-time
          readOnly: true
        is_retweet:
          title: Is Retweet
          type: boolean
          description: A 'true' or 'false' status of whether the tweet is a retweet.
          readOnly: true
      description: An individual tweet.
      example:
        datetime: 2000-01-23T04:56:07.000+00:00
        status_id: status_id
        screen_name: screen_name
        is_retweet: true
        status: status
    Template Default Content:
      title: Template Default Content
      type: object
      properties:
        sections:
          title: Sections
          type: object
          additionalProperties:
            type: object
            description: The default content for the sections that you can edit in
              the template.
          description: "The sections that you can edit in the template, including\
            \ each section's default content."
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Default content for a template.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        sections:
          key: {}
    Collection of Conversation Messages:
      title: Collection of Conversation Messages
      type: object
      properties:
        conversation_messages:
          title: Conversation Messages
          type: array
          description: "An array of objects, each representing a conversation messages\
            \ resources."
          items:
            $ref: '#/components/schemas/Conversation Message_1'
        conversation_id:
          title: Conversation ID
          type: string
          description: A string that identifies this conversation.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Messages from a specific conversation.
      example:
        conversation_messages:
        - from_email: from_email
          read: true
          list_id: 0
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          conversation_id: conversation_id
          subject: subject
          id: id
          message: message
          from_label: from_label
          timestamp: 2000-01-23T04:56:07.000+00:00
        - from_email: from_email
          read: true
          list_id: 0
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          conversation_id: conversation_id
          subject: subject
          id: id
          message: message
          from_label: from_label
          timestamp: 2000-01-23T04:56:07.000+00:00
        _links:
        - null
        - null
        conversation_id: conversation_id
        total_items: 6
    AB Split:
      title: A/B Split
      type: object
      properties:
        a:
          $ref: '#/components/schemas/Group A'
        b:
          $ref: '#/components/schemas/Group B'
      description: A breakdown of clicks by different groups of an A/B Split campaign.
        Does not return information about Multivariate Campaigns.
      example:
        a:
          click_percentage_a: 2.3021358869347655
          unique_clicks_a: 7
          total_clicks_a: 5
          unique_click_percentage_a: 9.301444243932576
        b:
          click_percentage_b: 2.027123023002322
          unique_clicks_b: 4
          total_clicks_b: 3
          unique_click_percentage_b: 7.386281948385884
    Campaign Feedback:
      title: Campaign Feedback
      required:
      - message
      type: object
      properties:
        block_id:
          title: Block ID
          type: integer
          description: The block id for the editable block that the feedback addresses.
        message:
          title: Message
          type: string
          description: The content of the feedback.
        is_complete:
          title: Complete
          type: boolean
          description: The status of feedback.
      description: A specific feedback message from a specific campaign.
    Batch:
      title: Batch
      type: object
      properties:
        id:
          title: Batch ID
          type: string
          description: A string that uniquely identifies this batch request.
          readOnly: true
        status:
          title: Status
          type: string
          description: "The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation)\
            \ about the batch operation status."
          readOnly: true
          enum:
          - pending
          - preprocessing
          - started
          - finalizing
          - finished
        total_operations:
          title: Total Operations
          type: integer
          description: "The total number of operations to complete as part of this\
            \ batch request. For GET requests requiring pagination, each page counts\
            \ as a separate operation."
          readOnly: true
        finished_operations:
          title: Finished Operations
          type: integer
          description: The number of completed operations. This includes operations
            that returned an error.
          readOnly: true
        errored_operations:
          title: Error Operations
          type: integer
          description: The number of completed operations that returned an error.
          readOnly: true
        submitted_at:
          title: Submitted At
          type: string
          description: The date and time when the server received the batch request
            in ISO 8601 format.
          format: date-time
          readOnly: true
        completed_at:
          title: Completed At
          type: string
          description: The date and time when all operations in the batch request
            completed in ISO 8601 format.
          format: date-time
          readOnly: true
        response_body_url:
          title: Response Body URL
          type: string
          description: The URL of the gzipped archive of the results of all the operations.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The status of a batch request
      example:
        finished_operations: 6
        completed_at: 2000-01-23T04:56:07.000+00:00
        submitted_at: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_operations: 0
        errored_operations: 1
        id: id
        response_body_url: response_body_url
        status: pending
    Click Detail Members:
      title: Click Detail Members
      type: object
      properties:
        members:
          title: Lists
          type: array
          description: "An array of objects, each representing a member who clicked\
            \ a specific link within a campaign."
          items:
            $ref: '#/components/schemas/Click Detail Member_1'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of members who clicked on a specific link within a
        campaign.
      example:
        _links:
        - null
        - null
        members:
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          clicks: 0
          contact_status: contact_status
          url_id: url_id
          vip: true
          list_is_active: true
          campaign_id: campaign_id
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          clicks: 0
          contact_status: contact_status
          url_id: url_id
          vip: true
          list_is_active: true
          campaign_id: campaign_id
        total_items: 6
        campaign_id: campaign_id
    Subscriber Removed from Automation Workflow_1:
      title: Subscriber Removed from Automation Workflow
      type: object
      properties:
        id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        workflow_id:
          title: Workflow ID
          type: string
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: A string that uniquely identifies a list.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: The list member's email address.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of a subscriber removed from an Automation workflow.
      example:
        workflow_id: workflow_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
    Campaign_3:
      title: Campaign
      required:
      - type
      type: object
      properties:
        id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies this campaign.
          readOnly: true
        web_id:
          title: Campaign Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this campaign\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
          readOnly: true
        parent_campaign_id:
          title: Parent Campaign ID
          type: string
          description: "If this campaign is the child of another campaign, this identifies\
            \ the parent campaign. For Example, for RSS or Automation children."
          readOnly: true
        type:
          title: Campaign Type
          type: string
          description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
            \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
            \ and variate campaigns should be used instead."
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
        create_time:
          title: Create Time
          type: string
          description: The date and time the campaign was created in ISO 8601 format.
          format: date-time
          readOnly: true
        archive_url:
          title: Archive URL
          type: string
          description: The link to the campaign's archive version.
          readOnly: true
        long_archive_url:
          title: Long Archive URL
          type: string
          description: The original link to the campaign's archive version.
          readOnly: true
        status:
          title: Campaign Status
          type: string
          description: The current status of the campaign.
          readOnly: true
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          - canceled
          - canceling
          - archived
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for this campaign.
          readOnly: true
        send_time:
          title: Send Time
          type: string
          description: The date and time a campaign was sent in ISO 8601 format.
          format: date-time
          readOnly: true
        content_type:
          title: Content Type
          type: string
          description: "How the campaign's content is put together ('template', 'drag_and_drop',\
            \ 'html', 'url')."
          readOnly: true
        needs_block_refresh:
          title: Needs Block Refresh
          type: boolean
          description: Determines if the campaign needs its blocks refreshed by opening
            the web-based campaign editor. Deprecated and will always return false.
          readOnly: true
        resendable:
          title: Resendable
          type: boolean
          description: Determines if the campaign qualifies to be resent to non-openers.
          readOnly: true
        recipients:
          $ref: '#/components/schemas/List_7'
        settings:
          $ref: '#/components/schemas/Campaign Settings_3'
        variate_settings:
          $ref: '#/components/schemas/AB Test Options_1'
        tracking:
          $ref: '#/components/schemas/Campaign Tracking Options'
        rss_opts:
          $ref: '#/components/schemas/RSS Options_2'
        ab_split_opts:
          $ref: '#/components/schemas/AB Testing Options'
        social_card:
          $ref: '#/components/schemas/Campaign Social Card'
        report_summary:
          $ref: '#/components/schemas/Campaign Report Summary'
        delivery_status:
          $ref: '#/components/schemas/Campaign Delivery Status'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual campaign's settings and content.
      example:
        archive_url: archive_url
        resendable: true
        settings:
          auto_footer: true
          subject_line: subject_line
          preview_text: preview_text
          use_conversation: true
          authenticate: true
          to_name: to_name
          timewarp: true
          title: title
          from_name: from_name
          auto_tweet: true
          auto_fb_post:
          - auto_fb_post
          - auto_fb_post
          fb_comments: true
          drag_and_drop: true
          reply_to: reply_to
          inline_css: true
          template_id: 5
          folder_id: folder_id
        variate_settings:
          send_times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          combinations:
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          wait_time: 5
          subject_lines:
          - subject_lines
          - subject_lines
          contents:
          - contents
          - contents
          test_size: 2
          winning_combination_id: winning_combination_id
          reply_to_addresses:
          - reply_to_addresses
          - reply_to_addresses
          winner_criteria: opens
          winning_campaign_id: winning_campaign_id
          from_names:
          - from_names
          - from_names
        ab_split_opts:
          pick_winner: opens
          wait_time: 1
          wait_units: hours
          subject_b: subject_b
          subject_a: subject_a
          split_test: subject
          from_name_a: from_name_a
          from_name_b: from_name_b
          send_time_winner: send_time_winner
          reply_email_b: reply_email_b
          reply_email_a: reply_email_a
          send_time_a: 2000-01-23T04:56:07.000+00:00
          send_time_b: 2000-01-23T04:56:07.000+00:00
          split_size: 34
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        web_id: 0
        type: regular
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        needs_block_refresh: true
        send_time: 2000-01-23T04:56:07.000+00:00
        rss_opts:
          schedule:
            hour: 16
            weekly_send_day: sunday
            daily_send:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            monthly_send_date: 28.834477156190985
          last_sent: 2000-01-23T04:56:07.000+00:00
          constrain_rss_img: true
          feed_url: http://example.com/aeiou
          frequency: daily
        parent_campaign_id: parent_campaign_id
        content_type: content_type
        social_card:
          image_url: image_url
          description: description
          title: title
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - {}
            - {}
          list_id: list_id
          segment_text: segment_text
          recipient_count: 1
          list_name: list_name
        emails_sent: 6
        id: id
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: delivering
        long_archive_url: long_archive_url
        status: save
        report_summary:
          subscriber_clicks: 1
          click_rate: 1.0246457001441578
          ecommerce:
            total_spent: 8.762042012749001
            total_revenue: 9.018348186070783
            total_orders: 6
          opens: 3
          clicks: 7
          unique_opens: 2
          open_rate: 4.145608029883936
    Campaign_4:
      title: Campaign
      type: object
      properties:
        id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies this campaign.
          readOnly: true
        web_id:
          title: Campaign Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this campaign\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
          readOnly: true
        parent_campaign_id:
          title: Parent Campaign ID
          type: string
          description: "If this campaign is the child of another campaign, this identifies\
            \ the parent campaign. For Example, for RSS or Automation children."
          readOnly: true
        type:
          title: Campaign Type
          type: string
          description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
            \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
            \ and variate campaigns should be used instead."
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
        create_time:
          title: Create Time
          type: string
          description: The date and time the campaign was created in ISO 8601 format.
          format: date-time
          readOnly: true
        archive_url:
          title: Archive URL
          type: string
          description: The link to the campaign's archive version in ISO 8601 format.
          readOnly: true
        long_archive_url:
          title: Long Archive URL
          type: string
          description: The original link to the campaign's archive version.
          readOnly: true
        status:
          title: Campaign Status
          type: string
          description: The current status of the campaign.
          readOnly: true
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          - canceled
          - canceling
          - archived
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for this campaign.
          readOnly: true
        send_time:
          title: Send Time
          type: string
          description: The date and time a campaign was sent.
          format: date-time
          readOnly: true
        content_type:
          title: Content Type
          type: string
          description: How the campaign's content is put together.
          enum:
          - template
          - html
          - url
          - multichannel
        needs_block_refresh:
          title: Needs Block Refresh
          type: boolean
          description: Determines if the campaign needs its blocks refreshed by opening
            the web-based campaign editor. Deprecated and will always return false.
          readOnly: true
        resendable:
          title: Resendable
          type: boolean
          description: Determines if the campaign qualifies to be resent to non-openers.
          readOnly: true
        recipients:
          $ref: '#/components/schemas/List_8'
        settings:
          $ref: '#/components/schemas/Campaign Settings_4'
        variate_settings:
          $ref: '#/components/schemas/AB Test Options_2'
        tracking:
          $ref: '#/components/schemas/Campaign Tracking Options'
        rss_opts:
          $ref: '#/components/schemas/RSS Options_3'
        ab_split_opts:
          $ref: '#/components/schemas/AB Testing Options'
        social_card:
          $ref: '#/components/schemas/Campaign Social Card'
        report_summary:
          $ref: '#/components/schemas/Campaign Report Summary_1'
        delivery_status:
          $ref: '#/components/schemas/Campaign Delivery Status'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual campaign's settings and content.
      example:
        archive_url: archive_url
        resendable: true
        settings:
          auto_footer: true
          subject_line: subject_line
          preview_text: preview_text
          use_conversation: true
          authenticate: true
          to_name: to_name
          timewarp: true
          title: title
          from_name: from_name
          auto_tweet: true
          auto_fb_post:
          - auto_fb_post
          - auto_fb_post
          fb_comments: true
          drag_and_drop: true
          reply_to: reply_to
          inline_css: true
          template_id: 5
          folder_id: folder_id
        variate_settings:
          send_times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          combinations:
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          wait_time: 5
          subject_lines:
          - subject_lines
          - subject_lines
          contents:
          - contents
          - contents
          test_size: 2
          winning_combination_id: winning_combination_id
          reply_to_addresses:
          - reply_to_addresses
          - reply_to_addresses
          winner_criteria: opens
          winning_campaign_id: winning_campaign_id
          from_names:
          - from_names
          - from_names
        ab_split_opts:
          pick_winner: opens
          wait_time: 1
          wait_units: hours
          subject_b: subject_b
          subject_a: subject_a
          split_test: subject
          from_name_a: from_name_a
          from_name_b: from_name_b
          send_time_winner: send_time_winner
          reply_email_b: reply_email_b
          reply_email_a: reply_email_a
          send_time_a: 2000-01-23T04:56:07.000+00:00
          send_time_b: 2000-01-23T04:56:07.000+00:00
          split_size: 34
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        web_id: 0
        type: regular
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        needs_block_refresh: true
        send_time: 2000-01-23T04:56:07.000+00:00
        rss_opts:
          schedule:
            hour: 2
            weekly_send_day: sunday
            daily_send:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            monthly_send_date: 3.1764016704468894
          last_sent: 2000-01-23T04:56:07.000+00:00
          constrain_rss_img: true
          feed_url: http://example.com/aeiou
          frequency: daily
        parent_campaign_id: parent_campaign_id
        content_type: template
        social_card:
          image_url: image_url
          description: description
          title: title
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - {}
            - {}
          list_id: list_id
          segment_text: segment_text
          recipient_count: 1
          list_name: list_name
          list_is_active: true
        emails_sent: 6
        id: id
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: delivering
        long_archive_url: long_archive_url
        status: save
        report_summary:
          subscriber_clicks: 9
          click_rate: 9.369310271410669
          ecommerce:
            total_spent: 8.762042012749001
            total_revenue: 9.018348186070783
            total_orders: 6
          opens: 7
          clicks: 5
          unique_opens: 1
          open_rate: 4.965218492984954
    Campaign Tracking Options:
      title: Campaign Tracking Options
      type: object
      properties:
        opens:
          title: Opens
          type: boolean
          description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
            \ Defaults to `true`. Cannot be set to false for variate campaigns."
        html_clicks:
          title: HTML Click Tracking
          type: boolean
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the HTML version of the campaign. Defaults to `true`. Cannot be set\
            \ to false for variate campaigns."
        text_clicks:
          title: Plain-Text Click Tracking
          type: boolean
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the plain-text version of the campaign. Defaults to `true`. Cannot\
            \ be set to false for variate campaigns."
        goal_tracking:
          title: Mailchimp Goal Tracking
          type: boolean
          description: Deprecated
        ecomm360:
          title: E-commerce Tracking
          type: boolean
          description: Whether to enable e-commerce tracking.
        google_analytics:
          title: Google Analytics Tracking
          type: string
          description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
            \ tracking (max of 50 bytes)."
        clicktale:
          title: ClickTale Analytics Tracking
          type: string
          description: "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
            \ tracking (max of 50 bytes)."
        salesforce:
          $ref: '#/components/schemas/Salesforce CRM Tracking'
        capsule:
          $ref: '#/components/schemas/Capsule CRM Tracking'
      description: The tracking options for a campaign.
      example:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: clicktale
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: google_analytics
        html_clicks: true
    Campaign_1:
      title: Campaign
      type: object
      properties:
        id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies this campaign.
          readOnly: true
        web_id:
          title: Campaign Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this campaign\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
          readOnly: true
        parent_campaign_id:
          title: Parent Campaign ID
          type: string
          description: "If this campaign is the child of another campaign, this identifies\
            \ the parent campaign. For Example, for RSS or Automation children."
          readOnly: true
        type:
          title: Campaign Type
          type: string
          description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
            \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
            \ and variate campaigns should be used instead."
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
        create_time:
          title: Create Time
          type: string
          description: The date and time the campaign was created in ISO 8601 format.
          format: date-time
          readOnly: true
        archive_url:
          title: Archive URL
          type: string
          description: The link to the campaign's archive version in ISO 8601 format.
          readOnly: true
        long_archive_url:
          title: Long Archive URL
          type: string
          description: The original link to the campaign's archive version.
          readOnly: true
        status:
          title: Campaign Status
          type: string
          description: The current status of the campaign.
          readOnly: true
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          - canceled
          - canceling
          - archived
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for this campaign.
          readOnly: true
        send_time:
          title: Send Time
          type: string
          description: The date and time a campaign was sent.
          format: date-time
          readOnly: true
        content_type:
          title: Content Type
          type: string
          description: How the campaign's content is put together.
          enum:
          - template
          - html
          - url
          - multichannel
        needs_block_refresh:
          title: Needs Block Refresh
          type: boolean
          description: Determines if the campaign needs its blocks refreshed by opening
            the web-based campaign editor. Deprecated and will always return false.
          readOnly: true
        resendable:
          title: Resendable
          type: boolean
          description: Determines if the campaign qualifies to be resent to non-openers.
          readOnly: true
        recipients:
          $ref: '#/components/schemas/List_8'
        settings:
          $ref: '#/components/schemas/Campaign Settings_4'
        variate_settings:
          $ref: '#/components/schemas/AB Test Options_2'
        tracking:
          $ref: '#/components/schemas/Campaign Tracking Options'
        rss_opts:
          $ref: '#/components/schemas/RSS Options_3'
        ab_split_opts:
          $ref: '#/components/schemas/AB Testing Options'
        social_card:
          $ref: '#/components/schemas/Campaign Social Card'
        report_summary:
          $ref: '#/components/schemas/Campaign Report Summary_1'
        delivery_status:
          $ref: '#/components/schemas/Campaign Delivery Status'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual campaign's settings and content.
      example:
        archive_url: archive_url
        resendable: true
        settings:
          auto_footer: true
          subject_line: subject_line
          preview_text: preview_text
          use_conversation: true
          authenticate: true
          to_name: to_name
          timewarp: true
          title: title
          from_name: from_name
          auto_tweet: true
          auto_fb_post:
          - auto_fb_post
          - auto_fb_post
          fb_comments: true
          drag_and_drop: true
          reply_to: reply_to
          inline_css: true
          template_id: 5
          folder_id: folder_id
        variate_settings:
          send_times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          combinations:
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          - subject_line: 7
            send_time: 9
            reply_to: 2
            recipients: 7
            id: id
            from_name: 3
            content_description: 4
          wait_time: 5
          subject_lines:
          - subject_lines
          - subject_lines
          contents:
          - contents
          - contents
          test_size: 2
          winning_combination_id: winning_combination_id
          reply_to_addresses:
          - reply_to_addresses
          - reply_to_addresses
          winner_criteria: opens
          winning_campaign_id: winning_campaign_id
          from_names:
          - from_names
          - from_names
        ab_split_opts:
          pick_winner: opens
          wait_time: 1
          wait_units: hours
          subject_b: subject_b
          subject_a: subject_a
          split_test: subject
          from_name_a: from_name_a
          from_name_b: from_name_b
          send_time_winner: send_time_winner
          reply_email_b: reply_email_b
          reply_email_a: reply_email_a
          send_time_a: 2000-01-23T04:56:07.000+00:00
          send_time_b: 2000-01-23T04:56:07.000+00:00
          split_size: 34
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        web_id: 0
        type: regular
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        needs_block_refresh: true
        send_time: 2000-01-23T04:56:07.000+00:00
        rss_opts:
          schedule:
            hour: 2
            weekly_send_day: sunday
            daily_send:
              sunday: true
              saturday: true
              tuesday: true
              wednesday: true
              thursday: true
              friday: true
              monday: true
            monthly_send_date: 3.1764016704468894
          last_sent: 2000-01-23T04:56:07.000+00:00
          constrain_rss_img: true
          feed_url: http://example.com/aeiou
          frequency: daily
        parent_campaign_id: parent_campaign_id
        content_type: template
        social_card:
          image_url: image_url
          description: description
          title: title
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - {}
            - {}
          list_id: list_id
          segment_text: segment_text
          recipient_count: 1
          list_name: list_name
          list_is_active: true
        emails_sent: 6
        id: id
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: delivering
        long_archive_url: long_archive_url
        status: save
        report_summary:
          subscriber_clicks: 9
          click_rate: 9.369310271410669
          ecommerce:
            total_spent: 8.762042012749001
            total_revenue: 9.018348186070783
            total_orders: 6
          opens: 7
          clicks: 5
          unique_opens: 1
          open_rate: 4.965218492984954
    Campaign_2:
      title: Campaign
      required:
      - settings
      type: object
      properties:
        recipients:
          $ref: '#/components/schemas/List_2'
        settings:
          $ref: '#/components/schemas/Campaign Settings_2'
        variate_settings:
          $ref: '#/components/schemas/AB Test Options'
        tracking:
          $ref: '#/components/schemas/Campaign Tracking Options'
        rss_opts:
          $ref: '#/components/schemas/RSS Options_1'
        social_card:
          $ref: '#/components/schemas/Campaign Social Card'
      description: A summary of an individual campaign's settings and content.
    inline_response_200_13_report_summary_average_order_amount:
      type: object
      properties:
        amount:
          type: number
        currency_code:
          type: string
      example:
        amount: 1.2315135367772556
        currency_code: currency_code
    Collection of Events:
      title: Collection of Events
      type: object
      properties:
        events:
          title: Events
          type: array
          description: "An array of objects, each representing an event."
          items:
            $ref: '#/components/schemas/Event'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of events for a given contact
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
        events:
        - occurred_at: 2000-01-23T04:56:07.000+00:00
          name: name
          properties:
            key: properties
        - occurred_at: 2000-01-23T04:56:07.000+00:00
          name: name
          properties:
            key: properties
    Batch Webhooks:
      title: Batch Webhooks
      type: object
      properties:
        webhooks:
          title: Webhooks
          type: array
          description: "An array of objects, each representing a Batch Webhook."
          items:
            $ref: '#/components/schemas/Batch Webhook_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Manage webhooks for batch requests.
      example:
        webhooks:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
          url: http://yourdomain.com/webhook
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
          url: http://yourdomain.com/webhook
        _links:
        - null
        - null
        total_items: 0
    Collection of Element style for List Signup Forms:
      title: Collection of Element style for List Signup Forms
      type: object
      properties:
        selector:
          title: Selector
          type: string
          description: A string that identifies the element selector.
          example: page_background
          enum:
          - page_background
          - page_header
          - page_outer_wrapper
          - body_background
          - body_link_style
          - forms_buttons
          - forms_buttons_hovered
          - forms_field_label
          - forms_field_text
          - forms_required
          - forms_required_legend
          - forms_help_text
          - forms_errors
          - monkey_rewards_badge
        options:
          title: Options
          type: array
          description: A collection of options for a selector.
          items:
            $ref: '#/components/schemas/An option for Signup Form Styles'
      description: Collection of Element style for List Signup Forms.
      example:
        options:
        - property: background-color
          value: '#111111'
        - property: background-color
          value: '#111111'
        selector: page_background
    Campaign SubReports:
      title: Campaign Sub-Reports
      type: object
      properties:
        reports:
          title: Reports
          type: array
          description: "An array of objects, each representing a report resource."
          items:
            $ref: '#/components/schemas/Campaign Report_1'
        campaign_id:
          title: Campaign ID
          type: string
          description: Unique identifier of the parent campaign
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of reports containing child campaigns for a specific campaign.
      example:
        reports:
        - forwards:
            forwards_count: 7
            forwards_opens: 9
          share_report:
            share_url: share_url
            share_password: share_password
          preview_text: preview_text
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          rss_last_send: 2000-01-23T04:56:07.000+00:00
          list_name: list_name
          type: type
          list_is_active: true
          industry_stats:
            unopen_rate: 9.369310271410669
            click_rate: 5.025004791520295
            bounce_rate: 9.965781217890562
            unsub_rate: 6.683562403749608
            type: type
            abuse_rate: 8.762042012749001
            open_rate: 4.965218492984954
          list_stats:
            sub_rate: 9.018348186070783
            click_rate: 6.965117697638846
            unsub_rate: 6.438423552598547
            open_rate: 3.5571952270680973
          campaign_title: campaign_title
          facebook_likes:
            facebook_likes: 1
            unique_likes: 7
            recipient_likes: 6
          timeseries:
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          emails_sent: 0
          ecommerce:
            total_spent: 4.678947989005849
            total_revenue: 7.260521264802104
            total_orders: 1
            currency_code: USD
          id: id
          bounces:
            hard_bounces: 5
            syntax_errors: 2
            soft_bounces: 5
          subject_line: subject_line
          ab_split:
            a:
              forwards: 5
              unsubs: 6
              opens: 3
              bounces: 1
              recipient_clicks: 6
              forwards_opens: 6
              last_open: last_open
              abuse_reports: 2
              unique_opens: 3
            b:
              forwards: 0
              unsubs: 7
              opens: 8
              bounces: 7
              recipient_clicks: 6
              forwards_opens: 4
              last_open: last_open
              abuse_reports: 0
              unique_opens: 7
          timewarp:
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          unsubscribed: 1
          send_time: 2000-01-23T04:56:07.000+00:00
          opens:
            opens_total: 3
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 2
            open_rate: 4.145608029883936
          clicks:
            clicks_total: 7
            unique_clicks: 1
            click_rate: 1.4894159098541704
            last_click: 2000-01-23T04:56:07.000+00:00
            unique_subscriber_clicks: 1
          abuse_reports: 6
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
        - forwards:
            forwards_count: 7
            forwards_opens: 9
          share_report:
            share_url: share_url
            share_password: share_password
          preview_text: preview_text
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          rss_last_send: 2000-01-23T04:56:07.000+00:00
          list_name: list_name
          type: type
          list_is_active: true
          industry_stats:
            unopen_rate: 9.369310271410669
            click_rate: 5.025004791520295
            bounce_rate: 9.965781217890562
            unsub_rate: 6.683562403749608
            type: type
            abuse_rate: 8.762042012749001
            open_rate: 4.965218492984954
          list_stats:
            sub_rate: 9.018348186070783
            click_rate: 6.965117697638846
            unsub_rate: 6.438423552598547
            open_rate: 3.5571952270680973
          campaign_title: campaign_title
          facebook_likes:
            facebook_likes: 1
            unique_likes: 7
            recipient_likes: 6
          timeseries:
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          emails_sent: 0
          ecommerce:
            total_spent: 4.678947989005849
            total_revenue: 7.260521264802104
            total_orders: 1
            currency_code: USD
          id: id
          bounces:
            hard_bounces: 5
            syntax_errors: 2
            soft_bounces: 5
          subject_line: subject_line
          ab_split:
            a:
              forwards: 5
              unsubs: 6
              opens: 3
              bounces: 1
              recipient_clicks: 6
              forwards_opens: 6
              last_open: last_open
              abuse_reports: 2
              unique_opens: 3
            b:
              forwards: 0
              unsubs: 7
              opens: 8
              bounces: 7
              recipient_clicks: 6
              forwards_opens: 4
              last_open: last_open
              abuse_reports: 0
              unique_opens: 7
          timewarp:
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          unsubscribed: 1
          send_time: 2000-01-23T04:56:07.000+00:00
          opens:
            opens_total: 3
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 2
            open_rate: 4.145608029883936
          clicks:
            clicks_total: 7
            unique_clicks: 1
            click_rate: 1.4894159098541704
            last_click: 2000-01-23T04:56:07.000+00:00
            unique_subscriber_clicks: 1
          abuse_reports: 6
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
        campaign_id: campaign_id
    Location_2:
      title: Location
      type: object
      properties:
        country:
          title: Country
          type: string
          description: The two-digit country code for a recorded click.
        region:
          title: Region
          type: string
          description: "If available, a specific region where the click was recorded."
          example: NY
      description: An individual click location.
      example:
        country: country
        region: NY
    Location_3:
      title: Location
      type: object
      properties:
        latitude:
          title: Latitude
          type: number
          description: The location latitude.
        longitude:
          title: Longitude
          type: number
          description: The location longitude.
        gmtoff:
          title: GMT Offset
          type: integer
          description: The time difference in hours from GMT.
          readOnly: true
        dstoff:
          title: DST Offset
          type: integer
          description: The offset for timezones where daylight saving time is observed.
          readOnly: true
        country_code:
          title: Country Code
          type: string
          description: The unique code for the location country.
          readOnly: true
        timezone:
          title: Timezone
          type: string
          description: The timezone for the location.
          readOnly: true
        region:
          title: Region
          type: string
          description: The region for the location.
          readOnly: true
      description: Subscriber location information.
      example:
        country_code: country_code
        dstoff: 2
        timezone: timezone
        latitude: 7.061401241503109
        gmtoff: 3
        region: region
        longitude: 9.301444243932576
    Exact Matches:
      title: Exact Matches
      type: object
      properties:
        members:
          title: Members
          type: array
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List Members_4'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
      description: Exact matches of the provided search query.
      example:
        members:
        - marketing_permissions:
          - marketing_permission_id: marketing_permission_id
            text: text
            enabled: true
          - marketing_permission_id: marketing_permission_id
            text: text
            enabled: true
          list_id: list_id
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          ip_signup: ip_signup
          member_rating: 2
          language: language
          source: source
          contact_id: contact_id
          unsubscribe_reason: unsubscribe_reason
          email_client: email_client
          stats:
            ecommerce_data:
              total_revenue: 5.962133916683182
              number_of_orders: 5.637376656633329
              currency_code: USD
            avg_click_rate: 1.4658129805029452
            avg_open_rate: 6.027456183070403
          tags_count: 4
          ip_opt: ip_opt
          id: id
          vip: true
          email_type: email_type
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          web_id: 0
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          full_name: full_name
          location:
            country_code: country_code
            dstoff: 2
            timezone: timezone
            latitude: 7.061401241503109
            gmtoff: 3
            region: region
            longitude: 9.301444243932576
          interests:
            key: true
          status: subscribed
          consents_to_one_to_one_messaging: true
          last_changed: 2000-01-23T04:56:07.000+00:00
        - marketing_permissions:
          - marketing_permission_id: marketing_permission_id
            text: text
            enabled: true
          - marketing_permission_id: marketing_permission_id
            text: text
            enabled: true
          list_id: list_id
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          ip_signup: ip_signup
          member_rating: 2
          language: language
          source: source
          contact_id: contact_id
          unsubscribe_reason: unsubscribe_reason
          email_client: email_client
          stats:
            ecommerce_data:
              total_revenue: 5.962133916683182
              number_of_orders: 5.637376656633329
              currency_code: USD
            avg_click_rate: 1.4658129805029452
            avg_open_rate: 6.027456183070403
          tags_count: 4
          ip_opt: ip_opt
          id: id
          vip: true
          email_type: email_type
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          web_id: 0
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          full_name: full_name
          location:
            country_code: country_code
            dstoff: 2
            timezone: timezone
            latitude: 7.061401241503109
            gmtoff: 3
            region: region
            longitude: 9.301444243932576
          interests:
            key: true
          status: subscribed
          consents_to_one_to_one_messaging: true
          last_changed: 2000-01-23T04:56:07.000+00:00
        total_items: 0
    List Contact_1:
      title: List Contact
      required:
      - address1
      - city
      - company
      - country
      - state
      - zip
      type: object
      properties:
        company:
          title: Company Name
          type: string
          description: The company name for the list.
        address1:
          title: Address
          type: string
          description: The street address for the list contact.
        address2:
          title: Address
          type: string
          description: The street address for the list contact.
        city:
          title: City
          type: string
          description: The city for the list contact.
        state:
          title: State
          type: string
          description: The state for the list contact.
        zip:
          title: Postal Code
          type: string
          description: The postal or zip code for the list contact.
        country:
          title: Country Code
          type: string
          description: A two-character ISO3166 country code. Defaults to US if invalid.
        phone:
          title: Phone Number
          type: string
          description: The phone number for the list contact.
      description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
        \ to comply with international spam laws."
      example: null
    List Contact_2:
      title: List Contact
      type: object
      properties:
        company:
          title: Company Name
          type: string
          description: The company name for the list.
        address1:
          title: Address
          type: string
          description: The street address for the list contact.
        address2:
          title: Address
          type: string
          description: The street address for the list contact.
        city:
          title: City
          type: string
          description: The city for the list contact.
        state:
          title: State
          type: string
          description: The state for the list contact.
        zip:
          title: Postal Code
          type: string
          description: The postal or zip code for the list contact.
        country:
          title: Country Code
          type: string
          description: A two-character ISO3166 country code. Defaults to US if invalid.
        phone:
          title: Phone Number
          type: string
          description: The phone number for the list contact.
      description: "[Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/)\
        \ to comply with international spam laws."
      example:
        zip: zip
        country: country
        address2: address2
        city: city
        phone: phone
        address1: address1
        company: company
        state: state
    Connected Sites:
      title: Connected Sites
      type: object
      properties:
        sites:
          title: Connected Sites
          type: array
          description: "An array of objects, each representing a connected site."
          items:
            $ref: '#/components/schemas/Connected Site_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of connected sites in the account.
      example:
        _links:
        - null
        - null
        sites:
        - foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
          store_id: MC001
          updated_at: 2015-07-15T19:35:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          domain: example.myshopify.com
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          created_at: 2015-07-15T19:28:00Z
          platform: "shopify, magento, bigcommerce, woocommerce"
        - foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
          store_id: MC001
          updated_at: 2015-07-15T19:35:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          domain: example.myshopify.com
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          created_at: 2015-07-15T19:28:00Z
          platform: "shopify, magento, bigcommerce, woocommerce"
        total_items: 0
    Template Content:
      title: Template Content
      required:
      - id
      type: object
      properties:
        id:
          title: Template ID
          type: integer
          description: The id of the template to use.
        sections:
          title: Template Sections
          type: object
          properties: {}
          description: "Content for the sections of the template. Each key should\
            \ be the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/)\
            \ name from the template."
      description: Use this template to generate the HTML content of the campaign
      example: null
    Referrer:
      title: Referrer
      type: object
      properties:
        referrer:
          title: Referrer
          type: string
          description: A referrer (truncated to 100 bytes).
        clicks:
          title: Clicks
          type: integer
          description: The number of clicks a single referrer generated.
        first_click:
          title: First Click
          type: string
          description: The timestamp for the first click from this referrer.
          format: date-time
        last_click:
          title: Last Click
          type: string
          description: The timestamp for the last click from this referrer.
          format: date-time
      description: A single instance of a campaign referral.
      example:
        referrer: referrer
        clicks: 5
        last_click: 2000-01-23T04:56:07.000+00:00
        first_click: 2000-01-23T04:56:07.000+00:00
    Marketing Permission_1:
      title: Marketing Permission
      type: object
      properties:
        marketing_permission_id:
          title: Marketing Permission ID
          type: string
          description: The id for the marketing permission on the list
        text:
          title: Marketing Permission Text
          type: string
          description: The text of the marketing permission.
        enabled:
          title: Enabled
          type: boolean
          description: If the subscriber has opted-in to the marketing permission.
      description: A single marketing permission a subscriber has either opted-in
        to or opted-out of.
      example:
        marketing_permission_id: marketing_permission_id
        text: text
        enabled: true
    Capsule CRM Tracking_1:
      title: Capsule CRM Tracking
      type: object
      properties:
        notes:
          title: Capsule Note
          type: boolean
          description: Update contact notes for a campaign based on a subscriber's
            email addresses.
      description: Deprecated
      example:
        notes: true
    AB Testing Options:
      title: A/B Testing Options
      type: object
      properties:
        split_test:
          title: Split Test
          type: string
          description: The type of AB split to run.
          enum:
          - subject
          - from_name
          - schedule
        pick_winner:
          title: Pick Winner
          type: string
          description: "How we should evaluate a winner. Based on 'opens', 'clicks',\
            \ or 'manual'."
          enum:
          - opens
          - clicks
          - manual
        wait_units:
          title: Wait Time
          type: string
          description: How unit of time for measuring the winner ('hours' or 'days').
            This cannot be changed after a campaign is sent.
          enum:
          - hours
          - days
        wait_time:
          title: Wait Time
          type: integer
          description: The amount of time to wait before picking a winner. This cannot
            be changed after a campaign is sent.
        split_size:
          title: Split Size
          maximum: 50
          minimum: 1
          type: integer
          description: The size of the split groups. Campaigns split based on 'schedule'
            are forced to have a 50/50 split. Valid split integers are between 1-50.
        from_name_a:
          title: From Name Group A
          type: string
          description: "For campaigns split on 'From Name', the name for Group A."
        from_name_b:
          title: From Name Group B
          type: string
          description: "For campaigns split on 'From Name', the name for Group B."
        reply_email_a:
          title: Reply Email Group A
          type: string
          description: "For campaigns split on 'From Name', the reply-to address for\
            \ Group A."
        reply_email_b:
          title: Reply Email Group B
          type: string
          description: "For campaigns split on 'From Name', the reply-to address for\
            \ Group B."
        subject_a:
          title: Subject Line Group A
          type: string
          description: "For campaigns split on 'Subject Line', the subject line for\
            \ Group A."
        subject_b:
          title: Subject Line Group B
          type: string
          description: "For campaigns split on 'Subject Line', the subject line for\
            \ Group B."
        send_time_a:
          title: Send Time Group A
          type: string
          description: The send time for Group A.
          format: date-time
        send_time_b:
          title: Send Time Group B
          type: string
          description: The send time for Group B.
          format: date-time
        send_time_winner:
          title: Send Time Winner
          type: string
          description: The send time for the winning version.
      description: "[A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/)\
        \ options for a campaign."
      readOnly: true
      example:
        pick_winner: opens
        wait_time: 1
        wait_units: hours
        subject_b: subject_b
        subject_a: subject_a
        split_test: subject
        from_name_a: from_name_a
        from_name_b: from_name_b
        send_time_winner: send_time_winner
        reply_email_b: reply_email_b
        reply_email_a: reply_email_a
        send_time_a: 2000-01-23T04:56:07.000+00:00
        send_time_b: 2000-01-23T04:56:07.000+00:00
        split_size: 34
    Daily clicks and visits data:
      title: Daily clicks and visits data
      type: object
      properties:
        clicks:
          title: Clicks
          type: array
          items:
            $ref: '#/components/schemas/Daily clicks and visits data_clicks'
        visits:
          title: Visits
          type: array
          items:
            $ref: '#/components/schemas/Daily clicks and visits data_visits'
        unique_visits:
          title: Unique Visits
          type: array
          items:
            $ref: '#/components/schemas/Daily clicks and visits data_unique_visits'
      description: The clicks and visits data from the last seven days.
      readOnly: true
      example:
        unique_visits:
        - date: 2018-04-25
          val: 1
        - date: 2018-04-25
          val: 1
        visits:
        - date: 2018-04-25
          val: 11
        - date: 2018-04-25
          val: 11
        clicks:
        - date: 2018-04-25
          val: 13
        - date: 2018-04-25
          val: 13
    Capsule CRM Tracking_2:
      title: Capsule CRM Tracking
      type: object
      properties:
        notes:
          title: Capsule Note
          type: boolean
          description: Update contact notes for a campaign based on a subscriber's
            email address.
      description: Deprecated
      example:
        notes: true
    Conversation Message:
      title: Conversation Message
      type: object
      properties:
        id:
          title: ID
          type: string
          description: A string that uniquely identifies this message
          readOnly: true
        conversation_id:
          title: Conversation ID
          type: string
          description: A string that identifies this message's conversation
          readOnly: true
        list_id:
          title: List ID
          type: integer
          description: The list's web ID
          readOnly: true
        from_label:
          title: From Label
          type: string
          description: A label representing the sender of this message
          readOnly: true
        from_email:
          title: From Email
          type: string
          description: A label representing the email of the sender of this message
        subject:
          title: Subject
          type: string
          description: The subject of this message
        message:
          title: Message
          type: string
          description: The plain-text content of the message
        read:
          title: Read
          type: boolean
          description: Whether this message has been marked as read
        timestamp:
          title: Timestamp
          type: string
          description: The date and time the message was either sent or received in
            ISO 8601 format.
          format: date-time
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An individual message in a conversation. Conversation tracking
        is a feature available to paid accounts that lets you view replies to your
        campaigns in your Mailchimp account.
      example:
        from_email: from_email
        read: true
        list_id: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        conversation_id: conversation_id
        subject: subject
        id: id
        message: message
        from_label: from_label
        timestamp: 2000-01-23T04:56:07.000+00:00
    Location_1:
      title: Location
      type: object
      properties:
        latitude:
          title: Latitude
          type: number
          description: The location latitude.
        longitude:
          title: Longitude
          type: number
          description: The location longitude.
        gmtoff:
          title: GMT Offset
          type: integer
          description: The time difference in hours from GMT.
          readOnly: true
        dstoff:
          title: DST Offset
          type: integer
          description: The offset for timezones where daylight saving time is observed.
          readOnly: true
        country_code:
          title: Country Code
          type: string
          description: The unique code for the location country.
          readOnly: true
        timezone:
          title: Timezone
          type: string
          description: The timezone for the location.
          readOnly: true
      description: Subscriber location information.
      example:
        country_code: country_code
        dstoff: 7
        timezone: timezone
        latitude: 5.962133916683182
        gmtoff: 2
        longitude: 5.637376656633329
    Ecommerce Product:
      title: E-commerce Product
      required:
      - id
      - title
      - variants
      type: object
      properties:
        id:
          title: Product Foreign ID
          type: string
          description: A unique identifier for the product.
        title:
          title: Title
          type: string
          description: The title of a product.
          example: Cat Hat
        handle:
          title: Handle
          type: string
          description: The handle of a product.
          example: cat-hat
        url:
          title: Product URL
          type: string
          description: The URL for a product.
        description:
          title: Description
          type: string
          description: The description of a product.
          example: This is a cat hat.
        type:
          title: Type
          type: string
          description: The type of product.
          example: Accessories
        vendor:
          title: Vendor
          type: string
          description: The vendor for a product.
        image_url:
          title: Product Image URL
          type: string
          description: The image URL for a product.
        variants:
          title: Product Variants
          type: array
          description: An array of the product's variants. At least one variant is
            required for each product. A variant can use the same `id` and `title`
            as the parent product.
          items:
            $ref: '#/components/schemas/Ecommerce Product Variant'
        images:
          title: Product Images
          type: array
          description: An array of the product's images.
          items:
            $ref: '#/components/schemas/Ecommerce Product Image'
        published_at_foreign:
          title: Foreign Publish Time
          type: string
          description: The date and time the product was published.
          format: date-time
          example: 2015-07-15T19:28:00Z
      description: Information about a specific product.
    Address:
      title: Address
      type: object
      properties:
        address1:
          title: Address Field 1
          type: string
          description: The store's mailing address.
          example: 675 Ponce de Leon Ave NE
        address2:
          title: Address Field 2
          type: string
          description: An additional field for the store's mailing address.
          example: Suite 5000
        city:
          title: 'City '
          type: string
          description: The city the store is located in.
          example: Atlanta
        province:
          title: Province
          type: string
          description: The store's state name or normalized province.
          example: Georgia
        province_code:
          title: Province Code
          type: string
          description: The two-letter code for the store's province or state.
          example: GA
        postal_code:
          title: Postal Code
          type: string
          description: The store's postal or zip code.
          example: "30308"
        country:
          title: Country Code
          type: string
          description: The store's country.
          example: United States
        country_code:
          title: Country Code
          type: string
          description: The two-letter code for to the store's country.
          example: US
        longitude:
          title: Longitude
          type: number
          description: The longitude of the store location.
          example: -75.68903
        latitude:
          title: Latitude
          type: number
          description: The latitude of the store location.
          example: 45.427408
      description: The store address.
      example:
        country: United States
        country_code: US
        province: Georgia
        address2: Suite 5000
        city: Atlanta
        address1: 675 Ponce de Leon Ave NE
        latitude: 45.427408
        province_code: GA
        postal_code: "30308"
        longitude: -75.68903
    Email Clients:
      title: Email Clients
      type: object
      properties:
        clients:
          title: Email Clients
          type: array
          description: An array of top email clients.
          items:
            $ref: '#/components/schemas/Email Client'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The top email clients based on user-agent strings.
      example:
        clients:
        - members: 0
          client: client
        - members: 0
          client: client
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
    inline_response_200_11_channel:
      type: object
      properties:
        fb_placement_feed:
          type: boolean
          description: Is this for facebook feed
          example: true
        fb_placement_audience:
          type: boolean
          description: Is this for facebook audience
          example: false
        ig_placement_feed:
          type: boolean
          description: Is this for instagram feed
          example: false
      description: Channel settings
      example:
        fb_placement_feed: true
        fb_placement_audience: false
        ig_placement_feed: false
    Automation Workflow_2:
      title: Automation Workflow
      type: object
      properties:
        id:
          title: Automation Campaign ID
          type: string
          description: A string that identifies the Automation.
          readOnly: true
        create_time:
          title: Create Time
          type: string
          description: The date and time the Automation was created in ISO 8601 format.
          format: date-time
          readOnly: true
        start_time:
          title: Start Time
          type: string
          description: The date and time the Automation was started in ISO 8601 format.
          format: date-time
          readOnly: true
        status:
          title: Automation Status
          type: string
          description: The current status of the Automation.
          readOnly: true
          enum:
          - save
          - paused
          - sending
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for the Automation.
          readOnly: true
        recipients:
          $ref: '#/components/schemas/List_9'
        settings:
          $ref: '#/components/schemas/Automation Campaign Settings_1'
        tracking:
          $ref: '#/components/schemas/Automation Tracking Options'
        trigger_settings:
          $ref: '#/components/schemas/Automation Trigger_1'
        report_summary:
          $ref: '#/components/schemas/Campaign Report Summary_2'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual Automation workflow's settings and content.
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        settings:
          auto_footer: true
          use_conversation: true
          authenticate: true
          reply_to: reply_to
          to_name: to_name
          inline_css: true
          title: title
          from_name: from_name
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        recipients:
          segment_opts:
            match: any
            saved_segment_id: 6
            conditions:
            - {}
            - {}
          store_id: 1a2df69xxx
          list_id: list_id
          list_name: list_name
          list_is_active: true
        emails_sent: 0
        trigger_settings:
          runtime:
            hours:
              type: send_asap
            days:
            - sunday
            - sunday
          workflow_emails_count: 1
          workflow_type: abandonedBrowse
          workflow_title: workflow_title
        id: id
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        status: save
        report_summary:
          subscriber_clicks: 9
          click_rate: 3.616076749251911
          opens: 5
          clicks: 7
          unique_opens: 5
          open_rate: 2.3021358869347655
    Automation Workflow_1:
      title: Automation Workflow
      type: object
      properties:
        id:
          title: Automation Campaign ID
          type: string
          description: A string that identifies the Automation.
          readOnly: true
        create_time:
          title: Create Time
          type: string
          description: The date and time the Automation was created in ISO 8601 format.
          format: date-time
          readOnly: true
        start_time:
          title: Start Time
          type: string
          description: The date and time the Automation was started in ISO 8601 format.
          format: date-time
          readOnly: true
        status:
          title: Automation Status
          type: string
          description: The current status of the Automation.
          readOnly: true
          enum:
          - save
          - paused
          - sending
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for the Automation.
          readOnly: true
        recipients:
          $ref: '#/components/schemas/List_9'
        settings:
          $ref: '#/components/schemas/Automation Campaign Settings_1'
        tracking:
          $ref: '#/components/schemas/Automation Tracking Options'
        trigger_settings:
          $ref: '#/components/schemas/Automation Trigger_1'
        report_summary:
          $ref: '#/components/schemas/Campaign Report Summary_2'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual Automation workflow's settings and content.
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        settings:
          auto_footer: true
          use_conversation: true
          authenticate: true
          reply_to: reply_to
          to_name: to_name
          inline_css: true
          title: title
          from_name: from_name
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        recipients:
          segment_opts:
            match: any
            saved_segment_id: 6
            conditions:
            - {}
            - {}
          store_id: 1a2df69xxx
          list_id: list_id
          list_name: list_name
          list_is_active: true
        emails_sent: 0
        trigger_settings:
          runtime:
            hours:
              type: send_asap
            days:
            - sunday
            - sunday
          workflow_emails_count: 1
          workflow_type: abandonedBrowse
          workflow_title: workflow_title
        id: id
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        status: save
        report_summary:
          subscriber_clicks: 9
          click_rate: 3.616076749251911
          opens: 5
          clicks: 7
          unique_opens: 5
          open_rate: 2.3021358869347655
    AB Test Options_2:
      title: A/B Test Options
      type: object
      properties:
        winning_combination_id:
          title: Winning Combination ID
          type: string
          description: ID for the winning combination.
          readOnly: true
        winning_campaign_id:
          title: Winning Campaign ID
          type: string
          description: ID of the campaign that was sent to the remaining recipients
            based on the winning combination.
          readOnly: true
        winner_criteria:
          title: Winning Criteria
          type: string
          description: "The combination that performs the best. This may be determined\
            \ automatically by click rate, open rate, or total revenue -- or you may\
            \ choose manually based on the reporting data you find the most valuable.\
            \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
            \ For Multivariate Campaigns with 'manual' as the winner_criteria, the\
            \ winner must be chosen in the Mailchimp web application."
          enum:
          - opens
          - clicks
          - manual
          - total_revenue
        wait_time:
          title: Wait Time
          type: integer
          description: "The number of minutes to wait before choosing the winning\
            \ campaign. The value of wait_time must be greater than 0 and in whole\
            \ hours, specified in minutes."
        test_size:
          title: Test Size
          type: integer
          description: "The percentage of recipients to send the test combinations\
            \ to, must be a value between 10 and 100."
        subject_lines:
          title: Subject Lines
          type: array
          description: "The possible subject lines to test. If no subject lines are\
            \ provided, settings.subject_line will be used."
          items:
            type: string
        send_times:
          title: Send Times
          type: array
          description: "The possible send times to test. The times provided should\
            \ be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to\
            \ test, the test_size will be set to 100% and winner_criteria will be\
            \ ignored."
          items:
            type: string
            format: date-time
        from_names:
          title: From Names
          type: array
          description: "The possible from names. The number of from_names provided\
            \ must match the number of reply_to_addresses. If no from_names are provided,\
            \ settings.from_name will be used."
          items:
            type: string
        reply_to_addresses:
          title: Reply To Addresses
          type: array
          description: "The possible reply-to addresses. The number of reply_to_addresses\
            \ provided must match the number of from_names. If no reply_to_addresses\
            \ are provided, settings.reply_to will be used."
          items:
            type: string
        contents:
          title: Content Descriptions
          type: array
          description: "Descriptions of possible email contents. To set campaign contents,\
            \ make a PUT request to /campaigns/{campaign_id}/content with the field\
            \ 'variate_contents'."
          readOnly: true
          items:
            type: string
        combinations:
          title: Combinations
          type: array
          description: Combinations of possible variables used to build emails.
          readOnly: true
          items:
            $ref: '#/components/schemas/AB Test Options_1_combinations'
      description: The settings specific to A/B test campaigns.
      example:
        send_times:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        combinations:
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: id
          from_name: 3
          content_description: 4
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: id
          from_name: 3
          content_description: 4
        wait_time: 5
        subject_lines:
        - subject_lines
        - subject_lines
        contents:
        - contents
        - contents
        test_size: 2
        winning_combination_id: winning_combination_id
        reply_to_addresses:
        - reply_to_addresses
        - reply_to_addresses
        winner_criteria: opens
        winning_campaign_id: winning_campaign_id
        from_names:
        - from_names
        - from_names
    AB Test Options_1:
      title: A/B Test Options
      required:
      - winner_criteria
      type: object
      properties:
        winning_combination_id:
          title: Winning Combination ID
          type: string
          description: ID for the winning combination.
          readOnly: true
        winning_campaign_id:
          title: Winning Campaign ID
          type: string
          description: ID of the campaign that was sent to the remaining recipients
            based on the winning combination.
          readOnly: true
        winner_criteria:
          title: Winning Criteria
          type: string
          description: "The combination that performs the best. This may be determined\
            \ automatically by click rate, open rate, or total revenue -- or you may\
            \ choose manually based on the reporting data you find the most valuable.\
            \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
            \ For Multivariate Campaigns with 'manual' as the winner_criteria, the\
            \ winner must be chosen in the Mailchimp web application."
          enum:
          - opens
          - clicks
          - manual
          - total_revenue
        wait_time:
          title: Wait Time
          type: integer
          description: "The number of minutes to wait before choosing the winning\
            \ campaign. The value of wait_time must be greater than 0 and in whole\
            \ hours, specified in minutes."
        test_size:
          title: Test Size
          type: integer
          description: "The percentage of recipients to send the test combinations\
            \ to, must be a value between 10 and 100."
        subject_lines:
          title: Subject Lines
          type: array
          description: "The possible subject lines to test. If no subject lines are\
            \ provided, settings.subject_line will be used."
          items:
            type: string
        send_times:
          title: Send Times
          type: array
          description: "The possible send times to test. The times provided should\
            \ be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to\
            \ test, the test_size will be set to 100% and winner_criteria will be\
            \ ignored."
          items:
            type: string
            format: date-time
        from_names:
          title: From Names
          type: array
          description: "The possible from names. The number of from_names provided\
            \ must match the number of reply_to_addresses. If no from_names are provided,\
            \ settings.from_name will be used."
          items:
            type: string
        reply_to_addresses:
          title: Reply To Addresses
          type: array
          description: "The possible reply-to addresses. The number of reply_to_addresses\
            \ provided must match the number of from_names. If no reply_to_addresses\
            \ are provided, settings.reply_to will be used."
          items:
            type: string
        contents:
          title: Content Descriptions
          type: array
          description: "Descriptions of possible email contents. To set campaign contents,\
            \ make a PUT request to /campaigns/{campaign_id}/content with the field\
            \ 'variate_contents'."
          readOnly: true
          items:
            type: string
        combinations:
          title: Combinations
          type: array
          description: Combinations of possible variables used to build emails.
          readOnly: true
          items:
            $ref: '#/components/schemas/AB Test Options_1_combinations'
      description: The settings specific to A/B test campaigns.
      example:
        send_times:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        combinations:
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: id
          from_name: 3
          content_description: 4
        - subject_line: 7
          send_time: 9
          reply_to: 2
          recipients: 7
          id: id
          from_name: 3
          content_description: 4
        wait_time: 5
        subject_lines:
        - subject_lines
        - subject_lines
        contents:
        - contents
        - contents
        test_size: 2
        winning_combination_id: winning_combination_id
        reply_to_addresses:
        - reply_to_addresses
        - reply_to_addresses
        winner_criteria: opens
        winning_campaign_id: winning_campaign_id
        from_names:
        - from_names
        - from_names
    Ecommerce Promo Rule_1:
      title: E-commerce Promo Rule
      type: object
      properties:
        id:
          title: Promo Rule Foreign ID
          type: string
          description: "A unique identifier for the promo rule. If Ecommerce platform\
            \ does not support promo rule, use promo code id as promo rule id. Restricted\
            \ to UTF-8 characters with max length 50."
          readOnly: true
        title:
          title: Title
          type: string
          description: The title that will show up in promotion campaign. Restricted
            to UTF-8 characters with max length of 100 bytes.
          example: 50% off Total Order
        description:
          title: Description
          type: string
          description: The description of a promotion restricted to UTF-8 characters
            with max length 255.
          example: Save BIG during our summer sale!
        starts_at:
          title: Promo Start Time
          type: string
          description: The date and time when the promotion is in effect in ISO 8601
            format.
          format: date-time
        ends_at:
          title: End Time
          type: string
          description: The date and time when the promotion ends. Must be after starts_at
            and in ISO 8601 format.
          format: Promo date-time
        amount:
          title: Amount
          type: number
          description: "The amount of the promo code discount. If 'type' is 'fixed',\
            \ the amount is treated as a monetary value. If 'type' is 'percentage',\
            \ amount must be a decimal value between 0.0 and 1.0, inclusive."
          format: float
          example: 0.5
        type:
          title: Type
          type: string
          description: Type of discount. For free shipping set type to fixed.
          enum:
          - fixed
          - percentage
        target:
          title: Target
          type: string
          description: The target that the discount applies to.
          enum:
          - per_item
          - total
          - shipping
        enabled:
          title: Enabled
          type: boolean
          description: Whether the promo rule is currently enabled.
          example: true
        created_at_foreign:
          title: Foreign Create Time
          type: string
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about an Ecommerce Store's specific Promo Rule
      example:
        starts_at: 2000-01-23T04:56:07.000+00:00
        amount: 0.5
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        description: Save BIG during our summer sale!
        id: id
        ends_at: ends_at
        created_at_foreign: 2000-01-23T04:56:07.000+00:00
        title: 50% off Total Order
        type: fixed
        updated_at_foreign: 2000-01-23T04:56:07.000+00:00
        enabled: true
        target: per_item
    List Signup Forms:
      title: List Signup Forms
      type: object
      properties:
        signup_forms:
          title: List Signup Form
          type: array
          description: List signup form.
          items:
            $ref: '#/components/schemas/Signup Form_2'
        list_id:
          title: List ID
          type: string
          description: The list id.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: List Signup Forms.
      example:
        list_id: list_id
        _links:
        - null
        - null
        signup_forms:
        - list_id: 4ca5becb8d
          contents:
          - section: signup_message
            value: Signup message goes here
          - section: signup_message
            value: Signup message goes here
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          header:
            image_height: "200"
            image_link: gotothisimage.com
            image_align: center
            image_border_color: '#896d6d'
            image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
            image_border_style: solid
            image_alt: This is an image
            text: Header Text goes here
            image_width: "800"
            image_target: _blank
            image_border_width: "2"
          signup_form_url: signup_form_url
          styles:
          - options:
            - property: background-color
              value: '#111111'
            - property: background-color
              value: '#111111'
            selector: page_background
          - options:
            - property: background-color
              value: '#111111'
            - property: background-color
              value: '#111111'
            selector: page_background
        - list_id: 4ca5becb8d
          contents:
          - section: signup_message
            value: Signup message goes here
          - section: signup_message
            value: Signup message goes here
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          header:
            image_height: "200"
            image_link: gotothisimage.com
            image_align: center
            image_border_color: '#896d6d'
            image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
            image_border_style: solid
            image_alt: This is an image
            text: Header Text goes here
            image_width: "800"
            image_target: _blank
            image_border_width: "2"
          signup_form_url: signup_form_url
          styles:
          - options:
            - property: background-color
              value: '#111111'
            - property: background-color
              value: '#111111'
            selector: page_background
          - options:
            - property: background-color
              value: '#111111'
            - property: background-color
              value: '#111111'
            selector: page_background
        total_items: 0
    Landing Page Report:
      title: Landing Page Report
      type: object
      properties:
        id:
          title: Landing Page ID
          type: string
          description: A string that uniquely identifies this landing page.
          readOnly: true
          example: 00dfc2e1f0
        name:
          title: Name
          type: string
          description: The name of this landing page the user will see.
          readOnly: true
        title:
          title: Title
          type: string
          description: The name of the landing page the user's customers will see.
          readOnly: true
        url:
          title: Url
          type: string
          description: The landing page url.
          readOnly: true
        published_at:
          title: Published At
          type: string
          description: The time this landing page was published.
          format: date-time
          readOnly: true
        unpublished_at:
          title: Unpublished At
          type: string
          description: The time this landing page was unpublished.
          format: date-time
          readOnly: true
        status:
          title: Status
          type: string
          description: The status of the landing page.
          readOnly: true
        list_id:
          title: List Id
          type: string
          description: The list id connected to this landing page.
          readOnly: true
        visits:
          title: Visits
          type: integer
          description: The number of visits to this landing pages.
          readOnly: true
        unique_visits:
          title: Unique Visits
          type: integer
          description: The number of unique visits to this landing pages.
          readOnly: true
        subscribes:
          title: Subscribes
          type: integer
          description: The number of subscribes to this landing pages.
          readOnly: true
        clicks:
          title: Clicks
          type: integer
          description: The number of clicks to this landing pages.
          readOnly: true
        conversion_rate:
          title: Conversion rate
          type: number
          description: The percentage of people who visited your landing page and
            were added to your list.
          readOnly: true
        timeseries:
          $ref: '#/components/schemas/Landing Page Report_timeseries'
        ecommerce:
          $ref: '#/components/schemas/Landing Page Report_ecommerce'
        web_id:
          title: Landing Page Web ID
          type: integer
          description: The ID used in the Mailchimp web application.
          readOnly: true
          example: 33345484
        list_name:
          title: List Name
          type: string
          description: List Name
          readOnly: true
          example: Test List
        signup_tags:
          title: Signup Tags
          type: array
          description: A list of tags associated to the landing page.
          readOnly: true
          items:
            $ref: '#/components/schemas/Tag'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual landing page's settings and content.
      example:
        unique_visits: 6
        subscribes: 1
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        web_id: 33345484
        list_name: Test List
        title: title
        url: url
        signup_tags:
        - tag_name: tag_name
          tag_id: 3
        - tag_name: tag_name
          tag_id: 3
        visits: 0
        timeseries:
          daily_stats:
            unique_visits:
            - date: 2018-04-25
              val: 1
            - date: 2018-04-25
              val: 1
            visits:
            - date: 2018-04-25
              val: 11
            - date: 2018-04-25
              val: 11
            clicks:
            - date: 2018-04-25
              val: 13
            - date: 2018-04-25
              val: 13
          weekly_stats:
            unique_visits:
            - null
            - null
            visits:
            - date: 2018-04-25
              val: 49
            - date: 2018-04-25
              val: 49
            clicks:
            - date: 2018-04-25
              val: 23
            - date: 2018-04-25
              val: 23
        ecommerce:
          average_order_revenue: 9.301444243932576
          total_revenue: 2.3021358869347655
          total_orders: 7
          currency_code: currency_code
        name: name
        clicks: 5
        id: 00dfc2e1f0
        published_at: 2000-01-23T04:56:07.000+00:00
        conversion_rate: 5.637376656633329
        unpublished_at: 2000-01-23T04:56:07.000+00:00
        status: status
    List Locations:
      title: List Locations
      type: object
      properties:
        locations:
          title: Locations
          type: array
          description: "An array of objects, each representing a list's top subscriber\
            \ locations."
          items:
            $ref: '#/components/schemas/List Location'
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of List's locations.
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        locations:
        - cc: cc
          country: country
          total: 6
          percent: 0.8008281904610115
        - cc: cc
          country: country
          total: 6
          percent: 0.8008281904610115
        total_items: 1
    Address_1:
      title: Address
      type: object
      properties:
        address1:
          title: Address Field 1
          type: string
          description: The mailing address of the customer.
          example: 675 Ponce de Leon Ave NE
        address2:
          title: Address Field 2
          type: string
          description: An additional field for the customer's mailing address.
          example: Suite 5000
        city:
          title: 'City '
          type: string
          description: The city the customer is located in.
          example: Atlanta
        province:
          title: Province
          type: string
          description: The customer's state name or normalized province.
          example: Georgia
        province_code:
          title: Province Code
          type: string
          description: The two-letter code for the customer's province or state.
          example: GA
        postal_code:
          title: Postal Code
          type: string
          description: The customer's postal or zip code.
          example: "30308"
        country:
          title: Country Code
          type: string
          description: The customer's country.
          example: United States
        country_code:
          title: Country Code
          type: string
          description: The two-letter code for the customer's country.
          example: US
      description: The customer's address.
      example:
        country: United States
        country_code: US
        province: Georgia
        address2: Suite 5000
        city: Atlanta
        address1: 675 Ponce de Leon Ave NE
        province_code: GA
        postal_code: "30308"
    Click Detail Report_2:
      title: Click Detail Report
      type: object
      properties:
        id:
          title: URL ID
          type: string
          description: The unique id for the link.
          readOnly: true
        url:
          title: URL
          type: string
          description: The URL for the link in the campaign.
          readOnly: true
        total_clicks:
          title: Total Clicks
          type: integer
          description: The number of total clicks for a link.
          readOnly: true
        click_percentage:
          title: Click Percentage
          type: number
          description: The percentage of total clicks a link generated for a campaign.
          readOnly: true
        unique_clicks:
          title: Unique Clicks
          type: integer
          description: Number of unique clicks for a link.
          readOnly: true
        unique_click_percentage:
          title: Unique Click Percentage
          type: number
          description: The percentage of unique clicks a link generated for a campaign.
          readOnly: true
        last_click:
          title: Last Click
          type: string
          description: The date and time for the last recorded click for a link in
            ISO 8601 format.
          format: date-time
          readOnly: true
        ab_split:
          $ref: '#/components/schemas/AB Split'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A report of links clicked in a specific campaign.
      example:
        unique_click_percentage: 5.962133916683182
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        unique_clicks: 1
        ab_split:
          a:
            click_percentage_a: 2.3021358869347655
            unique_clicks_a: 7
            total_clicks_a: 5
            unique_click_percentage_a: 9.301444243932576
          b:
            click_percentage_b: 2.027123023002322
            unique_clicks_b: 4
            total_clicks_b: 3
            unique_click_percentage_b: 7.386281948385884
        click_percentage: 6.027456183070403
        total_clicks: 0
        last_click: 2000-01-23T04:56:07.000+00:00
        id: id
        url: url
        campaign_id: campaign_id
    Click Detail Report_1:
      title: Click Detail Report
      type: object
      properties:
        id:
          title: URL ID
          type: string
          description: The unique id for the link.
          readOnly: true
        url:
          title: URL
          type: string
          description: The URL for the link in the campaign.
          readOnly: true
        total_clicks:
          title: Total Clicks
          type: integer
          description: The number of total clicks for a link.
          readOnly: true
        click_percentage:
          title: Click Percentage
          type: number
          description: The percentage of total clicks a link generated for a campaign.
          readOnly: true
        unique_clicks:
          title: Unique Clicks
          type: integer
          description: Number of unique clicks for a link.
          readOnly: true
        unique_click_percentage:
          title: Unique Click Percentage
          type: number
          description: The percentage of unique clicks a link generated for a campaign.
          readOnly: true
        last_click:
          title: Last Click
          type: string
          description: The date and time for the last recorded click for a link in
            ISO 8601 format.
          format: date-time
          readOnly: true
        ab_split:
          $ref: '#/components/schemas/AB Split'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A report of links clicked in a specific campaign.
      example:
        unique_click_percentage: 5.962133916683182
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        unique_clicks: 1
        ab_split:
          a:
            click_percentage_a: 2.3021358869347655
            unique_clicks_a: 7
            total_clicks_a: 5
            unique_click_percentage_a: 9.301444243932576
          b:
            click_percentage_b: 2.027123023002322
            unique_clicks_b: 4
            total_clicks_b: 3
            unique_click_percentage_b: 7.386281948385884
        click_percentage: 6.027456183070403
        total_clicks: 0
        last_click: 2000-01-23T04:56:07.000+00:00
        id: id
        url: url
        campaign_id: campaign_id
    inline_response_200_11_audience_targeting_specs:
      type: object
      properties:
        gender:
          type: integer
        min_age:
          type: integer
        max_age:
          type: integer
        locations:
          $ref: '#/components/schemas/inline_response_200_11_audience_targeting_specs_locations'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_11_audience_targeting_specs_interests'
      example:
        max_age: 1
        gender: 0
        locations:
          regions:
          - regions
          - regions
          cities:
          - cities
          - cities
          countries:
          - countries
          - countries
          zips:
          - zips
          - zips
        min_age: 6
        interests:
        - name: name
        - name: name
    Ecommerce Product Images:
      title: Ecommerce Product Images
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        product_id:
          title: Product ID
          type: string
          description: The product id.
        images:
          title: Ecommerce Product Images
          type: array
          description: "An array of objects, each representing a product image resource."
          items:
            $ref: '#/components/schemas/Ecommerce Product Image_5'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of a product's images.
      example:
        store_id: store_id
        images:
        - _links:
          - null
          - null
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        - _links:
          - null
          - null
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        product_id: product_id
        total_items: 0
    File Manager Folders:
      title: File Manager Folders
      type: object
      properties:
        folders:
          title: File Manager Folders
          type: array
          description: A list of all folders in the File Manager.
          items:
            $ref: '#/components/schemas/Gallery Folder_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of all folders in the File Manager.
      example:
        folders:
        - file_count: 6
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          created_by: created_by
        - file_count: 6
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          created_by: created_by
        _links:
        - null
        - null
        total_items: 1
    List Stats:
      title: List Stats
      type: object
      properties:
        sub_rate:
          title: Average Subscription Rate
          type: number
          description: The average number of subscriptions per month for the list.
          readOnly: true
        unsub_rate:
          title: Average Unsubscription Rate
          type: number
          description: The average number of unsubscriptions per month for the list.
          readOnly: true
        open_rate:
          title: Open Rate
          type: number
          description: The average open rate (a percentage represented as a number
            between 0 and 100) per campaign for the list.
          readOnly: true
        click_rate:
          title: Click Rate
          type: number
          description: The average click rate (a percentage represented as a number
            between 0 and 100) per campaign for the list.
          readOnly: true
      description: The average campaign statistics for your list. This won't be present
        if we haven't calculated it yet for this list.
      example:
        sub_rate: 9.018348186070783
        click_rate: 6.965117697638846
        unsub_rate: 6.438423552598547
        open_rate: 3.5571952270680973
    Outreach_1:
      title: Outreach
      type: object
      properties:
        id:
          title: Outreach ID
          type: string
          description: A unique identifier for the outreach. Can be an email campaign
            ID.
          example: 839488a60b
        name:
          title: Outreach name
          type: string
          description: The name for the outreach.
          readOnly: true
          example: Freddie's Jokes
        type:
          title: Outreach type
          type: string
          description: The type of the outreach.
          readOnly: true
          example: regular
        published_time:
          title: Outreach published time
          type: string
          description: The date and time the Outreach was published in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2017-06-06T13:56:12Z
      description: "The outreach associated with this order. For example, an email\
        \ campaign or Facebook ad."
      example:
        published_time: 2017-06-06T13:56:12Z
        name: Freddie's Jokes
        id: 839488a60b
        type: regular
    Ecommerce Promo Rule_3:
      title: E-commerce Promo Rule
      type: object
      properties:
        id:
          title: Promo Rule Foreign ID
          type: string
          description: "A unique identifier for the promo rule. If Ecommerce platform\
            \ does not support promo rule, use promo code id as promo rule id. Restricted\
            \ to UTF-8 characters with max length 50."
          readOnly: true
        title:
          title: Title
          type: string
          description: The title that will show up in promotion campaign. Restricted
            to UTF-8 characters with max length of 100 bytes.
          example: 50% off Total Order
        description:
          title: Description
          type: string
          description: The description of a promotion restricted to UTF-8 characters
            with max length 255.
          example: Save BIG during our summer sale!
        starts_at:
          title: Promo Start Time
          type: string
          description: The date and time when the promotion is in effect in ISO 8601
            format.
          format: date-time
        ends_at:
          title: End Time
          type: string
          description: The date and time when the promotion ends. Must be after starts_at
            and in ISO 8601 format.
          format: Promo date-time
        amount:
          title: Amount
          type: number
          description: "The amount of the promo code discount. If 'type' is 'fixed',\
            \ the amount is treated as a monetary value. If 'type' is 'percentage',\
            \ amount must be a decimal value between 0.0 and 1.0, inclusive."
          format: float
          example: 0.5
        type:
          title: Type
          type: string
          description: Type of discount. For free shipping set type to fixed.
          enum:
          - fixed
          - percentage
        target:
          title: Target
          type: string
          description: The target that the discount applies to.
          enum:
          - per_item
          - total
          - shipping
        enabled:
          title: Enabled
          type: boolean
          description: Whether the promo rule is currently enabled.
          example: true
        created_at_foreign:
          title: Foreign Create Time
          type: string
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about an Ecommerce Store's specific Promo Rule
      example:
        starts_at: 2000-01-23T04:56:07.000+00:00
        amount: 0.5
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        description: Save BIG during our summer sale!
        id: id
        ends_at: ends_at
        created_at_foreign: 2000-01-23T04:56:07.000+00:00
        title: 50% off Total Order
        type: fixed
        updated_at_foreign: 2000-01-23T04:56:07.000+00:00
        enabled: true
        target: per_item
    Sources:
      title: Sources
      type: object
      properties:
        user:
          title: User
          type: boolean
          description: Whether the webhook is triggered by subscriber-initiated actions.
          example: true
        admin:
          title: Admin
          type: boolean
          description: Whether the webhook is triggered by admin-initiated actions
            in the web interface.
          example: true
        api:
          title: API
          type: boolean
          description: Whether the webhook is triggered by actions initiated via the
            API.
          example: true
      description: The possible sources of any events that can trigger the webhook
        and whether they are enabled.
      example: null
    Ecommerce Promo Rule_2:
      title: E-commerce Promo Rule
      type: object
      properties:
        title:
          title: Title
          type: string
          description: The title that will show up in promotion campaign. Restricted
            to UTF-8 characters with max length of 100 bytes.
          example: 50% off Total Order
        description:
          title: Description
          type: string
          description: The description of a promotion restricted to UTF-8 characters
            with max length 255.
          example: Save BIG during our summer sale!
        starts_at:
          title: Promo Start Time
          type: string
          description: The date and time when the promotion is in effect in ISO 8601
            format.
          format: date-time
        ends_at:
          title: End Time
          type: string
          description: The date and time when the promotion ends. Must be after starts_at
            and in ISO 8601 format.
          format: Promo date-time
        amount:
          title: Amount
          type: number
          description: "The amount of the promo code discount. If 'type' is 'fixed',\
            \ the amount is treated as a monetary value. If 'type' is 'percentage',\
            \ amount must be a decimal value between 0.0 and 1.0, inclusive."
          format: float
          example: 0.5
        type:
          title: Type
          type: string
          description: Type of discount. For free shipping set type to fixed.
          enum:
          - fixed
          - percentage
        target:
          title: Target
          type: string
          description: The target that the discount applies to.
          enum:
          - per_item
          - total
          - shipping
        enabled:
          title: Enabled
          type: boolean
          description: Whether the promo rule is currently enabled.
          example: true
        created_at_foreign:
          title: Foreign Create Time
          type: string
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
      description: Information about an Ecommerce Store's specific Promo Rule.
    Daily clicks and visits data_clicks:
      type: object
      properties:
        date:
          title: Date
          type: string
          readOnly: true
          example: 2018-04-25
        val:
          title: Value
          type: integer
          readOnly: true
          example: 13
      example:
        date: 2018-04-25
        val: 13
    Interest Groupings:
      title: Interest Groupings
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The ID for the list that this category belongs to.
          readOnly: true
        categories:
          title: Interest Categories
          type: array
          description: This array contains individual interest categories.
          items:
            $ref: '#/components/schemas/Interest Category_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about this list's interest categories.
      example:
        list_id: list_id
        _links:
        - null
        - null
        categories:
        - list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          display_order: 0
          id: id
          title: title
          type: checkboxes
        - list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          display_order: 0
          id: id
          title: title
          type: checkboxes
        total_items: 6
    inline_response_200_11_feedback:
      type: object
      properties:
        content:
          type: string
          description: Feedback regarding the content of this Ad.
        audience:
          type: string
          description: Feedback regarding the audience of this Ad.
        budget:
          type: string
          description: Feedback regarding the budget of this Ad.
        compliance:
          type: string
          description: Feedback regarding the compliance of this Ad.
      description: Check if this ad is connected to a facebook page
      example:
        audience: audience
        compliance: compliance
        content: content
        budget: budget
    Update information about a specific workflow email:
      title: Update information about a specific workflow email
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Campaign Settings'
        delay:
          $ref: '#/components/schemas/Automation Delay'
      description: Update information about an individual Automation workflow email.
    inline_response_200_11_content_attachments:
      type: object
      properties:
        name:
          type: string
        link_url:
          type: string
        description:
          type: string
        image_url:
          type: string
        call_to_action:
          type: string
      example:
        call_to_action: call_to_action
        image_url: image_url
        name: name
        link_url: link_url
        description: description
    Ecommerce Cart Line Item_2:
      title: E-commerce Cart Line Item
      required:
      - id
      - price
      - product_id
      - product_variant_id
      - quantity
      type: object
      properties:
        id:
          title: Cart Line Item Foreign ID
          type: string
          description: A unique identifier for the cart line item.
        product_id:
          title: Cart Line Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the cart
            line item.
        product_variant_id:
          title: Cart Line Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the cart line item.
        quantity:
          title: Quantity
          type: integer
          description: The quantity of a cart line item.
        price:
          title: Price
          type: number
          description: The price of a cart line item.
      description: Information about a specific cart line item.
    Ecommerce Cart Line Item_3:
      title: E-commerce Cart Line Item
      type: object
      properties:
        id:
          title: Cart Line Item Foreign ID
          type: string
          description: A unique identifier for the cart line item.
          readOnly: true
        product_id:
          title: Cart Line Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the cart
            line item.
        product_title:
          title: Cart Line Product Title
          type: string
          description: The name of the product for the cart line item.
          readOnly: true
        product_variant_id:
          title: Cart Line Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the cart line item.
        product_variant_title:
          title: Cart Line Product Variant Title
          type: string
          description: The name of the product variant for the cart line item.
          readOnly: true
        quantity:
          title: Quantity
          type: integer
          description: The quantity of a cart line item.
        price:
          title: Price
          type: number
          description: The price of a cart line item.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific cart line item.
      example:
        product_variant_title: product_variant_title
        quantity: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        price: 6.027456183070403
        product_id: product_id
        id: id
        product_variant_id: product_variant_id
        product_title: product_title
    Ecommerce Cart Line Item_1:
      title: E-commerce Cart Line Item
      type: object
      properties:
        product_id:
          title: Cart Line Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the cart
            line item.
        product_variant_id:
          title: Cart Line Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the cart line item.
        quantity:
          title: Quantity
          type: integer
          description: The quantity of a cart line item.
        price:
          title: Price
          type: number
          description: The price of a cart line item.
      description: Information about a specific cart line item.
      example: null
    Partial Matches:
      title: Partial Matches
      type: object
      properties:
        members:
          title: Members
          type: array
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List Members_4'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
      description: Partial matches of the provided search query.
      example:
        members:
        - null
        - null
        total_items: 6
    Open Locations_locations:
      type: object
      properties:
        country_code:
          title: Country Code
          type: string
          description: The ISO 3166 2 digit country code.
          readOnly: true
        region:
          title: Region
          type: string
          description: "An internal code for the region representing the more specific\
            \ location area such as city or state. When this is blank, it indicates\
            \ we know the country, but not the region."
          readOnly: true
        region_name:
          title: Region Name
          type: string
          description: "The name of the region, if we have one. For blank \"region\"\
            \ values, this will be \"Rest of Country\"."
          readOnly: true
        opens:
          title: Opens
          type: integer
          description: The number of unique campaign opens for a region.
          readOnly: true
      example:
        country_code: country_code
        opens: 0
        region_name: region_name
        region: region
    Ecommerce Cart Line Item_4:
      title: E-commerce Cart Line Item
      type: object
      properties:
        product_id:
          title: Cart Line Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the cart
            line item.
        product_variant_id:
          title: Cart Line Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the cart line item.
        quantity:
          title: Quantity
          type: integer
          description: The quantity of a cart line item.
        price:
          title: Price
          type: number
          description: The price of a cart line item.
      description: Information about a specific cart line item.
    Ecommerce Cart Line Item_5:
      title: E-commerce Cart Line Item
      type: object
      properties:
        id:
          title: Cart Line Item Foreign ID
          type: string
          description: A unique identifier for the cart line item.
          readOnly: true
        product_id:
          title: Cart Line Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the cart
            line item.
        product_title:
          title: Cart Line Product Title
          type: string
          description: The name of the product for the cart line item.
          readOnly: true
        product_variant_id:
          title: Cart Line Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the cart line item.
        product_variant_title:
          title: Cart Line Product Variant Title
          type: string
          description: The name of the product variant for the cart line item.
          readOnly: true
        quantity:
          title: Quantity
          type: integer
          description: The quantity of a cart line item.
        price:
          title: Price
          type: number
          description: The price of a cart line item.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific cart line item.
      example:
        product_variant_title: product_variant_title
        quantity: 1
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        price: 5.962133916683182
        product_id: product_id
        id: id
        product_variant_id: product_variant_id
        product_title: product_title
    Sent To:
      title: Sent To
      type: object
      properties:
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        status:
          title: Member Status
          type: string
          description: "The status of the member ('sent', 'hard' for hard bounce,\
            \ or 'soft' for soft bounce)."
        open_count:
          title: Open Count
          type: integer
          description: The number of times a campaign was opened by this member.
        last_open:
          title: Last Open
          type: string
          description: The date and time of the last open for this member in ISO 8601
            format.
          format: date-time
        absplit_group:
          title: A/B Split Group
          type: string
          description: "For A/B Split Campaigns, the group the member was apart of\
            \ ('a', 'b', or 'winner')."
        gmt_offset:
          title: GMT Offset
          type: integer
          description: "For campaigns sent with timewarp, the time zone group the\
            \ member is apart of."
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique list id.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A subscriber's status for a specific campaign.
      example:
        email_id: email_id
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        open_count: 0
        list_is_active: true
        last_open: 2000-01-23T04:56:07.000+00:00
        email_address: email_address
        absplit_group: absplit_group
        gmt_offset: 6
        vip: true
        campaign_id: campaign_id
        status: status
    actions_schedule_body:
      required:
      - schedule_time
      type: object
      properties:
        schedule_time:
          title: Schedule Time
          type: string
          description: "The UTC date and time to schedule the campaign for delivery\
            \ in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour\
            \ (:00, :15, :30, :45)."
          format: date-time
        timewarp:
          title: Timewarp
          type: boolean
          description: "Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/)\
            \ when sending. Campaigns scheduled with Timewarp are localized based\
            \ on the recipients' time zones. For example, a Timewarp campaign with\
            \ a `schedule_time` of 13:00 will be sent to each recipient at 1:00pm\
            \ in their local time. Cannot be set to `true` for campaigns using [Batch\
            \ Delivery](https://mailchimp.com/help/schedule-batch-delivery/)."
        batch_delivery:
          $ref: '#/components/schemas/Batch Delivery'
    Daily clicks and visits data_visits:
      type: object
      properties:
        date:
          title: Date
          type: string
          readOnly: true
          example: 2018-04-25
        val:
          title: Value
          type: integer
          readOnly: true
          example: 11
      example:
        date: 2018-04-25
        val: 11
    Conversation:
      title: Conversation
      type: object
      properties:
        id:
          title: ID
          type: string
          description: A string that uniquely identifies this conversation.
          readOnly: true
        message_count:
          title: Message Count
          type: integer
          description: The total number of messages in this conversation.
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique identifier of the campaign for this conversation.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique identifier of the list for this conversation.
          readOnly: true
        unread_messages:
          title: Unread Messages
          type: integer
          description: The number of unread messages in this conversation.
          readOnly: true
        from_label:
          title: From Label
          type: string
          description: A label representing the sender of this message.
          readOnly: true
        from_email:
          title: From Email
          type: string
          description: A label representing the email of the sender of this message.
          readOnly: true
        subject:
          title: Subject
          type: string
          description: The subject of the message.
          readOnly: true
        last_message:
          $ref: '#/components/schemas/Last Message'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Details about an individual conversation. Conversation tracking
        is a feature available to paid accounts that lets you view replies to your
        campaigns in your Mailchimp account.
      example:
        from_email: from_email
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        subject: subject
        unread_messages: 6
        last_message:
          from_email: from_email
          read: true
          subject: subject
          message: message
          from_label: from_label
          timestamp: 2000-01-23T04:56:07.000+00:00
        id: id
        message_count: 0
        from_label: from_label
        campaign_id: campaign_id
    Batch Delivery:
      title: Batch Delivery
      required:
      - batch_count
      - batch_delay
      type: object
      properties:
        batch_delay:
          title: Batch Delay
          type: integer
          description: "The delay, in minutes, between batches."
        batch_count:
          title: Batch Count
          type: integer
          description: The number of batches for the campaign send.
      description: "Choose whether the campaign should use [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/).\
        \ Cannot be set to `true` for campaigns using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
      example: null
    Subscriber Removed from Automation Workflow:
      title: Subscriber Removed from Automation Workflow
      type: object
      properties:
        id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        workflow_id:
          title: Workflow ID
          type: string
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: A string that uniquely identifies a list.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: The list member's email address.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of a subscriber removed from an Automation workflow.
      example:
        workflow_id: workflow_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
    Campaign Feedback_3:
      title: Campaign Feedback
      required:
      - message
      type: object
      properties:
        feedback_id:
          title: Feedback ID
          type: integer
          description: The individual id for the feedback item.
          readOnly: true
        parent_id:
          title: Parent ID
          type: integer
          description: "If a reply, the id of the parent feedback item."
          readOnly: true
        block_id:
          title: Block ID
          type: integer
          description: The block id for the editable block that the feedback addresses.
        message:
          title: Message
          type: string
          description: The content of the feedback.
        is_complete:
          title: Complete
          type: boolean
          description: The status of feedback.
        created_by:
          title: Created By
          type: string
          description: The login name of the user who created the feedback.
          readOnly: true
        created_at:
          title: Created At
          type: string
          description: The date and time the feedback item was created in ISO 8601
            format.
          format: date-time
          readOnly: true
        updated_at:
          title: Updated At
          type: string
          description: The date and time the feedback was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
        source:
          title: Source
          type: string
          description: The source of the feedback.
          readOnly: true
          enum:
          - api
          - email
          - sms
          - web
          - ios
          - android
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A specific feedback message from a specific campaign.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        parent_id: 6
        feedback_id: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        is_complete: true
        source: api
        message: message
        created_by: created_by
        block_id: 1
        campaign_id: campaign_id
    Campaign Feedback_2:
      title: Campaign Feedback
      type: object
      properties:
        block_id:
          title: Block ID
          type: integer
          description: The block id for the editable block that the feedback addresses.
        message:
          title: Message
          type: string
          description: The content of the feedback.
        is_complete:
          title: Complete
          type: boolean
          description: The status of feedback.
      description: A specific feedback message from a specific campaign.
    Ecommerce Cart_3:
      title: E-commerce Cart
      type: object
      properties:
        id:
          title: Cart Foreign ID
          type: string
          description: A unique identifier for the cart.
          readOnly: true
        customer:
          $ref: '#/components/schemas/Ecommerce Customer_6'
        campaign_id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies the campaign associated with
            a cart.
          example: 839488a60b
        checkout_url:
          title: Checkout URL
          type: string
          description: "The URL for the cart. This parameter is required for [Abandoned\
            \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
        currency_code:
          title: Currency Code
          type: string
          description: The three-letter ISO 4217 code for the currency that the cart
            uses.
        order_total:
          title: Order Total
          type: number
          description: The order total for the cart.
        tax_total:
          title: Tax Total
          type: number
          description: The total tax for the cart.
        lines:
          title: Cart Line Items
          type: array
          description: An array of the cart's line items.
          items:
            $ref: '#/components/schemas/Ecommerce Cart Line Item_5'
        created_at:
          title: Creation Time
          type: string
          description: The date and time the cart was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the cart was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific cart.
      example:
        checkout_url: checkout_url
        tax_total: 6.027456183070403
        updated_at: 2015-07-15T19:28:00Z
        _links:
        - null
        - null
        created_at: 2015-07-15T19:28:00Z
        order_total: 0.8008281904610115
        id: id
        lines:
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        campaign_id: 839488a60b
        currency_code: currency_code
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
    Ecommerce Cart_2:
      title: E-commerce Cart
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Ecommerce Customer_1'
        campaign_id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies the campaign associated with
            a cart.
          example: 839488a60b
        checkout_url:
          title: Checkout URL
          type: string
          description: "The URL for the cart. This parameter is required for [Abandoned\
            \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
        currency_code:
          title: Currency Code
          type: string
          description: The three-letter ISO 4217 code for the currency that the cart
            uses.
        order_total:
          title: Order Total
          type: number
          description: The order total for the cart.
        tax_total:
          title: Tax Total
          type: number
          description: The total tax for the cart.
        lines:
          title: Cart Line Items
          type: array
          description: An array of the cart's line items.
          items:
            $ref: '#/components/schemas/Ecommerce Cart Line Item_1'
      description: Information about a specific cart.
    Events:
      title: Events
      required:
      - name
      type: object
      properties:
        name:
          title: Event Name
          type: string
          description: "The name for this type of event ('purchased', 'visited', etc).\
            \ Must be 2-30 characters in length"
        properties:
          title: Properties
          type: object
          additionalProperties:
            type: string
          description: An optional list of properties
        is_syncing:
          title: Is Syncing
          type: boolean
          description: Events created with the is_syncing value set to `true` will
            not trigger automations.
        occurred_at:
          title: Occurred Time
          type: string
          description: The date and time the event occurred in ISO 8601 format.
          format: date-time
      description: A new event for a specific list member
    Ecommerce Cart_1:
      title: E-commerce Cart
      type: object
      properties:
        id:
          title: Cart Foreign ID
          type: string
          description: A unique identifier for the cart.
          readOnly: true
        customer:
          $ref: '#/components/schemas/Ecommerce Customer_6'
        campaign_id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies the campaign associated with
            a cart.
          example: 839488a60b
        checkout_url:
          title: Checkout URL
          type: string
          description: "The URL for the cart. This parameter is required for [Abandoned\
            \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
        currency_code:
          title: Currency Code
          type: string
          description: The three-letter ISO 4217 code for the currency that the cart
            uses.
        order_total:
          title: Order Total
          type: number
          description: The order total for the cart.
        tax_total:
          title: Tax Total
          type: number
          description: The total tax for the cart.
        lines:
          title: Cart Line Items
          type: array
          description: An array of the cart's line items.
          items:
            $ref: '#/components/schemas/Ecommerce Cart Line Item_5'
        created_at:
          title: Creation Time
          type: string
          description: The date and time the cart was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the cart was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific cart.
      example:
        checkout_url: checkout_url
        tax_total: 6.027456183070403
        updated_at: 2015-07-15T19:28:00Z
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        created_at: 2015-07-15T19:28:00Z
        order_total: 0.8008281904610115
        id: id
        lines:
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        campaign_id: 839488a60b
        currency_code: currency_code
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
    Subscriber Lists:
      title: Subscriber Lists
      required:
      - lists
      type: object
      properties:
        lists:
          title: Lists
          type: array
          description: "An array of objects, each representing a list."
          items:
            $ref: '#/components/schemas/Subscriber List_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        constraints:
          $ref: '#/components/schemas/Collection Authorization'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of subscriber lists for this account. Lists contain
        subscribers who have opted-in to receive correspondence from you or your organization.
      example:
        _links:
        - null
        - null
        lists:
        - notify_on_subscribe: "false"
          subscribe_url_long: subscribe_url_long
          marketing_permissions: false
          permission_reminder: permission_reminder
          use_archive_bar: false
          notify_on_unsubscribe: "false"
          visibility: pub
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          date_created: 2000-01-23T04:56:07.000+00:00
          campaign_defaults:
            from_email: from_email
            subject: subject
            language: language
            from_name: from_name
          web_id: 0
          modules:
          - modules
          - modules
          email_type_option: true
          beamer_address: beamer_address
          has_welcome: false
          stats:
            cleaned_count: 2
            unsubscribe_count_since_send: 9
            member_count_since_send: 7
            click_rate: 6.84685269835264
            cleaned_count_since_send: 3
            total_contacts: 5
            campaign_count: 2
            avg_unsub_rate: 1.2315135367772556
            last_sub_date: 2000-01-23T04:56:07.000+00:00
            unsubscribe_count: 5
            target_sub_rate: 1.0246457001441578
            campaign_last_sent: 2000-01-23T04:56:07.000+00:00
            avg_sub_rate: 7.386281948385884
            member_count: 1
            merge_field_count: 4
            open_rate: 1.4894159098541704
            last_unsub_date: 2000-01-23T04:56:07.000+00:00
          contact:
            zip: zip
            country: country
            address2: address2
            city: city
            phone: phone
            address1: address1
            company: company
            state: state
          name: name
          list_rating: 6
          double_optin: false
          id: id
          subscribe_url_short: subscribe_url_short
        - notify_on_subscribe: "false"
          subscribe_url_long: subscribe_url_long
          marketing_permissions: false
          permission_reminder: permission_reminder
          use_archive_bar: false
          notify_on_unsubscribe: "false"
          visibility: pub
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          date_created: 2000-01-23T04:56:07.000+00:00
          campaign_defaults:
            from_email: from_email
            subject: subject
            language: language
            from_name: from_name
          web_id: 0
          modules:
          - modules
          - modules
          email_type_option: true
          beamer_address: beamer_address
          has_welcome: false
          stats:
            cleaned_count: 2
            unsubscribe_count_since_send: 9
            member_count_since_send: 7
            click_rate: 6.84685269835264
            cleaned_count_since_send: 3
            total_contacts: 5
            campaign_count: 2
            avg_unsub_rate: 1.2315135367772556
            last_sub_date: 2000-01-23T04:56:07.000+00:00
            unsubscribe_count: 5
            target_sub_rate: 1.0246457001441578
            campaign_last_sent: 2000-01-23T04:56:07.000+00:00
            avg_sub_rate: 7.386281948385884
            member_count: 1
            merge_field_count: 4
            open_rate: 1.4894159098541704
            last_unsub_date: 2000-01-23T04:56:07.000+00:00
          contact:
            zip: zip
            country: country
            address2: address2
            city: city
            phone: phone
            address1: address1
            company: company
            state: state
          name: name
          list_rating: 6
          double_optin: false
          id: id
          subscribe_url_short: subscribe_url_short
        total_items: 7
        constraints:
          may_create: true
          current_total_instances: 4
          max_instances: 1
    Add Webhook_1:
      title: Add Webhook
      type: object
      properties:
        url:
          title: URL
          type: string
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
        events:
          $ref: '#/components/schemas/Events_1'
        sources:
          $ref: '#/components/schemas/Sources'
      description: Configure a webhook for the given list.
    Campaign Feedback_1:
      title: Campaign Feedback
      type: object
      properties:
        feedback_id:
          title: Feedback ID
          type: integer
          description: The individual id for the feedback item.
          readOnly: true
        parent_id:
          title: Parent ID
          type: integer
          description: "If a reply, the id of the parent feedback item."
          readOnly: true
        block_id:
          title: Block ID
          type: integer
          description: The block id for the editable block that the feedback addresses.
        message:
          title: Message
          type: string
          description: The content of the feedback.
        is_complete:
          title: Complete
          type: boolean
          description: The status of feedback.
        created_by:
          title: Created By
          type: string
          description: The login name of the user who created the feedback.
          readOnly: true
        created_at:
          title: Created At
          type: string
          description: The date and time the feedback item was created in ISO 8601
            format.
          format: date-time
          readOnly: true
        updated_at:
          title: Updated At
          type: string
          description: The date and time the feedback was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
        source:
          title: Source
          type: string
          description: The source of the feedback.
          readOnly: true
          enum:
          - api
          - email
          - sms
          - web
          - ios
          - android
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A specific feedback message from a specific campaign.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        parent_id: 6
        feedback_id: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        is_complete: true
        source: api
        message: message
        created_by: created_by
        block_id: 1
        campaign_id: campaign_id
    Connected Site_2:
      title: Connected Site
      type: object
      properties:
        site_foreign_id:
          title: Connected Site Foreign ID
          type: string
          description: The unique identifier for the connected site.
          readOnly: true
          example: "a180c384d7db88b if created in-app, MC001 if created via API"
        site_script:
          $ref: '#/components/schemas/Script'
      description: The Connected Site associated with the store.
      readOnly: true
      example:
        site_script:
          fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via\
          \ API"
    Connected Site_1:
      title: Connected Site
      type: object
      properties:
        foreign_id:
          title: Connected Site Foreign ID
          type: string
          description: The unique identifier for the site.
          readOnly: true
          example: "a180c384d7db88b if created in-app, MC001 if created via API"
        store_id:
          title: Store ID
          type: string
          description: The unique identifier for the ecommerce store that's associated
            with the connected site (if any). The store_id for a specific connected
            site can't change.
          readOnly: true
          example: MC001
        platform:
          title: Connected Site Platform
          type: string
          description: The platform of the connected site.
          readOnly: true
          example: "shopify, magento, bigcommerce, woocommerce"
        domain:
          title: Domain
          type: string
          description: The connected site domain.
          readOnly: true
          example: example.myshopify.com
        site_script:
          $ref: '#/components/schemas/Script_1'
        created_at:
          title: Creation Time
          type: string
          description: The date and time the connected site was created in ISO 8601
            format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the connected site was last updated in ISO
            8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:35:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific connected site.
      example:
        foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
        store_id: MC001
        updated_at: 2015-07-15T19:35:00Z
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        domain: example.myshopify.com
        site_script:
          fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        created_at: 2015-07-15T19:28:00Z
        platform: "shopify, magento, bigcommerce, woocommerce"
    Connected Site_3:
      title: Connected Site
      type: object
      properties:
        foreign_id:
          title: Connected Site Foreign ID
          type: string
          description: The unique identifier for the site.
          readOnly: true
          example: "a180c384d7db88b if created in-app, MC001 if created via API"
        store_id:
          title: Store ID
          type: string
          description: The unique identifier for the ecommerce store that's associated
            with the connected site (if any). The store_id for a specific connected
            site can't change.
          readOnly: true
          example: MC001
        platform:
          title: Connected Site Platform
          type: string
          description: The platform of the connected site.
          readOnly: true
          example: "shopify, magento, bigcommerce, woocommerce"
        domain:
          title: Domain
          type: string
          description: The connected site domain.
          readOnly: true
          example: example.myshopify.com
        site_script:
          $ref: '#/components/schemas/Script_1'
        created_at:
          title: Creation Time
          type: string
          description: The date and time the connected site was created in ISO 8601
            format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the connected site was last updated in ISO
            8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:35:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific connected site.
      example:
        foreign_id: "a180c384d7db88b if created in-app, MC001 if created via API"
        store_id: MC001
        updated_at: 2015-07-15T19:35:00Z
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        domain: example.myshopify.com
        site_script:
          fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
          url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        created_at: 2015-07-15T19:28:00Z
        platform: "shopify, magento, bigcommerce, woocommerce"
    Survey Respondents:
      title: Survey Respondents
      type: object
      properties:
        response_id:
          title: Response ID
          type: string
          description: The ID for the survey response.
          readOnly: true
        submitted_at:
          title: Submitted At
          type: string
          description: The date and time when the survey response was submitted in
            ISO 8601 format.
          format: date-time
          readOnly: true
        contact:
          $ref: '#/components/schemas/Contact'
        is_new_contact:
          title: Is New Contact
          type: boolean
          description: If this contact was added to the Mailchimp audience via this
            survey.
      description: Survey respondent details.
      example:
        submitted_at: 2000-01-23T04:56:07.000+00:00
        response_id: response_id
        contact:
          email_id: email_id
          full_name: full_name
          avatar_url: avatar_url
          contact_id: contact_id
          email: email
          status: Subscribed
          consents_to_one_to_one_messaging: true
        is_new_contact: true
    Email Client:
      title: Email Client
      type: object
      properties:
        client:
          title: Client
          type: string
          description: The name of the email client.
          readOnly: true
        members:
          title: Members
          type: integer
          description: The number of subscribed members who used this email client.
          readOnly: true
      description: The email client.
      example:
        members: 0
        client: client
    Campaign B:
      title: Campaign B
      type: object
      properties:
        bounces:
          title: Bounces
          type: integer
          description: Bounces for Campaign B.
        abuse_reports:
          title: Abuse Reports
          type: integer
          description: Abuse reports for Campaign B.
        unsubs:
          title: Unsubscribes
          type: integer
          description: Unsubscribes for Campaign B.
        recipient_clicks:
          title: Recipient Clicks
          type: integer
          description: Recipients clicks for Campaign B.
        forwards:
          title: Forwards
          type: integer
          description: Forwards for Campaign B.
        forwards_opens:
          title: Forward Opens
          type: integer
          description: Opens for forwards from Campaign B.
        opens:
          title: Opens
          type: integer
          description: Opens for Campaign B.
        last_open:
          title: Last Open
          type: string
          description: The last open for Campaign B.
        unique_opens:
          title: Unique Opens
          type: integer
          description: Unique opens for Campaign B.
      description: Stats for Campaign B.
      example:
        forwards: 0
        unsubs: 7
        opens: 8
        bounces: 7
        recipient_clicks: 6
        forwards_opens: 4
        last_open: last_open
        abuse_reports: 0
        unique_opens: 7
    Unsubscribes_2:
      title: Unsubscribes
      type: object
      properties:
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        timestamp:
          title: Timestamp
          type: string
          description: The date and time the member opted-out in ISO 8601 format.
          format: date-time
          readOnly: true
        reason:
          title: Unsubscribe Reason
          type: string
          description: "If available, the reason listed by the member for unsubscribing."
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A member who unsubscribed from a specific campaign.
      example:
        email_id: email_id
        reason: reason
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        vip: true
        list_is_active: true
        campaign_id: campaign_id
        timestamp: 2000-01-23T04:56:07.000+00:00
    Unsubscribes_1:
      title: Unsubscribes
      type: object
      properties:
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        timestamp:
          title: Timestamp
          type: string
          description: The date and time the member opted-out in ISO 8601 format.
          format: date-time
          readOnly: true
        reason:
          title: Unsubscribe Reason
          type: string
          description: "If available, the reason listed by the member for unsubscribing."
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A member who unsubscribed from a specific campaign.
      example:
        email_id: email_id
        reason: reason
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        vip: true
        list_is_active: true
        campaign_id: campaign_id
        timestamp: 2000-01-23T04:56:07.000+00:00
    Campaign A:
      title: Campaign A
      type: object
      properties:
        bounces:
          title: Bounces
          type: integer
          description: Bounces for Campaign A.
        abuse_reports:
          title: Abuse Reports
          type: integer
          description: Abuse reports for Campaign A.
        unsubs:
          title: Unsubscribes
          type: integer
          description: Unsubscribes for Campaign A.
        recipient_clicks:
          title: Recipient Clicks
          type: integer
          description: Recipient Clicks for Campaign A.
        forwards:
          title: Forwards
          type: integer
          description: Forwards for Campaign A.
        forwards_opens:
          title: Forward Opens
          type: integer
          description: Opens from forwards for Campaign A.
        opens:
          title: Opens
          type: integer
          description: Opens for Campaign A.
        last_open:
          title: Last Open
          type: string
          description: The last open for Campaign A.
        unique_opens:
          title: Unique Opens
          type: integer
          description: Unique opens for Campaign A.
      description: Stats for Campaign A.
      example:
        forwards: 5
        unsubs: 6
        opens: 3
        bounces: 1
        recipient_clicks: 6
        forwards_opens: 6
        last_open: last_open
        abuse_reports: 2
        unique_opens: 3
    Campaign Defaults:
      title: Campaign Defaults
      required:
      - from_email
      - from_name
      - language
      - subject
      type: object
      properties:
        from_name:
          title: Sender's Name
          type: string
          description: The default from name for campaigns sent to this list.
        from_email:
          title: Sender's Email Address
          type: string
          description: The default from email for campaigns sent to this list.
        subject:
          title: Subject
          type: string
          description: The default subject line for campaigns sent to this list.
        language:
          title: Language
          type: string
          description: The default language for this lists's forms.
      description: "[Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/)\
        \ created for this list."
      example: null
    inline_response_200_11_report_summary_ecommerce:
      type: object
      properties:
        total_revenue:
          type: number
        currency_code:
          type: string
        average_order_revenue:
          type: number
      example:
        average_order_revenue: 6.84685269835264
        total_revenue: 1.4894159098541704
        currency_code: currency_code
    Campaign Folders:
      title: Campaign Folders
      type: object
      properties:
        folders:
          title: Campaign Folders
          type: array
          description: An array of objects representing campaign folders.
          items:
            $ref: '#/components/schemas/Campaign Folder_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of campaign folders
      example:
        folders:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          count: 0
          id: id
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          count: 0
          id: id
        _links:
        - null
        - null
        total_items: 6
    Subscriber List:
      title: Subscriber List
      required:
      - campaign_defaults
      - contact
      - email_type_option
      - name
      - permission_reminder
      type: object
      properties:
        name:
          title: List Name
          type: string
          description: The name of the list.
        contact:
          $ref: '#/components/schemas/List Contact'
        permission_reminder:
          title: Permission Reminder
          type: string
          description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
            \ for the list."
        use_archive_bar:
          title: Use Archive Bar
          type: boolean
          description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ in archives by default."
          default: false
        campaign_defaults:
          $ref: '#/components/schemas/Campaign Defaults'
        notify_on_subscribe:
          title: Notify on Subscribe
          type: string
          description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          default: "false"
        notify_on_unsubscribe:
          title: Notify on Unsubscribe
          type: string
          description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          default: "false"
        email_type_option:
          title: Email Type Option
          type: boolean
          description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
            \ When set to `true`, subscribers can choose whether they want to receive\
            \ HTML or plain-text emails. When set to `false`, subscribers will receive\
            \ HTML emails, with a plain-text alternative backup."
        double_optin:
          title: Double Opt In
          type: boolean
          description: Whether or not to require the subscriber to confirm subscription
            via email.
          default: false
        marketing_permissions:
          title: Marketing Permissions
          type: boolean
          description: Whether or not the list has marketing permissions (eg. GDPR)
            enabled.
          default: false
      description: Information about a specific list.
    Tag search results:
      title: Tag search results
      type: object
      properties:
        tags:
          title: Tags
          type: array
          description: A list of matching tags.
          readOnly: true
          items:
            $ref: '#/components/schemas/Tag search results_tags'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
      description: A list of tags matching the input query.
      example:
        total_items: 6
        tags:
        - name: name
          id: 0
        - name: name
          id: 0
    Automations:
      title: Automations
      type: object
      properties:
        abandoned_cart:
          $ref: '#/components/schemas/Abandoned Cart Automation'
        abandoned_browse:
          $ref: '#/components/schemas/Abandoned Browse Automation'
      description: Details for the automations attached to this store.
      readOnly: true
      example:
        abandoned_browse:
          is_supported: false
          id: 355a72bfc3
          status: sending
        abandoned_cart:
          is_supported: false
          id: 355a72bfc3
          status: sending
    Campaign Tracking Options_1:
      title: Campaign Tracking Options
      type: object
      properties:
        opens:
          title: Opens
          type: boolean
          description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
            \ Defaults to `true`."
        html_clicks:
          title: HTML Click Tracking
          type: boolean
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the HTML version of the campaign. Defaults to `true`."
        text_clicks:
          title: Plain-Text Click Tracking
          type: boolean
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the plain-text version of the campaign. Defaults to `true`."
        goal_tracking:
          title: Mailchimp Goal Tracking
          type: boolean
          description: Deprecated
        ecomm360:
          title: E-commerce Tracking
          type: boolean
          description: Whether to enable e-commerce tracking.
        google_analytics:
          title: Google Analytics Tracking
          type: string
          description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
            \ tracking (max of 50 bytes)."
        clicktale:
          title: ClickTale Analytics Tracking
          type: string
          description: "The custom slug for [Click Tale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
            \ tracking (max of 50 bytes)."
        salesforce:
          $ref: '#/components/schemas/Salesforce CRM Tracking_1'
        capsule:
          $ref: '#/components/schemas/Capsule CRM Tracking_2'
      description: The tracking options for a campaign.
      example:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: clicktale
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: google_analytics
        html_clicks: true
    Add List Members_3:
      title: Add List Members
      type: object
      properties:
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        location:
          $ref: '#/components/schemas/Location'
        marketing_permissions:
          title: Marketing Permissions
          type: array
          description: The marketing permissions for the subscriber.
          items:
            $ref: '#/components/schemas/Marketing Permission'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
    Add List Members_1:
      title: Add List Members
      required:
      - email_address
      - status
      type: object
      properties:
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        location:
          $ref: '#/components/schemas/Location'
        marketing_permissions:
          title: Marketing Permissions
          type: array
          description: The marketing permissions for the subscriber.
          items:
            $ref: '#/components/schemas/Marketing Permission'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscribe confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
        tags:
          title: Tags on a member
          type: array
          description: The tags that are associated with a member.
          items:
            type: string
            description: The name of the tag that will be associated with this member.
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
    Add List Members_2:
      title: Add List Members
      required:
      - email_address
      - status_if_new
      type: object
      properties:
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber. This value is required only
            if the email address is not already present on the list.
        status_if_new:
          title: New Member Status
          type: string
          description: Subscriber's status. This value is required only if the email
            address is not already present on the list.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        location:
          $ref: '#/components/schemas/Location'
        marketing_permissions:
          title: Marketing Permissions
          type: array
          description: The marketing permissions for the subscriber.
          items:
            $ref: '#/components/schemas/Marketing Permission'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
    Ecommerce Product Variant_5:
      title: E-commerce Product Variant
      type: object
      properties:
        title:
          title: Title
          type: string
          description: The title of a product variant.
          example: Cat Hat
        url:
          title: URL
          type: string
          description: The URL for a product variant.
        sku:
          title: SKU
          type: string
          description: The stock keeping unit (SKU) of a product variant.
        price:
          title: Price
          type: number
          description: The price of a product variant.
        inventory_quantity:
          title: Inventory Quantity
          type: integer
          description: The inventory quantity of a product variant.
        image_url:
          title: Image URL
          type: string
          description: The image URL for a product variant.
        backorders:
          title: Backorders
          type: string
          description: The backorders of a product variant.
        visibility:
          title: Visibility
          type: string
          description: The visibility of a product variant.
      description: Information about a specific product variant.
    Ecommerce Product Variant_6:
      title: E-commerce Product Variant
      type: object
      properties:
        id:
          title: Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant.
          readOnly: true
        title:
          title: Title
          type: string
          description: The title of a product variant.
          example: Cat Hat
        url:
          title: URL
          type: string
          description: The URL for a product variant.
        sku:
          title: SKU
          type: string
          description: The stock keeping unit (SKU) of a product variant.
        price:
          title: Price
          type: number
          description: The price of a product variant.
        inventory_quantity:
          title: Inventory Quantity
          type: integer
          description: The inventory quantity of a product variant.
        image_url:
          title: Image URL
          type: string
          description: The image URL for a product variant.
        backorders:
          title: Backorders
          type: string
          description: The backorders of a product variant.
        visibility:
          title: Visibility
          type: string
          description: The visibility of a product variant.
        created_at:
          title: Creation Time
          type: string
          description: The date and time the product was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the product was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific product variant.
      example:
        inventory_quantity: 6
        visibility: visibility
        updated_at: 2015-07-15T19:28:00Z
        backorders: backorders
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        price: 0.8008281904610115
        image_url: image_url
        created_at: 2015-07-15T19:28:00Z
        id: id
        title: Cat Hat
        sku: sku
        url: url
    Products:
      title: Products
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        products:
          title: Products
          type: array
          description: "An array of objects, each representing a store product."
          items:
            $ref: '#/components/schemas/Ecommerce Product_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of a store's products.
      example:
        store_id: store_id
        _links:
        - null
        - null
        total_items: 1
        products:
        - images:
          - _links:
            - null
            - null
            variant_ids:
            - variant_ids
            - variant_ids
            id: id
            url: url
          - _links:
            - null
            - null
            variant_ids:
            - variant_ids
            - variant_ids
            id: id
            url: url
          _links:
          - null
          - null
          image_url: image_url
          description: This is a cat hat.
          handle: cat-hat
          variants:
          - inventory_quantity: 6
            visibility: visibility
            updated_at: 2015-07-15T19:28:00Z
            backorders: backorders
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 0.8008281904610115
            image_url: image_url
            created_at: 2015-07-15T19:28:00Z
            id: id
            title: Cat Hat
            sku: sku
            url: url
          - inventory_quantity: 6
            visibility: visibility
            updated_at: 2015-07-15T19:28:00Z
            backorders: backorders
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 0.8008281904610115
            image_url: image_url
            created_at: 2015-07-15T19:28:00Z
            id: id
            title: Cat Hat
            sku: sku
            url: url
          title: Cat Hat
          type: Accessories
          currency_code: currency_code
          url: url
          vendor: vendor
          published_at_foreign: 2015-07-15T19:28:00Z
          id: id
        - images:
          - _links:
            - null
            - null
            variant_ids:
            - variant_ids
            - variant_ids
            id: id
            url: url
          - _links:
            - null
            - null
            variant_ids:
            - variant_ids
            - variant_ids
            id: id
            url: url
          _links:
          - null
          - null
          image_url: image_url
          description: This is a cat hat.
          handle: cat-hat
          variants:
          - inventory_quantity: 6
            visibility: visibility
            updated_at: 2015-07-15T19:28:00Z
            backorders: backorders
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 0.8008281904610115
            image_url: image_url
            created_at: 2015-07-15T19:28:00Z
            id: id
            title: Cat Hat
            sku: sku
            url: url
          - inventory_quantity: 6
            visibility: visibility
            updated_at: 2015-07-15T19:28:00Z
            backorders: backorders
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 0.8008281904610115
            image_url: image_url
            created_at: 2015-07-15T19:28:00Z
            id: id
            title: Cat Hat
            sku: sku
            url: url
          title: Cat Hat
          type: Accessories
          currency_code: currency_code
          url: url
          vendor: vendor
          published_at_foreign: 2015-07-15T19:28:00Z
          id: id
    Ecommerce Product Variant_3:
      title: E-commerce Product Variant
      type: object
      properties:
        id:
          title: Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant.
          readOnly: true
        title:
          title: Title
          type: string
          description: The title of a product variant.
          example: Cat Hat
        url:
          title: URL
          type: string
          description: The URL for a product variant.
        sku:
          title: SKU
          type: string
          description: The stock keeping unit (SKU) of a product variant.
        price:
          title: Price
          type: number
          description: The price of a product variant.
        inventory_quantity:
          title: Inventory Quantity
          type: integer
          description: The inventory quantity of a product variant.
        image_url:
          title: Image URL
          type: string
          description: The image URL for a product variant.
        backorders:
          title: Backorders
          type: string
          description: The backorders of a product variant.
        visibility:
          title: Visibility
          type: string
          description: The visibility of a product variant.
        created_at:
          title: Creation Time
          type: string
          description: The date and time the product was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the product was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific product variant.
      example:
        inventory_quantity: 6
        visibility: visibility
        updated_at: 2015-07-15T19:28:00Z
        backorders: backorders
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        price: 0.8008281904610115
        image_url: image_url
        created_at: 2015-07-15T19:28:00Z
        id: id
        title: Cat Hat
        sku: sku
        url: url
    Ecommerce Product Image:
      title: E-commerce Product Image
      required:
      - id
      - url
      type: object
      properties:
        id:
          title: Image Foreign ID
          type: string
          description: A unique identifier for the product image.
        url:
          title: URL
          type: string
          description: The URL for a product image.
        variant_ids:
          title: Product Variants
          type: array
          description: The list of product variants using the image.
          items:
            type: string
      description: Information about a specific product image.
      example: null
    Ecommerce Product Variant_4:
      title: E-commerce Product Variant
      required:
      - id
      - title
      type: object
      properties:
        id:
          title: Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant.
        title:
          title: Title
          type: string
          description: The title of a product variant.
          example: Cat Hat
        url:
          title: URL
          type: string
          description: The URL for a product variant.
        sku:
          title: SKU
          type: string
          description: The stock keeping unit (SKU) of a product variant.
        price:
          title: Price
          type: number
          description: The price of a product variant.
        inventory_quantity:
          title: Inventory Quantity
          type: integer
          description: The inventory quantity of a product variant.
        image_url:
          title: Image URL
          type: string
          description: The image URL for a product variant.
        backorders:
          title: Backorders
          type: string
          description: The backorders of a product variant.
        visibility:
          title: Visibility
          type: string
          description: The visibility of a product variant.
      description: Information about a specific product variant.
    Landing Page Report_ecommerce:
      type: object
      properties:
        total_revenue:
          title: Total Revenue
          type: number
          description: The total revenue of this landing page.
          readOnly: true
        currency_code:
          title: Currency code
          type: string
          description: The user's currency code.
          readOnly: true
        total_orders:
          title: Total Orders
          type: integer
          description: The total number of orders associated with this landing page.
          readOnly: true
        average_order_revenue:
          title: Average Order Revenue
          type: number
          description: The average order revenue of this landing page.
          readOnly: true
      example:
        average_order_revenue: 9.301444243932576
        total_revenue: 2.3021358869347655
        total_orders: 7
        currency_code: currency_code
    Promo Rules:
      title: Promo Rules
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        promo_rules:
          title: Promo Rules
          type: array
          description: "An array of objects, each representing promo rules defined\
            \ for a store."
          items:
            $ref: '#/components/schemas/Ecommerce Promo Rule_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of the store's promo rules.
      example:
        store_id: store_id
        _links:
        - null
        - null
        promo_rules:
        - starts_at: 2000-01-23T04:56:07.000+00:00
          amount: 0.5
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          description: Save BIG during our summer sale!
          id: id
          ends_at: ends_at
          created_at_foreign: 2000-01-23T04:56:07.000+00:00
          title: 50% off Total Order
          type: fixed
          updated_at_foreign: 2000-01-23T04:56:07.000+00:00
          enabled: true
          target: per_item
        - starts_at: 2000-01-23T04:56:07.000+00:00
          amount: 0.5
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          description: Save BIG during our summer sale!
          id: id
          ends_at: ends_at
          created_at_foreign: 2000-01-23T04:56:07.000+00:00
          title: 50% off Total Order
          type: fixed
          updated_at_foreign: 2000-01-23T04:56:07.000+00:00
          enabled: true
          target: per_item
        total_items: 0
    Survey Response:
      title: Survey Response
      type: object
      properties:
        response_id:
          title: Response ID
          type: string
          description: The ID for the survey response.
          readOnly: true
        submitted_at:
          title: Submitted At
          type: string
          description: The date and time when the survey response was submitted in
            ISO 8601 format.
          format: date-time
          readOnly: true
        contact:
          $ref: '#/components/schemas/Contact'
        is_new_contact:
          title: Is New Contact
          type: boolean
          description: If this contact was added to the Mailchimp audience via this
            survey.
        results:
          title: Results
          type: array
          description: The survey questions and the answers to those questions.
          items:
            $ref: '#/components/schemas/Response'
      description: A single survey response.
      example:
        submitted_at: 2000-01-23T04:56:07.000+00:00
        response_id: response_id
        contact:
          email_id: email_id
          full_name: full_name
          avatar_url: avatar_url
          contact_id: contact_id
          email: email
          status: Subscribed
          consents_to_one_to_one_messaging: true
        is_new_contact: true
        results:
        - answer: answer
          question_type: pickOne
          query: query
          question_id: question_id
        - answer: answer
          question_type: pickOne
          query: query
          question_id: question_id
    Ecommerce Product Variant_1:
      title: E-commerce Product Variant
      type: object
      properties:
        title:
          title: Title
          type: string
          description: The title of a product variant.
          example: Cat Hat
        url:
          title: URL
          type: string
          description: The URL for a product variant.
        sku:
          title: SKU
          type: string
          description: The stock keeping unit (SKU) of a product variant.
        price:
          title: Price
          type: number
          description: The price of a product variant.
        inventory_quantity:
          title: Inventory Quantity
          type: integer
          description: The inventory quantity of a product variant.
        image_url:
          title: Image URL
          type: string
          description: The image URL for a product variant.
        backorders:
          title: Backorders
          type: string
          description: The backorders of a product variant.
        visibility:
          title: Visibility
          type: string
          description: The visibility of a product variant.
      description: Information about a specific product variant.
      example: null
    Verify a domain for sending.:
      title: Verify a domain for sending.
      required:
      - code
      type: object
      properties:
        code:
          title: Verification Code
          type: string
          description: The code that was sent to the email address provided when adding
            a new domain to verify.
      description: Submit a response to the verification challenge and verify a domain
        for sending.
    Ecommerce Product Variant_2:
      title: E-commerce Product Variant
      required:
      - id
      - title
      type: object
      properties:
        id:
          title: Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant.
        title:
          title: Title
          type: string
          description: The title of a product variant.
          example: Cat Hat
        url:
          title: URL
          type: string
          description: The URL for a product variant.
        sku:
          title: SKU
          type: string
          description: The stock keeping unit (SKU) of a product variant.
        price:
          title: Price
          type: number
          description: The price of a product variant.
        inventory_quantity:
          title: Inventory Quantity
          type: integer
          description: The inventory quantity of a product variant.
        image_url:
          title: Image URL
          type: string
          description: The image URL for a product variant.
        backorders:
          title: Backorders
          type: string
          description: The backorders of a product variant.
        visibility:
          title: Visibility
          type: string
          description: The visibility of a product variant.
      description: Information about a specific product variant.
    Conditions:
      title: Conditions
      type: object
      properties:
        match:
          title: Match
          type: string
          description: Match type.
          enum:
          - any
          - all
        conditions:
          title: Segment Type
          type: array
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
      description: "The [conditions of the segment](https://mailchimp.com/help/save-and-manage-segments/).\
        \ Static and fuzzy segments don't have conditions."
      example: null
    Landing Page Report_1:
      title: Landing Page Report
      type: object
      properties:
        id:
          title: Landing Page ID
          type: string
          description: A string that uniquely identifies this landing page.
          readOnly: true
          example: 00dfc2e1f0
        name:
          title: Name
          type: string
          description: The name of this landing page the user will see.
          readOnly: true
        title:
          title: Title
          type: string
          description: The name of the landing page the user's customers will see.
          readOnly: true
        url:
          title: Url
          type: string
          description: The landing page url.
          readOnly: true
        published_at:
          title: Published At
          type: string
          description: The time this landing page was published.
          format: date-time
          readOnly: true
        unpublished_at:
          title: Unpublished At
          type: string
          description: The time this landing page was unpublished.
          format: date-time
          readOnly: true
        status:
          title: Status
          type: string
          description: The status of the landing page.
          readOnly: true
        list_id:
          title: List Id
          type: string
          description: The list id connected to this landing page.
          readOnly: true
        visits:
          title: Visits
          type: integer
          description: The number of visits to this landing pages.
          readOnly: true
        unique_visits:
          title: Unique Visits
          type: integer
          description: The number of unique visits to this landing pages.
          readOnly: true
        subscribes:
          title: Subscribes
          type: integer
          description: The number of subscribes to this landing pages.
          readOnly: true
        clicks:
          title: Clicks
          type: integer
          description: The number of clicks to this landing pages.
          readOnly: true
        conversion_rate:
          title: Conversion rate
          type: number
          description: The percentage of people who visited your landing page and
            were added to your list.
          readOnly: true
        timeseries:
          $ref: '#/components/schemas/Landing Page Report_timeseries'
        ecommerce:
          $ref: '#/components/schemas/Landing Page Report_ecommerce'
        web_id:
          title: Landing Page Web ID
          type: integer
          description: The ID used in the Mailchimp web application.
          readOnly: true
          example: 33345484
        list_name:
          title: List Name
          type: string
          description: List Name
          readOnly: true
          example: Test List
        signup_tags:
          title: Signup Tags
          type: array
          description: A list of tags associated to the landing page.
          readOnly: true
          items:
            $ref: '#/components/schemas/Tag'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual landing page's settings and content.
      example:
        unique_visits: 6
        subscribes: 1
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        web_id: 33345484
        list_name: Test List
        title: title
        url: url
        signup_tags:
        - tag_name: tag_name
          tag_id: 3
        - tag_name: tag_name
          tag_id: 3
        visits: 0
        timeseries:
          daily_stats:
            unique_visits:
            - date: 2018-04-25
              val: 1
            - date: 2018-04-25
              val: 1
            visits:
            - date: 2018-04-25
              val: 11
            - date: 2018-04-25
              val: 11
            clicks:
            - date: 2018-04-25
              val: 13
            - date: 2018-04-25
              val: 13
          weekly_stats:
            unique_visits:
            - null
            - null
            visits:
            - date: 2018-04-25
              val: 49
            - date: 2018-04-25
              val: 49
            clicks:
            - date: 2018-04-25
              val: 23
            - date: 2018-04-25
              val: 23
        ecommerce:
          average_order_revenue: 9.301444243932576
          total_revenue: 2.3021358869347655
          total_orders: 7
          currency_code: currency_code
        name: name
        clicks: 5
        id: 00dfc2e1f0
        published_at: 2000-01-23T04:56:07.000+00:00
        conversion_rate: 5.637376656633329
        unpublished_at: 2000-01-23T04:56:07.000+00:00
        status: status
    inline_response_200_13_report_summary:
      type: object
      properties:
        reach:
          type: integer
        impressions:
          type: integer
        clicks:
          type: integer
        click_rate:
          type: number
        unique_clicks:
          type: integer
        first_time_buyers:
          type: integer
        ecommerce:
          $ref: '#/components/schemas/inline_response_200_13_report_summary_ecommerce'
        total_products_sold:
          type: integer
        total_orders:
          type: integer
        average_order_amount:
          $ref: '#/components/schemas/inline_response_200_13_report_summary_average_order_amount'
        cost_per_click:
          $ref: '#/components/schemas/inline_response_200_13_report_summary_average_order_amount'
        average_daily_budget:
          $ref: '#/components/schemas/inline_response_200_13_report_summary_average_order_amount'
        likes:
          type: integer
        comments:
          type: integer
        shares:
          type: integer
        has_extended_ad_duration:
          type: boolean
        extended_at:
          $ref: '#/components/schemas/inline_response_200_13_report_summary_extended_at'
        return_on_investment:
          type: number
      description: Report summary of facebook ad
      example:
        total_products_sold: 4
        comments: 1
        reach: 5
        click_rate: 7.061401241503109
        cost_per_click: null
        extended_at:
          datetime: datetime
          timezone: timezone
        return_on_investment: 7.457744773683766
        impressions: 5
        total_orders: 7
        first_time_buyers: 3
        shares: 6
        average_order_amount:
          amount: 1.2315135367772556
          currency_code: currency_code
        average_daily_budget: null
        unique_clicks: 9
        has_extended_ad_duration: true
        ecommerce:
          total_revenue: 2.027123023002322
          currency_code: currency_code
        clicks: 2
        likes: 1
    inline_response_200_9:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_9_products'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of ecommerce products.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 5
        products:
        - total_purchased: 6.027456183070403
          image_url: image_url
          total_revenue: 0.8008281904610115
          recommendation_purchased: 5
          recommendation_total: 1
          title: title
          sku: sku
          currency_code: currency_code
        - total_purchased: 6.027456183070403
          image_url: image_url
          total_revenue: 0.8008281904610115
          recommendation_purchased: 5
          recommendation_total: 1
          title: title
          sku: sku
          currency_code: currency_code
    Bounces:
      title: Bounces
      type: object
      properties:
        hard_bounces:
          title: Hard Bounces
          type: integer
          description: The total number of hard bounced email addresses.
        soft_bounces:
          title: Soft Bounces
          type: integer
          description: The total number of soft bounced email addresses.
        syntax_errors:
          title: Syntax Errors
          type: integer
          description: The total number of addresses that were syntax-related bounces.
      description: An object describing the bounce summary for the campaign.
      example:
        hard_bounces: 5
        syntax_errors: 2
        soft_bounces: 5
    inline_response_200_5:
      type: object
      properties:
        automations:
          title: Automation Workflows
          type: array
          description: "An array of objects, each representing an Automation workflow."
          items:
            $ref: '#/components/schemas/Automation Workflow_2'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "An array of objects, each representing an Automation workflow."
      example:
        automations:
        - start_time: 2000-01-23T04:56:07.000+00:00
          settings:
            auto_footer: true
            use_conversation: true
            authenticate: true
            reply_to: reply_to
            to_name: to_name
            inline_css: true
            title: title
            from_name: from_name
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          recipients:
            segment_opts:
              match: any
              saved_segment_id: 6
              conditions:
              - {}
              - {}
            store_id: 1a2df69xxx
            list_id: list_id
            list_name: list_name
            list_is_active: true
          emails_sent: 0
          trigger_settings:
            runtime:
              hours:
                type: send_asap
              days:
              - sunday
              - sunday
            workflow_emails_count: 1
            workflow_type: abandonedBrowse
            workflow_title: workflow_title
          id: id
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 3.616076749251911
            opens: 5
            clicks: 7
            unique_opens: 5
            open_rate: 2.3021358869347655
        - start_time: 2000-01-23T04:56:07.000+00:00
          settings:
            auto_footer: true
            use_conversation: true
            authenticate: true
            reply_to: reply_to
            to_name: to_name
            inline_css: true
            title: title
            from_name: from_name
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          recipients:
            segment_opts:
              match: any
              saved_segment_id: 6
              conditions:
              - {}
              - {}
            store_id: 1a2df69xxx
            list_id: list_id
            list_name: list_name
            list_is_active: true
          emails_sent: 0
          trigger_settings:
            runtime:
              hours:
                type: send_asap
              days:
              - sunday
              - sunday
            workflow_emails_count: 1
            workflow_type: abandonedBrowse
            workflow_title: workflow_title
          id: id
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 3.616076749251911
            opens: 5
            clicks: 7
            unique_opens: 5
            open_rate: 2.3021358869347655
        _links:
        - null
        - null
        total_items: 2
    inline_response_200_6:
      type: object
      properties:
        workflow_id:
          title: Workflow ID
          type: string
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
        email_id:
          title: Automation Email ID
          type: string
          description: A string that uniquely identifies an email in an Automation
            workflow.
          readOnly: true
        queue:
          title: Trigger
          type: array
          description: "An array of objects, each representing a subscriber queue\
            \ for an email in an Automation workflow."
          readOnly: true
          items:
            $ref: '#/components/schemas/Subscriber in Automation Queue_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An automation workflow
      example:
        email_id: email_id
        workflow_id: workflow_id
        _links:
        - null
        - null
        total_items: 0
        queue:
        - email_id: email_id
          workflow_id: workflow_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          next_send: 2000-01-23T04:56:07.000+00:00
          id: id
        - email_id: email_id
          workflow_id: workflow_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          next_send: 2000-01-23T04:56:07.000+00:00
          id: id
    inline_response_200_7:
      type: object
      properties:
        campaigns:
          title: Campaigns
          type: array
          description: An array of campaigns.
          items:
            $ref: '#/components/schemas/Campaign_4'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An array of campaigns.
      example:
        campaigns:
        - archive_url: archive_url
          resendable: true
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            use_conversation: true
            authenticate: true
            to_name: to_name
            timewarp: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 5
            folder_id: folder_id
          variate_settings:
            send_times:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            combinations:
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            wait_time: 5
            subject_lines:
            - subject_lines
            - subject_lines
            contents:
            - contents
            - contents
            test_size: 2
            winning_combination_id: winning_combination_id
            reply_to_addresses:
            - reply_to_addresses
            - reply_to_addresses
            winner_criteria: opens
            winning_campaign_id: winning_campaign_id
            from_names:
            - from_names
            - from_names
          ab_split_opts:
            pick_winner: opens
            wait_time: 1
            wait_units: hours
            subject_b: subject_b
            subject_a: subject_a
            split_test: subject
            from_name_a: from_name_a
            from_name_b: from_name_b
            send_time_winner: send_time_winner
            reply_email_b: reply_email_b
            reply_email_a: reply_email_a
            send_time_a: 2000-01-23T04:56:07.000+00:00
            send_time_b: 2000-01-23T04:56:07.000+00:00
            split_size: 34
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 0
          type: regular
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          send_time: 2000-01-23T04:56:07.000+00:00
          rss_opts:
            schedule:
              hour: 2
              weekly_send_day: sunday
              daily_send:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              monthly_send_date: 3.1764016704468894
            last_sent: 2000-01-23T04:56:07.000+00:00
            constrain_rss_img: true
            feed_url: http://example.com/aeiou
            frequency: daily
          parent_campaign_id: parent_campaign_id
          content_type: template
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - {}
              - {}
            list_id: list_id
            segment_text: segment_text
            recipient_count: 1
            list_name: list_name
            list_is_active: true
          emails_sent: 6
          id: id
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
          long_archive_url: long_archive_url
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 9.369310271410669
            ecommerce:
              total_spent: 8.762042012749001
              total_revenue: 9.018348186070783
              total_orders: 6
            opens: 7
            clicks: 5
            unique_opens: 1
            open_rate: 4.965218492984954
        - archive_url: archive_url
          resendable: true
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            use_conversation: true
            authenticate: true
            to_name: to_name
            timewarp: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 5
            folder_id: folder_id
          variate_settings:
            send_times:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            combinations:
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            wait_time: 5
            subject_lines:
            - subject_lines
            - subject_lines
            contents:
            - contents
            - contents
            test_size: 2
            winning_combination_id: winning_combination_id
            reply_to_addresses:
            - reply_to_addresses
            - reply_to_addresses
            winner_criteria: opens
            winning_campaign_id: winning_campaign_id
            from_names:
            - from_names
            - from_names
          ab_split_opts:
            pick_winner: opens
            wait_time: 1
            wait_units: hours
            subject_b: subject_b
            subject_a: subject_a
            split_test: subject
            from_name_a: from_name_a
            from_name_b: from_name_b
            send_time_winner: send_time_winner
            reply_email_b: reply_email_b
            reply_email_a: reply_email_a
            send_time_a: 2000-01-23T04:56:07.000+00:00
            send_time_b: 2000-01-23T04:56:07.000+00:00
            split_size: 34
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 0
          type: regular
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          send_time: 2000-01-23T04:56:07.000+00:00
          rss_opts:
            schedule:
              hour: 2
              weekly_send_day: sunday
              daily_send:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              monthly_send_date: 3.1764016704468894
            last_sent: 2000-01-23T04:56:07.000+00:00
            constrain_rss_img: true
            feed_url: http://example.com/aeiou
            frequency: daily
          parent_campaign_id: parent_campaign_id
          content_type: template
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - {}
              - {}
            list_id: list_id
            segment_text: segment_text
            recipient_count: 1
            list_name: list_name
            list_is_active: true
          emails_sent: 6
          id: id
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
          long_archive_url: long_archive_url
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 9.369310271410669
            ecommerce:
              total_spent: 8.762042012749001
              total_revenue: 9.018348186070783
              total_orders: 6
            opens: 7
            clicks: 5
            unique_opens: 1
            open_rate: 4.965218492984954
        _links:
        - null
        - null
        total_items: 6
    Daily Sending Days:
      title: Daily Sending Days
      type: object
      properties:
        sunday:
          title: Sunday
          type: boolean
          description: Sends the daily RSS Campaign on Sundays.
        monday:
          title: Monday
          type: boolean
          description: Sends the daily RSS Campaign on Mondays.
        tuesday:
          title: tuesday
          type: boolean
          description: Sends the daily RSS Campaign on Tuesdays.
        wednesday:
          title: Monday
          type: boolean
          description: Sends the daily RSS Campaign on Wednesdays.
        thursday:
          title: Thursday
          type: boolean
          description: Sends the daily RSS Campaign on Thursdays.
        friday:
          title: Friday
          type: boolean
          description: Sends the daily RSS Campaign on Fridays.
        saturday:
          title: Saturday
          type: boolean
          description: Sends the daily RSS Campaign on Saturdays.
      description: The days of the week to send a daily RSS Campaign.
      example:
        sunday: true
        saturday: true
        tuesday: true
        wednesday: true
        thursday: true
        friday: true
        monday: true
    inline_response_200_8:
      type: object
      properties:
        landing_pages:
          type: array
          description: The landing pages on the account
          items:
            $ref: '#/components/schemas/Landing Page_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of landing pages.
      example:
        _links:
        - null
        - null
        landing_pages:
        - store_id: store_id
          created_by_source: created_by_source
          list_id: fde02ad86b
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          web_id: 6
          title: title
          tracking:
            track_with_mailchimp: true
            enable_restricted_data_processing: true
          url: url
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          template_id: 0
          id: 030092c2e1f0
          published_at: 2000-01-23T04:56:07.000+00:00
          status: published
          unpublished_at: 2000-01-23T04:56:07.000+00:00
        - store_id: store_id
          created_by_source: created_by_source
          list_id: fde02ad86b
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          web_id: 6
          title: title
          tracking:
            track_with_mailchimp: true
            enable_restricted_data_processing: true
          url: url
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          template_id: 0
          id: 030092c2e1f0
          published_at: 2000-01-23T04:56:07.000+00:00
          status: published
          unpublished_at: 2000-01-23T04:56:07.000+00:00
        total_items: 1
    Campaigns:
      title: Campaigns
      type: object
      properties:
        results:
          title: Results
          type: array
          description: An array of matching campaigns and snippets.
          items:
            $ref: '#/components/schemas/Campaigns_results'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Campaigns and Snippets found for given search term.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        results:
        - snippet: snippet
          campaign:
            archive_url: archive_url
            resendable: true
            settings:
              auto_footer: true
              subject_line: subject_line
              preview_text: preview_text
              use_conversation: true
              authenticate: true
              to_name: to_name
              timewarp: true
              title: title
              from_name: from_name
              auto_tweet: true
              auto_fb_post:
              - auto_fb_post
              - auto_fb_post
              fb_comments: true
              drag_and_drop: true
              reply_to: reply_to
              inline_css: true
              template_id: 5
              folder_id: folder_id
            variate_settings:
              send_times:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              combinations:
              - subject_line: 7
                send_time: 9
                reply_to: 2
                recipients: 7
                id: id
                from_name: 3
                content_description: 4
              - subject_line: 7
                send_time: 9
                reply_to: 2
                recipients: 7
                id: id
                from_name: 3
                content_description: 4
              wait_time: 5
              subject_lines:
              - subject_lines
              - subject_lines
              contents:
              - contents
              - contents
              test_size: 2
              winning_combination_id: winning_combination_id
              reply_to_addresses:
              - reply_to_addresses
              - reply_to_addresses
              winner_criteria: opens
              winning_campaign_id: winning_campaign_id
              from_names:
              - from_names
              - from_names
            ab_split_opts:
              pick_winner: opens
              wait_time: 1
              wait_units: hours
              subject_b: subject_b
              subject_a: subject_a
              split_test: subject
              from_name_a: from_name_a
              from_name_b: from_name_b
              send_time_winner: send_time_winner
              reply_email_b: reply_email_b
              reply_email_a: reply_email_a
              send_time_a: 2000-01-23T04:56:07.000+00:00
              send_time_b: 2000-01-23T04:56:07.000+00:00
              split_size: 34
            create_time: 2000-01-23T04:56:07.000+00:00
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            web_id: 0
            type: regular
            tracking:
              salesforce:
                notes: true
                campaign: true
              goal_tracking: true
              capsule:
                notes: true
              clicktale: clicktale
              text_clicks: true
              ecomm360: true
              opens: true
              google_analytics: google_analytics
              html_clicks: true
            needs_block_refresh: true
            send_time: 2000-01-23T04:56:07.000+00:00
            rss_opts:
              schedule:
                hour: 2
                weekly_send_day: sunday
                daily_send:
                  sunday: true
                  saturday: true
                  tuesday: true
                  wednesday: true
                  thursday: true
                  friday: true
                  monday: true
                monthly_send_date: 3.1764016704468894
              last_sent: 2000-01-23T04:56:07.000+00:00
              constrain_rss_img: true
              feed_url: http://example.com/aeiou
              frequency: daily
            parent_campaign_id: parent_campaign_id
            content_type: template
            social_card:
              image_url: image_url
              description: description
              title: title
            recipients:
              segment_opts:
                prebuilt_segment_id: subscribers-female
                match: any
                saved_segment_id: 5
                conditions:
                - {}
                - {}
              list_id: list_id
              segment_text: segment_text
              recipient_count: 1
              list_name: list_name
              list_is_active: true
            emails_sent: 6
            id: id
            delivery_status:
              emails_sent: 6
              can_cancel: true
              emails_canceled: 3
              enabled: true
              status: delivering
            long_archive_url: long_archive_url
            status: save
            report_summary:
              subscriber_clicks: 9
              click_rate: 9.369310271410669
              ecommerce:
                total_spent: 8.762042012749001
                total_revenue: 9.018348186070783
                total_orders: 6
              opens: 7
              clicks: 5
              unique_opens: 1
              open_rate: 4.965218492984954
        - snippet: snippet
          campaign:
            archive_url: archive_url
            resendable: true
            settings:
              auto_footer: true
              subject_line: subject_line
              preview_text: preview_text
              use_conversation: true
              authenticate: true
              to_name: to_name
              timewarp: true
              title: title
              from_name: from_name
              auto_tweet: true
              auto_fb_post:
              - auto_fb_post
              - auto_fb_post
              fb_comments: true
              drag_and_drop: true
              reply_to: reply_to
              inline_css: true
              template_id: 5
              folder_id: folder_id
            variate_settings:
              send_times:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              combinations:
              - subject_line: 7
                send_time: 9
                reply_to: 2
                recipients: 7
                id: id
                from_name: 3
                content_description: 4
              - subject_line: 7
                send_time: 9
                reply_to: 2
                recipients: 7
                id: id
                from_name: 3
                content_description: 4
              wait_time: 5
              subject_lines:
              - subject_lines
              - subject_lines
              contents:
              - contents
              - contents
              test_size: 2
              winning_combination_id: winning_combination_id
              reply_to_addresses:
              - reply_to_addresses
              - reply_to_addresses
              winner_criteria: opens
              winning_campaign_id: winning_campaign_id
              from_names:
              - from_names
              - from_names
            ab_split_opts:
              pick_winner: opens
              wait_time: 1
              wait_units: hours
              subject_b: subject_b
              subject_a: subject_a
              split_test: subject
              from_name_a: from_name_a
              from_name_b: from_name_b
              send_time_winner: send_time_winner
              reply_email_b: reply_email_b
              reply_email_a: reply_email_a
              send_time_a: 2000-01-23T04:56:07.000+00:00
              send_time_b: 2000-01-23T04:56:07.000+00:00
              split_size: 34
            create_time: 2000-01-23T04:56:07.000+00:00
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            web_id: 0
            type: regular
            tracking:
              salesforce:
                notes: true
                campaign: true
              goal_tracking: true
              capsule:
                notes: true
              clicktale: clicktale
              text_clicks: true
              ecomm360: true
              opens: true
              google_analytics: google_analytics
              html_clicks: true
            needs_block_refresh: true
            send_time: 2000-01-23T04:56:07.000+00:00
            rss_opts:
              schedule:
                hour: 2
                weekly_send_day: sunday
                daily_send:
                  sunday: true
                  saturday: true
                  tuesday: true
                  wednesday: true
                  thursday: true
                  friday: true
                  monday: true
                monthly_send_date: 3.1764016704468894
              last_sent: 2000-01-23T04:56:07.000+00:00
              constrain_rss_img: true
              feed_url: http://example.com/aeiou
              frequency: daily
            parent_campaign_id: parent_campaign_id
            content_type: template
            social_card:
              image_url: image_url
              description: description
              title: title
            recipients:
              segment_opts:
                prebuilt_segment_id: subscribers-female
                match: any
                saved_segment_id: 5
                conditions:
                - {}
                - {}
              list_id: list_id
              segment_text: segment_text
              recipient_count: 1
              list_name: list_name
              list_is_active: true
            emails_sent: 6
            id: id
            delivery_status:
              emails_sent: 6
              can_cancel: true
              emails_canceled: 3
              enabled: true
              status: delivering
            long_archive_url: long_archive_url
            status: save
            report_summary:
              subscriber_clicks: 9
              click_rate: 9.369310271410669
              ecommerce:
                total_spent: 8.762042012749001
                total_revenue: 9.018348186070783
                total_orders: 6
              opens: 7
              clicks: 5
              unique_opens: 1
              open_rate: 4.965218492984954
        total_items: 0
    Create an account export:
      title: Create an account export
      required:
      - include_stages
      type: object
      properties:
        include_stages:
          title: Include Stages
          type: array
          description: The stages of an account export to include.
          example: "[\"audiences\", \"gallery_files\"]"
          items:
            type: string
            enum:
            - audiences
            - campaigns
            - events
            - gallery_files
            - reports
            - templates
        since_timestamp:
          title: Since Timestamp
          type: string
          description: "An ISO 8601 date that will limit the export to only records\
            \ created after a given time. For instance, the reports stage will contain\
            \ any campaign sent after the given timestamp. Audiences, however, are\
            \ excluded from this limit."
          format: date-time
          example: 2021-08-23T14:15:09Z
      description: Creates an account export with the given parameters.
    Members to SubscribeUnsubscribe tofrom a List in batch:
      title: Members to Subscribe/Unsubscribe to/from a List in batch
      required:
      - members
      type: object
      properties:
        members:
          title: List Members
          type: array
          description: "An array of objects, each representing an email address and\
            \ the subscription status for a specific list. Up to 500 members may be\
            \ added or updated with each API call."
          items:
            $ref: '#/components/schemas/Add List Members'
        sync_tags:
          title: Sync Tags
          type: boolean
          description: Whether this batch operation will replace all existing tags
            with tags in request.
        update_existing:
          title: Update Existing Members
          type: boolean
          description: Whether this batch operation will change existing members'
            subscription status.
      description: Members to subscribe to or unsubscribe from a list.
    inline_response_200_1:
      type: object
      properties:
        exports:
          title: Account Exports
          type: array
          description: "An array of objects, each representing an account export."
          items:
            $ref: '#/components/schemas/inline_response_200_1_exports'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "An array of objects, each representing an account export."
      example:
        _links:
        - null
        - null
        exports:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          size_in_bytes: 6
          download_url: download_url
          started: 2000-01-23T04:56:07.000+00:00
          finished: 2000-01-23T04:56:07.000+00:00
          export_id: 0
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          size_in_bytes: 6
          download_url: download_url
          started: 2000-01-23T04:56:07.000+00:00
          finished: 2000-01-23T04:56:07.000+00:00
          export_id: 0
        total_items: 1
    inline_response_200_2:
      type: object
      properties:
        export_id:
          title: Export ID
          type: integer
          description: The ID for the export.
        started:
          title: Start Time
          type: string
          description: Start time for the export.
          format: date-time
        finished:
          title: Finish Time
          type: string
          description: "If finished, the finish time for the export."
          format: date-time
        size_in_bytes:
          title: Export Size
          type: integer
          description: The size of the uncompressed export in bytes.
        download_url:
          title: Download URL
          type: string
          description: "If the export is finished, the download URL for an export.\
            \ URLs are only valid for 90 days after the export completes."
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An account export.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        size_in_bytes: 6
        download_url: download_url
        started: 2000-01-23T04:56:07.000+00:00
        finished: 2000-01-23T04:56:07.000+00:00
        export_id: 0
    inline_response_200_3:
      type: object
      properties:
        apps:
          title: Authorized Applications
          type: array
          description: "An array of objects, each representing an authorized application."
          items:
            $ref: '#/components/schemas/inline_response_200_3_apps'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "An array of objects, each representing an authorized application."
      example:
        _links:
        - null
        - null
        total_items: 6
        apps:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          description: description
          id: 0
          users:
          - users
          - users
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          description: description
          id: 0
          users:
          - users
          - users
    inline_response_200_4:
      type: object
      properties:
        id:
          title: Client ID
          type: integer
          description: The ID for the application.
        name:
          title: Application Name
          type: string
          description: The name of the application.
        description:
          title: Application Description
          type: string
          description: A short description of the application.
        users:
          title: Application Users
          type: array
          description: An array of usernames for users who have linked the app.
          items:
            type: string
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An authorized app.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        description: description
        id: 0
        users:
        - users
        - users
    Email Activity_1:
      title: Email Activity
      type: object
      properties:
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        activity:
          title: Member Activity
          type: array
          description: "An array of objects, each showing an interaction with the\
            \ email."
          items:
            $ref: '#/components/schemas/Member Activity'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "A list of a member's subscriber activity in a specific campaign,\
        \ including opens, clicks, and bounces."
      example:
        email_id: email_id
        email_address: email_address
        list_id: list_id
        activity:
        - ip: ip
          action: action
          type: type
          url: url
          timestamp: 2000-01-23T04:56:07.000+00:00
        - ip: ip
          action: action
          type: type
          url: url
          timestamp: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        list_is_active: true
        campaign_id: campaign_id
    Email Activity_2:
      title: Email Activity
      type: object
      properties:
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        activity:
          title: Member Activity
          type: array
          description: "An array of objects, each showing an interaction with the\
            \ email."
          items:
            $ref: '#/components/schemas/Member Activity'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "A list of a member's subscriber activity in a specific campaign,\
        \ including opens, clicks, and bounces."
      example:
        email_id: email_id
        email_address: email_address
        list_id: list_id
        activity:
        - ip: ip
          action: action
          type: type
          url: url
          timestamp: 2000-01-23T04:56:07.000+00:00
        - ip: ip
          action: action
          type: type
          url: url
          timestamp: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        list_is_active: true
        campaign_id: campaign_id
    inline_response_200_11:
      type: object
      properties:
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
        audience:
          $ref: '#/components/schemas/inline_response_200_11_audience'
        budget:
          $ref: '#/components/schemas/inline_response_200_11_budget'
        canceled_at:
          type: string
          format: date-time
        channel:
          $ref: '#/components/schemas/inline_response_200_11_channel'
        content:
          $ref: '#/components/schemas/inline_response_200_11_content'
        create_time:
          type: string
          format: date-time
        email_source_name:
          type: string
        end_time:
          type: string
          format: date-time
        feedback:
          $ref: '#/components/schemas/inline_response_200_11_feedback'
        has_audience:
          type: boolean
          description: Check if this ad has audience setup
        has_content:
          type: boolean
          description: Check if this ad has content
        has_segment:
          type: boolean
        id:
          type: string
          description: Unique ID of an Outreach
        is_connected:
          type: boolean
          description: Check if this ad is connected to a facebook page
        name:
          type: string
          description: Title or name of an Outreach
        needs_attention:
          type: boolean
        paused_at:
          type: string
          format: date-time
        published_time:
          type: string
          format: date-time
        recipients:
          $ref: '#/components/schemas/List_10'
        report_summary:
          $ref: '#/components/schemas/inline_response_200_11_report_summary'
        show_report:
          type: boolean
          description: Outreach report availability
        site:
          $ref: '#/components/schemas/inline_response_200_11_site'
        start_time:
          type: string
          format: date-time
        status:
          title: Outreach status
          type: string
          description: "Campaign, Ad, or Page status"
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          - canceled
          - canceling
          - active
          - disconnected
          - somepaused
          - draft
          - completed
          - partialRejected
          - pending
          - rejected
          - published
          - unpublished
        thumbnail:
          type: string
          description: The URL of the thumbnail for this outreach
        type:
          title: Outreach type
          type: string
          description: "Supported Campaign, Ad, Page type"
          enum:
          - regular
          - plaintext
          - rss
          - reconfirm
          - variate
          - absplit
          - automation
          - facebook
          - google
          - autoresponder
          - transactional
          - page
          - website
          - survey
        updated_at:
          type: string
          format: date-time
        was_canceled_by_facebook:
          type: boolean
        web_id:
          type: integer
          description: Web ID
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        canceled_at: 2000-01-23T04:56:07.000+00:00
        channel:
          fb_placement_feed: true
          fb_placement_audience: false
          ig_placement_feed: false
        type: regular
        content:
          attachments:
          - call_to_action: call_to_action
            image_url: image_url
            name: name
            link_url: link_url
            description: description
          - call_to_action: call_to_action
            image_url: image_url
            name: name
            link_url: link_url
            description: description
          call_to_action: call_to_action
          image_url: image_url
          link_url: link_url
          description: description
          title: title
          message: message
        feedback:
          audience: audience
          compliance: compliance
          content: content
          budget: budget
        show_report: true
        email_source_name: email_source_name
        paused_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        has_audience: true
        has_content: true
        published_time: 2000-01-23T04:56:07.000+00:00
        id: id
        budget:
          duration: 86400
          total_amount: 500.0
          currency_code: USD
        has_segment: true
        is_connected: true
        audience:
          include_source_in_target: true
          email_source:
            name: name
            segment_type: segment_type
            list_name: list_name
            type: type
            is_segment: true
          targeting_specs:
            max_age: 1
            gender: 0
            locations:
              regions:
              - regions
              - regions
              cities:
              - cities
              - cities
              countries:
              - countries
              - countries
              zips:
              - zips
              - zips
            min_age: 6
            interests:
            - name: name
            - name: name
          source_type: facebook
          type: Custom Audience
          lookalike_country_code: lookalike_country_code
        thumbnail: thumbnail
        create_time: 2000-01-23T04:56:07.000+00:00
        end_time: 2000-01-23T04:56:07.000+00:00
        web_id: 9
        start_time: 2000-01-23T04:56:07.000+00:00
        site:
          name: My Connected Site
          id: 43
          url: www.example.com
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - {}
            - {}
          list_id: list_id
          segment_text: segment_text
          recipient_count: 5
          list_name: list_name
          list_is_active: true
        name: name
        needs_attention: true
        report_summary:
          unique_visits: 7
          subscribes: 1
          reach: 1
          click_rate: 2.027123023002322
          total_sent: 5
          impressions: 7.457744773683766
          unique_opens: 2
          subscriber_clicks: 3
          visits: 4
          ecommerce:
            average_order_revenue: 6.84685269835264
            total_revenue: 1.4894159098541704
            currency_code: currency_code
          opens: 5
          clicks: 9
          engagements: 4
          conversion_rate: 1.2315135367772556
          open_rate: 7.061401241503109
        status: save
        was_canceled_by_facebook: true
    inline_response_200_10:
      type: object
      properties:
        facebook_ads:
          type: array
          items:
            type: object
            allOf:
            - type: object
              properties:
                id:
                  type: string
                  description: Unique ID of an Outreach
                web_id:
                  type: integer
                  description: Web ID
                name:
                  type: string
                  description: Title or name of an Outreach
                type:
                  title: Outreach type
                  type: string
                  description: "Supported Campaign, Ad, Page type"
                  enum:
                  - regular
                  - plaintext
                  - rss
                  - reconfirm
                  - variate
                  - absplit
                  - automation
                  - facebook
                  - google
                  - autoresponder
                  - transactional
                  - page
                  - website
                  - survey
                status:
                  title: Outreach status
                  type: string
                  description: "Campaign, Ad, or Page status"
                  enum:
                  - save
                  - paused
                  - schedule
                  - sending
                  - sent
                  - canceled
                  - canceling
                  - active
                  - disconnected
                  - somepaused
                  - draft
                  - completed
                  - partialRejected
                  - pending
                  - rejected
                  - published
                  - unpublished
                show_report:
                  type: boolean
                  description: Outreach report availability
                create_time:
                  type: string
                  format: date-time
                start_time:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                canceled_at:
                  type: string
                  format: date-time
                published_time:
                  type: string
                  format: date-time
                has_segment:
                  type: boolean
                report_summary:
                  type: object
                  properties:
                    opens:
                      type: integer
                    unique_opens:
                      type: integer
                    open_rate:
                      type: number
                    clicks:
                      type: integer
                    subscriber_clicks:
                      type: integer
                    click_rate:
                      type: number
                    visits:
                      type: integer
                    unique_visits:
                      type: integer
                    conversion_rate:
                      type: number
                    subscribes:
                      type: integer
                    ecommerce:
                      type: object
                      properties:
                        total_revenue:
                          type: number
                        currency_code:
                          type: string
                        average_order_revenue:
                          type: number
                    impressions:
                      type: number
                    reach:
                      type: integer
                    engagements:
                      type: integer
                    total_sent:
                      type: integer
                recipients:
                  title: List
                  type: object
                  properties:
                    list_id:
                      title: List ID
                      type: string
                      description: The unique list id.
                    list_is_active:
                      title: List Status
                      type: boolean
                      description: "The status of the list used, namely if it's deleted\
                        \ or disabled."
                      readOnly: true
                    list_name:
                      title: List Name
                      type: string
                      description: The name of the list.
                      readOnly: true
                    segment_text:
                      title: Segment Text
                      type: string
                      description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
                        \ used for the campaign. Formatted as a string marked up with\
                        \ HTML."
                      readOnly: true
                    recipient_count:
                      title: Recipient Count
                      type: integer
                      description: Count of the recipients on the associated list.
                        Formatted as an integer.
                      readOnly: true
                    segment_opts:
                      title: Segment Options
                      type: object
                      properties:
                        saved_segment_id:
                          title: Saved Segment ID
                          type: integer
                          description: The id for an existing saved segment.
                        prebuilt_segment_id:
                          title: Prebuilt Segment Id
                          type: string
                          description: "The prebuilt segment id, if a prebuilt segment\
                            \ has been designated for this campaign."
                          example: subscribers-female
                        match:
                          title: Match Type
                          type: string
                          description: Segment match type.
                          enum:
                          - any
                          - all
                        conditions:
                          title: Segment Type
                          type: array
                          description: "Segment match conditions. There are multiple\
                            \ possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
                          items:
                            type: object
                            x-oneOf:
                            - type: object
                              title: Aim Segment
                              description: Segment by interaction with a specific
                                campaign.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Aim
                                  enum:
                                  - Aim
                                field:
                                  type: string
                                  enum:
                                  - aim
                                  title: Segment Field
                                  description: Segment by interaction with a specific
                                    campaign.
                                  example: aim
                                op:
                                  type: string
                                  enum:
                                  - open
                                  - click
                                  - sent
                                  - noopen
                                  - noclick
                                  - nosent
                                  title: Segment Operator
                                  description: "The status of the member with regard\
                                    \ to their campaign interaction. One of the following:\
                                    \ opened, clicked, was sent, didn't open, didn't\
                                    \ click, or was not sent."
                                  example: open
                                value:
                                  type: string
                                  title: Segment Data
                                  description: Either the web id value for a specific
                                    campaign or 'any' to account for subscribers who
                                    have/have not interacted with any campaigns.
                                  example: any
                            - type: object
                              title: Automation Segment
                              description: Segment by interaction with an Automation
                                workflow.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Automation
                                  enum:
                                  - Automation
                                field:
                                  type: string
                                  enum:
                                  - automation
                                  title: Segment Field
                                  description: Segment by interaction with an Automation
                                    workflow.
                                  example: automation
                                op:
                                  type: string
                                  enum:
                                  - started
                                  - completed
                                  - not_started
                                  - not_completed
                                  title: Segment Operator
                                  description: "The status of the member with regard\
                                    \ to the automation workflow. One of the following:\
                                    \ has started the workflow, has completed the\
                                    \ workflow, has not started the workflow, or has\
                                    \ not completed the workflow."
                                  example: started
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The web id for the automation workflow
                                    to segment against.
                                  example: "2135217"
                            - type: object
                              title: Poll Activity Segment
                              description: Segment by poll activity.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: CampaignPoll
                                  enum:
                                  - CampaignPoll
                                field:
                                  type: string
                                  enum:
                                  - poll
                                  title: Segment Field
                                  description: Segment by poll activity.
                                  example: poll
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: Members have/have not interacted with
                                    a specific poll in a Mailchimp email.
                                  example: member
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The id for the poll.
                                  example: 409
                            - type: object
                              title: Conversation Segment
                              description: Segment by interaction with a campaign
                                via Conversations.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Conversation
                                  enum:
                                  - Conversation
                                field:
                                  type: string
                                  enum:
                                  - conversation
                                  title: Segment Field
                                  description: Segment by interaction with a campaign
                                    via Conversations.
                                  example: conversation
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: "The status of a member's interaction\
                                    \ with a conversation. One of the following: has\
                                    \ replied or has not replied."
                                  example: member
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The web id value for a specific campaign
                                    or 'any' to account for subscribers who have/have
                                    not interacted with any campaigns.
                                  example: any
                            - type: object
                              title: Date Segment
                              description: Segment by a specific date field.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Date
                                  enum:
                                  - Date
                                field:
                                  type: string
                                  enum:
                                  - timestamp_opt
                                  - info_changed
                                  - ecomm_date
                                  title: Segment Field
                                  description: "The type of date field to segment\
                                    \ on: The opt-in time for a signup, the date the\
                                    \ subscriber was last updated, or the date of\
                                    \ their last ecomm purchase."
                                  example: timestamp_opt
                                op:
                                  type: string
                                  enum:
                                  - greater
                                  - less
                                  - is
                                  - not
                                  - blank
                                  - blank_not
                                  - within
                                  - notwithin
                                  title: Segment Operator
                                  description: "When the event took place:  Before,\
                                    \ after, is a specific date, is not a specific\
                                    \ date, is blank, or is not blank."
                                  example: greater
                                value:
                                  type: string
                                  title: Segment Data
                                  description: "What type of data to segment on: a\
                                    \ specific date, a specific campaign, or the last\
                                    \ campaign sent."
                                  example: date
                                extra:
                                  type: string
                                  title: Segment Extra Value
                                  description: "When segmenting on 'date' or 'campaign',\
                                    \ the date for the segment formatted as YYYY-MM-DD\
                                    \ or the web id for the campaign."
                                  example: 2015-01-30
                            - type: object
                              title: Email Client Segment
                              description: Segment by use of a particular email client.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EmailClient
                                  enum:
                                  - EmailClient
                                field:
                                  type: string
                                  enum:
                                  - email_client
                                  title: Segment Field
                                  description: Segment by use of a particular email
                                    client.
                                  example: email_client
                                op:
                                  type: string
                                  enum:
                                  - client_is
                                  - client_not
                                  title: Segment Operator
                                  description: "The operation to determine whether\
                                    \ we select clients that match the value, or clients\
                                    \ that do not match the value."
                                  example: client_is
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The name of the email client.
                                  example: Gmail
                            - type: object
                              title: Language Segment
                              description: Segment by language.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Language
                                  enum:
                                  - Language
                                field:
                                  type: string
                                  enum:
                                  - language
                                  title: Segment Field
                                  description: Segmenting based off of a subscriber's
                                    language.
                                  example: language
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Whether the member's language is or
                                    is not set to a specific language.
                                  example: is
                                value:
                                  type: string
                                  title: Segment Data
                                  description: A two-letter language identifier.
                                  example: en
                            - type: object
                              title: Member Rating Segment
                              description: Segment by member rating.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: MemberRating
                                  enum:
                                  - MemberRating
                                field:
                                  type: string
                                  enum:
                                  - rating
                                  title: Segment Field
                                  description: Segment by member rating.
                                  example: rating
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: Members who have have a rating that
                                    is/not exactly a given number or members who have
                                    a rating greater/less than a given number.
                                  example: greater
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The star rating number to segment against.
                                  example: 4
                            - type: object
                              title: Signup Source Segment
                              description: Segment by signup source.
                              required:
                              - field
                              - condition_type
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  enum:
                                  - SignupSource
                                  x-value: SignupSource
                                  title: Type
                                field:
                                  type: string
                                  enum:
                                  - source
                                  title: Segment Field
                                  example: source
                                op:
                                  type: string
                                  enum:
                                  - source_is
                                  - source_not
                                  title: Segment Operator
                                  description: Whether the member's signup source
                                    was/was not a particular value.
                                  example: source_is
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The signup source.
                                  example: List Import
                            - type: object
                              title: Survey Monkey Segment
                              description: Segment by interaction with a SurveyMonkey
                                survey.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SurveyMonkey
                                  enum:
                                  - SurveyMonkey
                                field:
                                  type: string
                                  enum:
                                  - survey_monkey
                                  title: Segment Field
                                  description: Segment by interaction with a SurveyMonkey
                                    survey.
                                  example: survey_monkey
                                op:
                                  type: string
                                  enum:
                                  - started
                                  - completed
                                  - not_started
                                  - not_completed
                                  title: Segment Operator
                                  description: "The status of the member with regard\
                                    \ to the survey.One of the following: has started\
                                    \ the survey, has completed the survey, has not\
                                    \ started the survey, or has not completed the\
                                    \ survey."
                                  example: started
                                value:
                                  type: string
                                  title: Survey ID
                                  description: The unique ID of the survey monkey
                                    survey.
                                  example: "32179586"
                            - type: object
                              title: VIP Segment
                              description: Segment by VIP status.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: VIP
                                  enum:
                                  - VIP
                                field:
                                  type: string
                                  enum:
                                  - gmonkey
                                  title: Segment Field
                                  description: Segment by VIP status.
                                  example: gmonkey
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: Whether the member is or is not marked
                                    as VIP.
                                  example: member
                            - type: object
                              title: Interests Segment
                              description: Segment by an interest group merge field.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Interests
                                  enum:
                                  - Interests
                                field:
                                  type: string
                                  title: Segment Field
                                  description: Segmenting based on interest group
                                    information. This should start with 'interests-'
                                    followed by the grouping id. Ex. 'interests-123'.
                                  example: interests-123
                                op:
                                  type: string
                                  enum:
                                  - interestcontains
                                  - interestcontainsall
                                  - interestnotcontains
                                  title: Segment Operator
                                  description: "Whether the member is a part of one,\
                                    \ all, or none of the groups."
                                  example: interestcontains
                                value:
                                  type: array
                                  title: Segment Value
                                  description: "An array containing strings, each\
                                    \ representing a group id."
                                  items:
                                    type: string
                                    example:
                                    - "44401"
                                    - "44405"
                                    - "44409"
                            - type: object
                              title: Ecommerce Category Segment
                              description: Segment by purchases in specific items
                                or categories.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommCategory
                                  enum:
                                  - EcommCategory
                                field:
                                  type: string
                                  enum:
                                  - ecomm_cat
                                  - ecomm_prod
                                  title: Segment Field
                                  description: Segment by purchases in specific items
                                    or categories.
                                  example: ecomm_cat
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - contains
                                  - notcontain
                                  - starts
                                  - ends
                                  title: Segment Operator
                                  description: "A member who has purchased from a\
                                    \ category/specific item that is/is not a specific\
                                    \ name, where the category/item name contains/doesn't\
                                    \ contain a specific phrase or string, or a category/item\
                                    \ name that starts/ends with a string."
                                  example: is
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The ecommerce category/item information.
                                  example: Product
                            - type: object
                              title: Ecommerce Number Segment
                              description: "Segment by average spent total, number\
                                \ of orders, total number of products purchased, or\
                                \ average number of products per order."
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommNumber
                                  enum:
                                  - EcommNumber
                                field:
                                  type: string
                                  enum:
                                  - ecomm_spent_avg
                                  - ecomm_orders
                                  - ecomm_prod_all
                                  - ecomm_avg_ord
                                  title: Segment Field
                                  description: "Segment by average spent total, number\
                                    \ of orders, total number of products purchased,\
                                    \ or average number of products per order."
                                  example: ecomm_orders
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: "Members who have spent exactly, have\
                                    \ not spent exactly, spent more, or spent less\
                                    \ than the segment value."
                                  example: greater
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: "Members who have spent exactly, have\
                                    \ not spent exactly, spent more, or spent less\
                                    \ than this amount."
                                  example: 42
                            - type: object
                              title: Ecommerce Purchased Segment
                              description: Segment by whether someone has purchased
                                anything.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommPurchased
                                  enum:
                                  - EcommPurchased
                                field:
                                  type: string
                                  enum:
                                  - ecomm_purchased
                                  title: Segment Field
                                  description: Segment by whether someone has purchased
                                    anything.
                                  example: ecomm_purchased
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: Members who have have ('member') or
                                    have not ('notmember') purchased.
                                  example: member
                            - type: object
                              title: Ecommerce Spent Segment
                              description: Segment by amount spent on a single order
                                or across all orders.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommSpent
                                  enum:
                                  - EcommSpent
                                field:
                                  type: string
                                  enum:
                                  - ecomm_spent_one
                                  - ecomm_spent_all
                                  title: Segment Field
                                  description: Segment by amount spent on a single
                                    order or across all orders.
                                  example: ecomm_spent_one
                                op:
                                  type: string
                                  enum:
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: Members who have spent 'more' or 'less'
                                    than then specified value.
                                  example: greater
                                value:
                                  type: integer
                                  title: Segment Data
                                  description: The total amount a member spent.
                                  example: 42
                            - type: object
                              title: Ecommerce Purchased Store Segment
                              description: Segment by purchases from a specific store.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommStore
                                  enum:
                                  - EcommStore
                                field:
                                  type: string
                                  enum:
                                  - ecomm_store
                                  title: Segment Field
                                  description: Segment by purchases from a specific
                                    store.
                                  example: ecomm_store
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Members who have or have not purchased
                                    from a specific store.
                                  example: is
                                value:
                                  type: string
                                  title: Segment Operator
                                  description: The store id to segment against.
                                  example: "289"
                            - type: object
                              title: Goal Activity Segment
                              description: Segment by Goal activity.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: GoalActivity
                                  enum:
                                  - GoalActivity
                                field:
                                  type: string
                                  enum:
                                  - goal
                                  title: Segment Field
                                  description: Segment by Goal activity.
                                  example: goal
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - goal_not
                                  - contains
                                  - goal_notcontain
                                  - starts
                                  - ends
                                  title: Segment Operator
                                  description: "Whether the website URL is/not exactly,\
                                    \ contains/doesn't contain, starts with/ends with\
                                    \ a string."
                                  example: is
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The URL to check Goal activity against.
                            - type: object
                              title: Goal Timestamp Segment
                              description: Segment by most recent interaction with
                                a website.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: GoalTimestamp
                                  enum:
                                  - GoalTimestamp
                                field:
                                  type: string
                                  enum:
                                  - goal_last_visited
                                  title: Segment Field
                                  description: Segment by most recent interaction
                                    with a website.
                                  example: goal_last_visited
                                op:
                                  type: string
                                  enum:
                                  - greater
                                  - less
                                  - is
                                  title: Segment Operator
                                  description: "Whether the website activity happened\
                                    \ after, before, or at a given timestamp."
                                  example: greater
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The date to check Goal activity against.
                                  example: 2015-07-20 19:45:21
                            - type: object
                              title: Similar Subscribers Segment Member Segment
                              description: Segment by similar subscribers.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: FuzzySegment
                                  enum:
                                  - FuzzySegment
                                field:
                                  type: string
                                  enum:
                                  - fuzzy_segment
                                  title: Segment Field
                                  description: Segment by similar subscribers.
                                  example: fuzzy_segment
                                op:
                                  type: string
                                  enum:
                                  - fuzzy_is
                                  - fuzzy_not
                                  title: Segment Operator
                                  description: Members who are/are not apart of a
                                    'similar subscribers' segment.
                                  example: fuzzy_is
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The id for the 'similar subscribers'
                                    segment.
                                  example: 48433
                            - type: object
                              title: Static Segment Member Segment
                              description: Segment by a given static segment.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: StaticSegment
                                  enum:
                                  - StaticSegment
                                field:
                                  type: string
                                  enum:
                                  - static_segment
                                  title: Segment Field
                                  description: Segment by a given static segment.
                                  example: static_segment
                                op:
                                  type: string
                                  enum:
                                  - static_is
                                  - static_not
                                  title: Segment Operator
                                  description: Members who are/are not apart of a
                                    static segment.
                                  example: static_is
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The id for the static segment.
                                  example: 48433
                            - type: object
                              title: Location-Based Segment
                              description: Segment by a specific country or US state.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoCountryState
                                  enum:
                                  - IPGeoCountryState
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeocountry
                                  - ipgeonotcountry
                                  - ipgeostate
                                  - ipgeonotstate
                                  title: Segment Operator
                                  description: Segment members who are within a specific
                                    country or US state.
                                  example: ipgeocountry
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The two-letter country code or US state
                                    abbreviation.
                                  example: US
                            - type: object
                              title: Geolocation Segment
                              description: Segment by a specific geographic region.
                              required:
                              - field
                              - op
                              - value
                              - addr
                              - lat
                              - lng
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoIn
                                  enum:
                                  - IPGeoIn
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeoin
                                  - ipgeonotin
                                  title: Segment Operator
                                  description: Segment members who are within a specific
                                    geographic region.
                                  example: ipgeoin
                                value:
                                  type: integer
                                  title: Segment Data
                                  description: The radius of the target location.
                                  example: 42
                                addr:
                                  type: string
                                  title: Segment Location Address
                                  description: The address of the target location.
                                  example: "Atlanta, GA, USA"
                                lat:
                                  type: string
                                  title: Segment Location Latitude
                                  description: The latitude of the target location.
                                  example: "33.7489954"
                                lng:
                                  type: string
                                  title: Segment Location Longitude
                                  description: The longitude of the target location.
                                  example: "-84.3879824"
                            - type: object
                              title: US Zip Code Segment
                              description: Segment by a specific US ZIP code.
                              required:
                              - field
                              - op
                              - value
                              - extra
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoInZip
                                  enum:
                                  - IPGeoInZip
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeoinzip
                                  title: Segment Operator
                                  description: Segment members who are within a specific
                                    US zip code.
                                  example: ipgeoinzip
                                value:
                                  type: integer
                                  title: Segment Data
                                  description: The radius of the target location.
                                  example: 25
                                extra:
                                  type: integer
                                  title: Extra Data
                                  description: The zip code to segment against.
                                  example: 30318
                            - type: object
                              title: Unknown Location-Based Segment
                              description: Segment members whose location information
                                is unknown.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoUnknown
                                  enum:
                                  - IPGeoUnknown
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeounknown
                                  title: Segment Operator
                                  description: Segment members for which location
                                    information is unknown.
                                  example: ipgeounknown
                            - type: object
                              title: Zip Code Location-Based Segment
                              description: Segment by a specific US ZIP code.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoZip
                                  enum:
                                  - IPGeoZip
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeoiszip
                                  - ipgeonotzip
                                  title: Segment Operator
                                  description: Segment members who are/are not within
                                    a specific US zip code.
                                  example: ipgeonotzip
                                value:
                                  type: integer
                                  title: Segment Data
                                  description: The 5-digit zip code.
                                  example: 30318
                            - type: object
                              title: Social Profiles Age Segment
                              description: Segment by age ranges in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialAge
                                  enum:
                                  - SocialAge
                                field:
                                  type: string
                                  enum:
                                  - social_age
                                  title: Segment Field
                                  description: Segment by age ranges in Social Profiles
                                    data.
                                  example: social_age
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Members who are/not the exact criteria
                                    listed.
                                  example: is
                                value:
                                  type: string
                                  enum:
                                  - 18-24
                                  - 25-34
                                  - 35-54
                                  - 55+
                                  title: Segment Operator
                                  description: The age range to segment.
                                  example: 35-54
                            - type: object
                              title: Social Profiles Gender Segment
                              description: Segment by listed gender in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialGender
                                  enum:
                                  - SocialGender
                                field:
                                  type: string
                                  enum:
                                  - social_gender
                                  title: Segment Field
                                  description: Segment by listed gender in Social
                                    Profiles data.
                                  example: social_gender
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Members who are/not the exact criteria
                                    listed.
                                  example: is
                                value:
                                  type: string
                                  enum:
                                  - male
                                  - female
                                  title: Segment Operator
                                  description: The Social Profiles gender to segment.
                                  example: female
                            - type: object
                              title: Social Profiles Influence Segment
                              description: Segment by influence rating in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialInfluence
                                  enum:
                                  - SocialInfluence
                                field:
                                  type: string
                                  enum:
                                  - social_influence
                                  title: Segment Field
                                  description: Segment by influence rating in Social
                                    Profiles data.
                                  example: social_influence
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: Members who have a rating that is/not
                                    or greater/less than the rating provided.
                                  example: greater
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The Social Profiles influence rating
                                    to segment.
                                  example: 2
                            - type: object
                              title: Social Profiles Social Network Segment
                              description: Segment by social network in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialNetworkMember
                                  enum:
                                  - SocialNetworkMember
                                field:
                                  type: string
                                  enum:
                                  - social_network
                                  title: Segment Field
                                  description: Segment by social network in Social
                                    Profiles data.
                                  example: social_network
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: Members who are/not on a given social
                                    network.
                                  example: member
                                value:
                                  type: string
                                  enum:
                                  - twitter
                                  - facebook
                                  - linkedin
                                  - flickr
                                  - foursquare
                                  - lastfm
                                  - myspace
                                  - quora
                                  - vimeo
                                  - yelp
                                  - youtube
                                  title: Segment Operator
                                  description: The social network to segment against.
                                  example: twitter
                            - type: object
                              title: Social Profiles Social Network Follow Segment
                              description: Segment by social network in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialNetworkFollow
                                  enum:
                                  - SocialNetworkFollow
                                field:
                                  type: string
                                  enum:
                                  - social_network
                                  title: Segment Field
                                  description: Segment by social network in Social
                                    Profiles data.
                                  example: social_network
                                op:
                                  type: string
                                  enum:
                                  - follow
                                  - notfollow
                                  title: Segment Operator
                                  description: Members who are/not following a linked
                                    account on a given social network.
                                  example: follow
                                value:
                                  type: string
                                  enum:
                                  - twitter_follow
                                  title: Segment Operator
                                  description: The social network to segment against.
                                  example: twitter_follow
                            - type: object
                              title: Address Merge Field Segment
                              description: Segment by an address-type merge field.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: AddressMerge
                                  enum:
                                  - AddressMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: An address-type merge field to segment.
                                  example: MMERGE3
                                op:
                                  type: string
                                  enum:
                                  - contains
                                  - notcontain
                                  - blank
                                  - blank_not
                                  title: Segment Operator
                                  description: Whether the member's address merge
                                    field contains/does not contain a value or is/is
                                    not blank.
                                  example: contains
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The value to segment a text merge field
                                    with.
                                  example: Atlanta
                            - type: object
                              title: Address/Zip Merge Field Segment
                              description: Segment by an address-type merge field
                                within a given distance.
                              required:
                              - field
                              - op
                              - value
                              - extra
                              properties:
                                condition_type:
                                  type: string
                                  x-value: ZipMerge
                                  enum:
                                  - ZipMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: An address or zip-type merge field
                                    to segment.
                                  example: MMERGE2
                                op:
                                  type: string
                                  enum:
                                  - geoin
                                  title: Segment Operator
                                  description: Whether the member's address merge
                                    field is within a given distance from a city or
                                    zip.
                                  example: geoin
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The distance from the city/zip.
                                  example: "25"
                                extra:
                                  type: string
                                  title: Segment Extra
                                  description: The city or the zip being used to segment
                                    against.
                                  example: "30318"
                            - type: object
                              title: Birthday Merge Field Segment
                              description: Segment by a contact's birthday.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: BirthdayMerge
                                  enum:
                                  - BirthdayMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: A date merge field to segment.
                                  example: MMERGE4
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - blank
                                  - blank_not
                                  title: Segment Operator
                                  description: Whether the member's birthday merge
                                    information is/is not a certain date or is/is
                                    not blank.
                                  example: is
                                value:
                                  type: string
                                  title: Segment Value
                                  description: A date to segment against (mm/dd).
                                  example: 01/30
                            - type: object
                              title: Date Merge Field Segment
                              description: Segment by a given date merge field.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: DateMerge
                                  enum:
                                  - DateMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: A date merge field to segment.
                                  example: MMERGE5
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - less
                                  - blank
                                  - blank_not
                                  - greater
                                  title: Segment Operator
                                  description: "Whether the member's merge information\
                                    \ is/is not, is greater/less than a value or is/is\
                                    \ not blank."
                                  example: is
                                value:
                                  type: string
                                  title: Segment Value
                                  description: A date to segment against.
                                  example: 01/30/2015
                            - type: object
                              title: Dropdown/Radio Merge Field Segment
                              description: An individual segment condition
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SelectMerge
                                  enum:
                                  - SelectMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: A merge field to segment.
                                  example: MMERGE6
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - blank
                                  - blank_not
                                  - notcontain
                                  - contains
                                  title: Segment Operator
                                  description: Whether the member's merge information
                                    is/is not a value or is/is not blank.
                                  example: is
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The value to segment a text merge field
                                    with.
                                  example: Second Choice
                            - type: object
                              title: Text or Number Merge Field Segment
                              description: Segment by a given text or number merge
                                field.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: TextMerge
                                  enum:
                                  - TextMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: A text or number merge field to segment.
                                  example: MMERGE7
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - contains
                                  - notcontain
                                  - starts
                                  - ends
                                  - greater
                                  - less
                                  - blank
                                  - blank_not
                                  title: Segment Operator
                                  description: "Whether the member's merge information\
                                    \ is/is not, contains/does not contain, starts/ends\
                                    \ with, or is greater/less than a value"
                                  example: contains
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The value to segment a text or number
                                    merge field with.
                                  example: Freddie's Jokes
                            - type: object
                              title: Email Segment
                              description: Segment by email address.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EmailAddress
                                  enum:
                                  - EmailAddress
                                field:
                                  type: string
                                  enum:
                                  - merge0
                                  - EMAIL
                                  title: Segment Field
                                  description: Segmenting based off of a subscriber's
                                    email address.
                                  example: EMAIL
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - contains
                                  - notcontain
                                  - starts
                                  - ends
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: "Whether the email address is/not exactly,\
                                    \ contains/doesn't contain, starts/ends with a\
                                    \ string."
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The value to compare the email against.
                                  example: urist.mcvankab@freddiesjokes.com
                            - type: object
                              title: Predicted Gender Segment
                              description: Segment by predicted gender.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: PredictedGender
                                  enum:
                                  - PredictedGender
                                field:
                                  type: string
                                  enum:
                                  - predicted_gender
                                  title: Segment Field
                                  description: Segment by predicted gender.
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Members who are/not the exact criteria
                                    listed.
                                  example: is
                                value:
                                  type: string
                                  enum:
                                  - male
                                  - female
                                  title: Segment Operator
                                  description: The predicted gender to segment.
                                  example: female
                            - type: object
                              title: Predicted Age Segment
                              description: Segment by predicted age.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: PredictedAge
                                  enum:
                                  - PredictedAge
                                field:
                                  type: string
                                  enum:
                                  - predicted_age_range
                                  title: Segment Field
                                  description: Segment by predicted age.
                                op:
                                  type: string
                                  enum:
                                  - is
                                  title: Segment Operator
                                  description: Members who are/not the exact criteria
                                    listed.
                                  example: is
                                value:
                                  type: string
                                  enum:
                                  - 18-24
                                  - 25-34
                                  - 35-44
                                  - 45-54
                                  - 55-64
                                  - 65+
                                  title: Segment Operator
                                  description: The predicted age to segment.
                                  example: female
                            - type: object
                              title: New Subscribers Prebuilt Segment
                              description: Segment by when people subscribed.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: NewSubscribers
                                  enum:
                                  - NewSubscribers
                                field:
                                  type: string
                                  enum:
                                  - timestamp_opt
                                  title: Segment Field
                                  description: Segment by when people subscribed.
                                op:
                                  type: string
                                  enum:
                                  - date_within
                                  title: Segment Operator
                                  description: "Whe the event took place, namely within\
                                    \ a time frame."
                                value:
                                  type: string
                                  title: Segment Data
                                  description: "What type of data to segment on: a\
                                    \ specific date, a specific campaign, or the last\
                                    \ campaign sent."
                            x-discriminator:
                              type: string
                              propertyName: condition_type
                      description: "An object representing all segmentation options.\
                        \ This object should contain a `saved_segment_id` to use an\
                        \ existing segment, or you can create a new segment by including\
                        \ both `match` and `conditions` options."
                  description: List settings for the outreach
                thumbnail:
                  type: string
                  description: The URL of the thumbnail for this outreach
            - type: object
              properties:
                email_source_name:
                  type: string
                paused_at:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
                needs_attention:
                  type: boolean
                was_canceled_by_facebook:
                  type: boolean
            - type: object
              properties:
                is_connected:
                  type: boolean
                  description: Check if this ad is connected to a facebook page
                has_audience:
                  type: boolean
                  description: Check if this ad has audience setup
                has_content:
                  type: boolean
                  description: Check if this ad has content
                channel:
                  type: object
                  properties:
                    fb_placement_feed:
                      type: boolean
                      description: Is this for facebook feed
                      example: true
                    fb_placement_audience:
                      type: boolean
                      description: Is this for facebook audience
                      example: false
                    ig_placement_feed:
                      type: boolean
                      description: Is this for instagram feed
                      example: false
                  description: Channel settings
                feedback:
                  type: object
                  properties:
                    content:
                      type: string
                      description: Feedback regarding the content of this Ad.
                    audience:
                      type: string
                      description: Feedback regarding the audience of this Ad.
                    budget:
                      type: string
                      description: Feedback regarding the budget of this Ad.
                    compliance:
                      type: string
                      description: Feedback regarding the compliance of this Ad.
                  description: Check if this ad is connected to a facebook page
                site:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of this connected site.
                      example: 43
                    name:
                      type: string
                      description: The name of the connected site
                      example: My Connected Site
                    url:
                      type: string
                      description: The URL for this connected site.
                      example: www.example.com
                  description: Connected Site
                audience:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Type of the audience
                      enum:
                      - Custom Audience
                      - Lookalike Audience
                      - Interest-based Audience
                    source_type:
                      type: string
                      description: List or Facebook based audience
                      enum:
                      - facebook
                      - list
                    email_source:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Email source name
                        type:
                          type: string
                          description: Type of the email source
                        is_segment:
                          type: boolean
                          description: Is the source reference a segment
                        segment_type:
                          type: string
                          description: Segment type if this source is tied to a segment
                        list_name:
                          type: string
                          description: Associated list name to the source
                    include_source_in_target:
                      type: boolean
                      description: To include list contacts as part of audience
                    lookalike_country_code:
                      type: string
                      description: To find similar audience in given country
                    targeting_specs:
                      type: object
                      properties:
                        gender:
                          type: integer
                        min_age:
                          type: integer
                        max_age:
                          type: integer
                        locations:
                          type: object
                          properties:
                            countries:
                              type: array
                              items:
                                type: string
                            regions:
                              type: array
                              items:
                                type: string
                            cities:
                              type: array
                              items:
                                type: string
                            zips:
                              type: array
                              items:
                                type: string
                        interests:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                  description: Audience settings
                budget:
                  type: object
                  properties:
                    duration:
                      type: integer
                      description: Duration of the ad in seconds
                      example: 86400
                    total_amount:
                      type: number
                      description: Total budget of the ad
                      example: 500.0
                    currency_code:
                      type: string
                      description: Currency code
                      example: USD
                content:
                  type: object
                  properties:
                    title:
                      type: string
                    link_url:
                      type: string
                    message:
                      type: string
                    description:
                      type: string
                    image_url:
                      type: string
                    call_to_action:
                      type: string
                    attachments:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          link_url:
                            type: string
                          description:
                            type: string
                          image_url:
                            type: string
                          call_to_action:
                            type: string
              description: A facebook ad.
            - type: object
              properties:
                _links:
                  title: Links
                  type: array
                  description: A list of link types and descriptions for the API schema
                    documents.
                  readOnly: true
                  items:
                    title: Resource Link
                    type: object
                    properties:
                      rel:
                        title: Rel
                        type: string
                        description: "As with an HTML 'rel' attribute, this describes\
                          \ the type of link."
                        readOnly: true
                      href:
                        title: Href
                        type: string
                        description: This property contains a fully-qualified URL
                          that can be called to retrieve the linked resource or perform
                          the linked action.
                        readOnly: true
                      method:
                        title: Method
                        type: string
                        description: The HTTP method that should be used when accessing
                          the URL defined in 'href'.
                        readOnly: true
                        enum:
                        - GET
                        - POST
                        - PUT
                        - PATCH
                        - DELETE
                        - OPTIONS
                        - HEAD
                      targetSchema:
                        title: Target Schema
                        type: string
                        description: "For GETs, this is a URL representing the schema\
                          \ that the response should conform to."
                        readOnly: true
                      schema:
                        title: Schema
                        type: string
                        description: "For HTTP methods that can receive bodies (POST\
                          \ and PUT), this is a URL representing the schema that the\
                          \ body should conform to."
                        readOnly: true
                    description: This object represents a link from the resource where
                      it is found to another resource or action that may be performed.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Contains an array of facebook ads.
      example:
        facebook_ads:
        - ""
        - ""
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
    inline_response_200_13:
      type: object
      properties:
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
        audience:
          $ref: '#/components/schemas/inline_response_200_11_audience'
        audience_activity:
          $ref: '#/components/schemas/inline_response_200_13_audience_activity'
        budget:
          $ref: '#/components/schemas/inline_response_200_11_budget'
        canceled_at:
          type: string
          format: date-time
        channel:
          $ref: '#/components/schemas/inline_response_200_11_channel'
        create_time:
          type: string
          format: date-time
        email_source_name:
          type: string
        end_time:
          type: string
          format: date-time
        has_segment:
          type: boolean
        id:
          type: string
          description: Unique ID of an Outreach
        name:
          type: string
          description: Title or name of an Outreach
        needs_attention:
          type: boolean
        paused_at:
          type: string
          format: date-time
        published_time:
          type: string
          format: date-time
        recipients:
          $ref: '#/components/schemas/List_10'
        report_summary:
          $ref: '#/components/schemas/inline_response_200_13_report_summary'
        show_report:
          type: boolean
          description: Outreach report availability
        start_time:
          type: string
          format: date-time
        status:
          title: Outreach status
          type: string
          description: "Campaign, Ad, or Page status"
          enum:
          - save
          - paused
          - schedule
          - sending
          - sent
          - canceled
          - canceling
          - active
          - disconnected
          - somepaused
          - draft
          - completed
          - partialRejected
          - pending
          - rejected
          - published
          - unpublished
        thumbnail:
          type: string
          description: The URL of the thumbnail for this outreach
        type:
          title: Outreach type
          type: string
          description: "Supported Campaign, Ad, Page type"
          enum:
          - regular
          - plaintext
          - rss
          - reconfirm
          - variate
          - absplit
          - automation
          - facebook
          - google
          - autoresponder
          - transactional
          - page
          - website
          - survey
        updated_at:
          type: string
          format: date-time
        was_canceled_by_facebook:
          type: boolean
        web_id:
          type: integer
          description: Web ID
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        canceled_at: 2000-01-23T04:56:07.000+00:00
        channel:
          fb_placement_feed: true
          fb_placement_audience: false
          ig_placement_feed: false
        type: regular
        show_report: true
        email_source_name: email_source_name
        paused_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        published_time: 2000-01-23T04:56:07.000+00:00
        id: id
        budget:
          duration: 86400
          total_amount: 500.0
          currency_code: USD
        has_segment: true
        audience:
          include_source_in_target: true
          email_source:
            name: name
            segment_type: segment_type
            list_name: list_name
            type: type
            is_segment: true
          targeting_specs:
            max_age: 1
            gender: 0
            locations:
              regions:
              - regions
              - regions
              cities:
              - cities
              - cities
              countries:
              - countries
              - countries
              zips:
              - zips
              - zips
            min_age: 6
            interests:
            - name: name
            - name: name
          source_type: facebook
          type: Custom Audience
          lookalike_country_code: lookalike_country_code
        thumbnail: thumbnail
        create_time: 2000-01-23T04:56:07.000+00:00
        end_time: 2000-01-23T04:56:07.000+00:00
        web_id: 1
        start_time: 2000-01-23T04:56:07.000+00:00
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - {}
            - {}
          list_id: list_id
          segment_text: segment_text
          recipient_count: 5
          list_name: list_name
          list_is_active: true
        name: name
        audience_activity:
          revenue:
          - date: date
            revenue: 1.4658129805029452
          - date: date
            revenue: 1.4658129805029452
          clicks:
          - date: date
            clicks: 0
          - date: date
            clicks: 0
          impressions:
          - date: date
            impressions: 6
          - date: date
            impressions: 6
        needs_attention: true
        report_summary:
          total_products_sold: 4
          comments: 1
          reach: 5
          click_rate: 7.061401241503109
          cost_per_click: null
          extended_at:
            datetime: datetime
            timezone: timezone
          return_on_investment: 7.457744773683766
          impressions: 5
          total_orders: 7
          first_time_buyers: 3
          shares: 6
          average_order_amount:
            amount: 1.2315135367772556
            currency_code: currency_code
          average_daily_budget: null
          unique_clicks: 9
          has_extended_ad_duration: true
          ecommerce:
            total_revenue: 2.027123023002322
            currency_code: currency_code
          clicks: 2
          likes: 1
        status: save
        was_canceled_by_facebook: true
    Merge Field Options:
      title: Merge Field Options
      type: object
      properties:
        default_country:
          title: Default Country
          type: integer
          description: "In an address field, the default country code if none supplied."
        phone_format:
          title: Phone Type
          type: string
          description: "In a phone field, the phone number type: US or International."
        date_format:
          title: Date Type
          type: string
          description: "In a date or birthday field, the format of the date."
        choices:
          title: Choices
          type: array
          description: "In a radio or dropdown non-group field, the available options\
            \ for contacts to pick from."
          example:
          - First Choice
          - Second Choice
          - Third Choice
          items:
            type: string
        size:
          title: Text Field Size
          type: integer
          description: "In a text field, the default length of the text field."
      description: Extra options for some merge field types.
      example: null
    inline_response_200_12:
      type: object
      properties:
        facebook_ads:
          type: array
          items:
            type: object
            allOf:
            - type: object
              properties:
                id:
                  type: string
                  description: Unique ID of an Outreach
                web_id:
                  type: integer
                  description: Web ID
                name:
                  type: string
                  description: Title or name of an Outreach
                type:
                  title: Outreach type
                  type: string
                  description: "Supported Campaign, Ad, Page type"
                  enum:
                  - regular
                  - plaintext
                  - rss
                  - reconfirm
                  - variate
                  - absplit
                  - automation
                  - facebook
                  - google
                  - autoresponder
                  - transactional
                  - page
                  - website
                  - survey
                status:
                  title: Outreach status
                  type: string
                  description: "Campaign, Ad, or Page status"
                  enum:
                  - save
                  - paused
                  - schedule
                  - sending
                  - sent
                  - canceled
                  - canceling
                  - active
                  - disconnected
                  - somepaused
                  - draft
                  - completed
                  - partialRejected
                  - pending
                  - rejected
                  - published
                  - unpublished
                show_report:
                  type: boolean
                  description: Outreach report availability
                create_time:
                  type: string
                  format: date-time
                start_time:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                canceled_at:
                  type: string
                  format: date-time
                published_time:
                  type: string
                  format: date-time
                has_segment:
                  type: boolean
                report_summary:
                  type: object
                  properties:
                    opens:
                      type: integer
                    unique_opens:
                      type: integer
                    open_rate:
                      type: number
                    clicks:
                      type: integer
                    subscriber_clicks:
                      type: integer
                    click_rate:
                      type: number
                    visits:
                      type: integer
                    unique_visits:
                      type: integer
                    conversion_rate:
                      type: number
                    subscribes:
                      type: integer
                    ecommerce:
                      type: object
                      properties:
                        total_revenue:
                          type: number
                        currency_code:
                          type: string
                        average_order_revenue:
                          type: number
                    impressions:
                      type: number
                    reach:
                      type: integer
                    engagements:
                      type: integer
                    total_sent:
                      type: integer
                recipients:
                  title: List
                  type: object
                  properties:
                    list_id:
                      title: List ID
                      type: string
                      description: The unique list id.
                    list_is_active:
                      title: List Status
                      type: boolean
                      description: "The status of the list used, namely if it's deleted\
                        \ or disabled."
                      readOnly: true
                    list_name:
                      title: List Name
                      type: string
                      description: The name of the list.
                      readOnly: true
                    segment_text:
                      title: Segment Text
                      type: string
                      description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
                        \ used for the campaign. Formatted as a string marked up with\
                        \ HTML."
                      readOnly: true
                    recipient_count:
                      title: Recipient Count
                      type: integer
                      description: Count of the recipients on the associated list.
                        Formatted as an integer.
                      readOnly: true
                    segment_opts:
                      title: Segment Options
                      type: object
                      properties:
                        saved_segment_id:
                          title: Saved Segment ID
                          type: integer
                          description: The id for an existing saved segment.
                        prebuilt_segment_id:
                          title: Prebuilt Segment Id
                          type: string
                          description: "The prebuilt segment id, if a prebuilt segment\
                            \ has been designated for this campaign."
                          example: subscribers-female
                        match:
                          title: Match Type
                          type: string
                          description: Segment match type.
                          enum:
                          - any
                          - all
                        conditions:
                          title: Segment Type
                          type: array
                          description: "Segment match conditions. There are multiple\
                            \ possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
                          items:
                            type: object
                            x-oneOf:
                            - type: object
                              title: Aim Segment
                              description: Segment by interaction with a specific
                                campaign.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Aim
                                  enum:
                                  - Aim
                                field:
                                  type: string
                                  enum:
                                  - aim
                                  title: Segment Field
                                  description: Segment by interaction with a specific
                                    campaign.
                                  example: aim
                                op:
                                  type: string
                                  enum:
                                  - open
                                  - click
                                  - sent
                                  - noopen
                                  - noclick
                                  - nosent
                                  title: Segment Operator
                                  description: "The status of the member with regard\
                                    \ to their campaign interaction. One of the following:\
                                    \ opened, clicked, was sent, didn't open, didn't\
                                    \ click, or was not sent."
                                  example: open
                                value:
                                  type: string
                                  title: Segment Data
                                  description: Either the web id value for a specific
                                    campaign or 'any' to account for subscribers who
                                    have/have not interacted with any campaigns.
                                  example: any
                            - type: object
                              title: Automation Segment
                              description: Segment by interaction with an Automation
                                workflow.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Automation
                                  enum:
                                  - Automation
                                field:
                                  type: string
                                  enum:
                                  - automation
                                  title: Segment Field
                                  description: Segment by interaction with an Automation
                                    workflow.
                                  example: automation
                                op:
                                  type: string
                                  enum:
                                  - started
                                  - completed
                                  - not_started
                                  - not_completed
                                  title: Segment Operator
                                  description: "The status of the member with regard\
                                    \ to the automation workflow. One of the following:\
                                    \ has started the workflow, has completed the\
                                    \ workflow, has not started the workflow, or has\
                                    \ not completed the workflow."
                                  example: started
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The web id for the automation workflow
                                    to segment against.
                                  example: "2135217"
                            - type: object
                              title: Poll Activity Segment
                              description: Segment by poll activity.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: CampaignPoll
                                  enum:
                                  - CampaignPoll
                                field:
                                  type: string
                                  enum:
                                  - poll
                                  title: Segment Field
                                  description: Segment by poll activity.
                                  example: poll
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: Members have/have not interacted with
                                    a specific poll in a Mailchimp email.
                                  example: member
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The id for the poll.
                                  example: 409
                            - type: object
                              title: Conversation Segment
                              description: Segment by interaction with a campaign
                                via Conversations.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Conversation
                                  enum:
                                  - Conversation
                                field:
                                  type: string
                                  enum:
                                  - conversation
                                  title: Segment Field
                                  description: Segment by interaction with a campaign
                                    via Conversations.
                                  example: conversation
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: "The status of a member's interaction\
                                    \ with a conversation. One of the following: has\
                                    \ replied or has not replied."
                                  example: member
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The web id value for a specific campaign
                                    or 'any' to account for subscribers who have/have
                                    not interacted with any campaigns.
                                  example: any
                            - type: object
                              title: Date Segment
                              description: Segment by a specific date field.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Date
                                  enum:
                                  - Date
                                field:
                                  type: string
                                  enum:
                                  - timestamp_opt
                                  - info_changed
                                  - ecomm_date
                                  title: Segment Field
                                  description: "The type of date field to segment\
                                    \ on: The opt-in time for a signup, the date the\
                                    \ subscriber was last updated, or the date of\
                                    \ their last ecomm purchase."
                                  example: timestamp_opt
                                op:
                                  type: string
                                  enum:
                                  - greater
                                  - less
                                  - is
                                  - not
                                  - blank
                                  - blank_not
                                  - within
                                  - notwithin
                                  title: Segment Operator
                                  description: "When the event took place:  Before,\
                                    \ after, is a specific date, is not a specific\
                                    \ date, is blank, or is not blank."
                                  example: greater
                                value:
                                  type: string
                                  title: Segment Data
                                  description: "What type of data to segment on: a\
                                    \ specific date, a specific campaign, or the last\
                                    \ campaign sent."
                                  example: date
                                extra:
                                  type: string
                                  title: Segment Extra Value
                                  description: "When segmenting on 'date' or 'campaign',\
                                    \ the date for the segment formatted as YYYY-MM-DD\
                                    \ or the web id for the campaign."
                                  example: 2015-01-30
                            - type: object
                              title: Email Client Segment
                              description: Segment by use of a particular email client.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EmailClient
                                  enum:
                                  - EmailClient
                                field:
                                  type: string
                                  enum:
                                  - email_client
                                  title: Segment Field
                                  description: Segment by use of a particular email
                                    client.
                                  example: email_client
                                op:
                                  type: string
                                  enum:
                                  - client_is
                                  - client_not
                                  title: Segment Operator
                                  description: "The operation to determine whether\
                                    \ we select clients that match the value, or clients\
                                    \ that do not match the value."
                                  example: client_is
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The name of the email client.
                                  example: Gmail
                            - type: object
                              title: Language Segment
                              description: Segment by language.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Language
                                  enum:
                                  - Language
                                field:
                                  type: string
                                  enum:
                                  - language
                                  title: Segment Field
                                  description: Segmenting based off of a subscriber's
                                    language.
                                  example: language
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Whether the member's language is or
                                    is not set to a specific language.
                                  example: is
                                value:
                                  type: string
                                  title: Segment Data
                                  description: A two-letter language identifier.
                                  example: en
                            - type: object
                              title: Member Rating Segment
                              description: Segment by member rating.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: MemberRating
                                  enum:
                                  - MemberRating
                                field:
                                  type: string
                                  enum:
                                  - rating
                                  title: Segment Field
                                  description: Segment by member rating.
                                  example: rating
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: Members who have have a rating that
                                    is/not exactly a given number or members who have
                                    a rating greater/less than a given number.
                                  example: greater
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The star rating number to segment against.
                                  example: 4
                            - type: object
                              title: Signup Source Segment
                              description: Segment by signup source.
                              required:
                              - field
                              - condition_type
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  enum:
                                  - SignupSource
                                  x-value: SignupSource
                                  title: Type
                                field:
                                  type: string
                                  enum:
                                  - source
                                  title: Segment Field
                                  example: source
                                op:
                                  type: string
                                  enum:
                                  - source_is
                                  - source_not
                                  title: Segment Operator
                                  description: Whether the member's signup source
                                    was/was not a particular value.
                                  example: source_is
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The signup source.
                                  example: List Import
                            - type: object
                              title: Survey Monkey Segment
                              description: Segment by interaction with a SurveyMonkey
                                survey.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SurveyMonkey
                                  enum:
                                  - SurveyMonkey
                                field:
                                  type: string
                                  enum:
                                  - survey_monkey
                                  title: Segment Field
                                  description: Segment by interaction with a SurveyMonkey
                                    survey.
                                  example: survey_monkey
                                op:
                                  type: string
                                  enum:
                                  - started
                                  - completed
                                  - not_started
                                  - not_completed
                                  title: Segment Operator
                                  description: "The status of the member with regard\
                                    \ to the survey.One of the following: has started\
                                    \ the survey, has completed the survey, has not\
                                    \ started the survey, or has not completed the\
                                    \ survey."
                                  example: started
                                value:
                                  type: string
                                  title: Survey ID
                                  description: The unique ID of the survey monkey
                                    survey.
                                  example: "32179586"
                            - type: object
                              title: VIP Segment
                              description: Segment by VIP status.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: VIP
                                  enum:
                                  - VIP
                                field:
                                  type: string
                                  enum:
                                  - gmonkey
                                  title: Segment Field
                                  description: Segment by VIP status.
                                  example: gmonkey
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: Whether the member is or is not marked
                                    as VIP.
                                  example: member
                            - type: object
                              title: Interests Segment
                              description: Segment by an interest group merge field.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: Interests
                                  enum:
                                  - Interests
                                field:
                                  type: string
                                  title: Segment Field
                                  description: Segmenting based on interest group
                                    information. This should start with 'interests-'
                                    followed by the grouping id. Ex. 'interests-123'.
                                  example: interests-123
                                op:
                                  type: string
                                  enum:
                                  - interestcontains
                                  - interestcontainsall
                                  - interestnotcontains
                                  title: Segment Operator
                                  description: "Whether the member is a part of one,\
                                    \ all, or none of the groups."
                                  example: interestcontains
                                value:
                                  type: array
                                  title: Segment Value
                                  description: "An array containing strings, each\
                                    \ representing a group id."
                                  items:
                                    type: string
                                    example:
                                    - "44401"
                                    - "44405"
                                    - "44409"
                            - type: object
                              title: Ecommerce Category Segment
                              description: Segment by purchases in specific items
                                or categories.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommCategory
                                  enum:
                                  - EcommCategory
                                field:
                                  type: string
                                  enum:
                                  - ecomm_cat
                                  - ecomm_prod
                                  title: Segment Field
                                  description: Segment by purchases in specific items
                                    or categories.
                                  example: ecomm_cat
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - contains
                                  - notcontain
                                  - starts
                                  - ends
                                  title: Segment Operator
                                  description: "A member who has purchased from a\
                                    \ category/specific item that is/is not a specific\
                                    \ name, where the category/item name contains/doesn't\
                                    \ contain a specific phrase or string, or a category/item\
                                    \ name that starts/ends with a string."
                                  example: is
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The ecommerce category/item information.
                                  example: Product
                            - type: object
                              title: Ecommerce Number Segment
                              description: "Segment by average spent total, number\
                                \ of orders, total number of products purchased, or\
                                \ average number of products per order."
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommNumber
                                  enum:
                                  - EcommNumber
                                field:
                                  type: string
                                  enum:
                                  - ecomm_spent_avg
                                  - ecomm_orders
                                  - ecomm_prod_all
                                  - ecomm_avg_ord
                                  title: Segment Field
                                  description: "Segment by average spent total, number\
                                    \ of orders, total number of products purchased,\
                                    \ or average number of products per order."
                                  example: ecomm_orders
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: "Members who have spent exactly, have\
                                    \ not spent exactly, spent more, or spent less\
                                    \ than the segment value."
                                  example: greater
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: "Members who have spent exactly, have\
                                    \ not spent exactly, spent more, or spent less\
                                    \ than this amount."
                                  example: 42
                            - type: object
                              title: Ecommerce Purchased Segment
                              description: Segment by whether someone has purchased
                                anything.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommPurchased
                                  enum:
                                  - EcommPurchased
                                field:
                                  type: string
                                  enum:
                                  - ecomm_purchased
                                  title: Segment Field
                                  description: Segment by whether someone has purchased
                                    anything.
                                  example: ecomm_purchased
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: Members who have have ('member') or
                                    have not ('notmember') purchased.
                                  example: member
                            - type: object
                              title: Ecommerce Spent Segment
                              description: Segment by amount spent on a single order
                                or across all orders.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommSpent
                                  enum:
                                  - EcommSpent
                                field:
                                  type: string
                                  enum:
                                  - ecomm_spent_one
                                  - ecomm_spent_all
                                  title: Segment Field
                                  description: Segment by amount spent on a single
                                    order or across all orders.
                                  example: ecomm_spent_one
                                op:
                                  type: string
                                  enum:
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: Members who have spent 'more' or 'less'
                                    than then specified value.
                                  example: greater
                                value:
                                  type: integer
                                  title: Segment Data
                                  description: The total amount a member spent.
                                  example: 42
                            - type: object
                              title: Ecommerce Purchased Store Segment
                              description: Segment by purchases from a specific store.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EcommStore
                                  enum:
                                  - EcommStore
                                field:
                                  type: string
                                  enum:
                                  - ecomm_store
                                  title: Segment Field
                                  description: Segment by purchases from a specific
                                    store.
                                  example: ecomm_store
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Members who have or have not purchased
                                    from a specific store.
                                  example: is
                                value:
                                  type: string
                                  title: Segment Operator
                                  description: The store id to segment against.
                                  example: "289"
                            - type: object
                              title: Goal Activity Segment
                              description: Segment by Goal activity.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: GoalActivity
                                  enum:
                                  - GoalActivity
                                field:
                                  type: string
                                  enum:
                                  - goal
                                  title: Segment Field
                                  description: Segment by Goal activity.
                                  example: goal
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - goal_not
                                  - contains
                                  - goal_notcontain
                                  - starts
                                  - ends
                                  title: Segment Operator
                                  description: "Whether the website URL is/not exactly,\
                                    \ contains/doesn't contain, starts with/ends with\
                                    \ a string."
                                  example: is
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The URL to check Goal activity against.
                            - type: object
                              title: Goal Timestamp Segment
                              description: Segment by most recent interaction with
                                a website.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: GoalTimestamp
                                  enum:
                                  - GoalTimestamp
                                field:
                                  type: string
                                  enum:
                                  - goal_last_visited
                                  title: Segment Field
                                  description: Segment by most recent interaction
                                    with a website.
                                  example: goal_last_visited
                                op:
                                  type: string
                                  enum:
                                  - greater
                                  - less
                                  - is
                                  title: Segment Operator
                                  description: "Whether the website activity happened\
                                    \ after, before, or at a given timestamp."
                                  example: greater
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The date to check Goal activity against.
                                  example: 2015-07-20 19:45:21
                            - type: object
                              title: Similar Subscribers Segment Member Segment
                              description: Segment by similar subscribers.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: FuzzySegment
                                  enum:
                                  - FuzzySegment
                                field:
                                  type: string
                                  enum:
                                  - fuzzy_segment
                                  title: Segment Field
                                  description: Segment by similar subscribers.
                                  example: fuzzy_segment
                                op:
                                  type: string
                                  enum:
                                  - fuzzy_is
                                  - fuzzy_not
                                  title: Segment Operator
                                  description: Members who are/are not apart of a
                                    'similar subscribers' segment.
                                  example: fuzzy_is
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The id for the 'similar subscribers'
                                    segment.
                                  example: 48433
                            - type: object
                              title: Static Segment Member Segment
                              description: Segment by a given static segment.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: StaticSegment
                                  enum:
                                  - StaticSegment
                                field:
                                  type: string
                                  enum:
                                  - static_segment
                                  title: Segment Field
                                  description: Segment by a given static segment.
                                  example: static_segment
                                op:
                                  type: string
                                  enum:
                                  - static_is
                                  - static_not
                                  title: Segment Operator
                                  description: Members who are/are not apart of a
                                    static segment.
                                  example: static_is
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The id for the static segment.
                                  example: 48433
                            - type: object
                              title: Location-Based Segment
                              description: Segment by a specific country or US state.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoCountryState
                                  enum:
                                  - IPGeoCountryState
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeocountry
                                  - ipgeonotcountry
                                  - ipgeostate
                                  - ipgeonotstate
                                  title: Segment Operator
                                  description: Segment members who are within a specific
                                    country or US state.
                                  example: ipgeocountry
                                value:
                                  type: string
                                  title: Segment Data
                                  description: The two-letter country code or US state
                                    abbreviation.
                                  example: US
                            - type: object
                              title: Geolocation Segment
                              description: Segment by a specific geographic region.
                              required:
                              - field
                              - op
                              - value
                              - addr
                              - lat
                              - lng
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoIn
                                  enum:
                                  - IPGeoIn
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeoin
                                  - ipgeonotin
                                  title: Segment Operator
                                  description: Segment members who are within a specific
                                    geographic region.
                                  example: ipgeoin
                                value:
                                  type: integer
                                  title: Segment Data
                                  description: The radius of the target location.
                                  example: 42
                                addr:
                                  type: string
                                  title: Segment Location Address
                                  description: The address of the target location.
                                  example: "Atlanta, GA, USA"
                                lat:
                                  type: string
                                  title: Segment Location Latitude
                                  description: The latitude of the target location.
                                  example: "33.7489954"
                                lng:
                                  type: string
                                  title: Segment Location Longitude
                                  description: The longitude of the target location.
                                  example: "-84.3879824"
                            - type: object
                              title: US Zip Code Segment
                              description: Segment by a specific US ZIP code.
                              required:
                              - field
                              - op
                              - value
                              - extra
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoInZip
                                  enum:
                                  - IPGeoInZip
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeoinzip
                                  title: Segment Operator
                                  description: Segment members who are within a specific
                                    US zip code.
                                  example: ipgeoinzip
                                value:
                                  type: integer
                                  title: Segment Data
                                  description: The radius of the target location.
                                  example: 25
                                extra:
                                  type: integer
                                  title: Extra Data
                                  description: The zip code to segment against.
                                  example: 30318
                            - type: object
                              title: Unknown Location-Based Segment
                              description: Segment members whose location information
                                is unknown.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoUnknown
                                  enum:
                                  - IPGeoUnknown
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeounknown
                                  title: Segment Operator
                                  description: Segment members for which location
                                    information is unknown.
                                  example: ipgeounknown
                            - type: object
                              title: Zip Code Location-Based Segment
                              description: Segment by a specific US ZIP code.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: IPGeoZip
                                  enum:
                                  - IPGeoZip
                                field:
                                  type: string
                                  enum:
                                  - ipgeo
                                  title: Segment Field
                                  description: Segmenting subscribers who are within
                                    a specific location.
                                  example: ipgeo
                                op:
                                  type: string
                                  enum:
                                  - ipgeoiszip
                                  - ipgeonotzip
                                  title: Segment Operator
                                  description: Segment members who are/are not within
                                    a specific US zip code.
                                  example: ipgeonotzip
                                value:
                                  type: integer
                                  title: Segment Data
                                  description: The 5-digit zip code.
                                  example: 30318
                            - type: object
                              title: Social Profiles Age Segment
                              description: Segment by age ranges in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialAge
                                  enum:
                                  - SocialAge
                                field:
                                  type: string
                                  enum:
                                  - social_age
                                  title: Segment Field
                                  description: Segment by age ranges in Social Profiles
                                    data.
                                  example: social_age
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Members who are/not the exact criteria
                                    listed.
                                  example: is
                                value:
                                  type: string
                                  enum:
                                  - 18-24
                                  - 25-34
                                  - 35-54
                                  - 55+
                                  title: Segment Operator
                                  description: The age range to segment.
                                  example: 35-54
                            - type: object
                              title: Social Profiles Gender Segment
                              description: Segment by listed gender in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialGender
                                  enum:
                                  - SocialGender
                                field:
                                  type: string
                                  enum:
                                  - social_gender
                                  title: Segment Field
                                  description: Segment by listed gender in Social
                                    Profiles data.
                                  example: social_gender
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Members who are/not the exact criteria
                                    listed.
                                  example: is
                                value:
                                  type: string
                                  enum:
                                  - male
                                  - female
                                  title: Segment Operator
                                  description: The Social Profiles gender to segment.
                                  example: female
                            - type: object
                              title: Social Profiles Influence Segment
                              description: Segment by influence rating in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialInfluence
                                  enum:
                                  - SocialInfluence
                                field:
                                  type: string
                                  enum:
                                  - social_influence
                                  title: Segment Field
                                  description: Segment by influence rating in Social
                                    Profiles data.
                                  example: social_influence
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: Members who have a rating that is/not
                                    or greater/less than the rating provided.
                                  example: greater
                                value:
                                  type: number
                                  title: Segment Operator
                                  description: The Social Profiles influence rating
                                    to segment.
                                  example: 2
                            - type: object
                              title: Social Profiles Social Network Segment
                              description: Segment by social network in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialNetworkMember
                                  enum:
                                  - SocialNetworkMember
                                field:
                                  type: string
                                  enum:
                                  - social_network
                                  title: Segment Field
                                  description: Segment by social network in Social
                                    Profiles data.
                                  example: social_network
                                op:
                                  type: string
                                  enum:
                                  - member
                                  - notmember
                                  title: Segment Operator
                                  description: Members who are/not on a given social
                                    network.
                                  example: member
                                value:
                                  type: string
                                  enum:
                                  - twitter
                                  - facebook
                                  - linkedin
                                  - flickr
                                  - foursquare
                                  - lastfm
                                  - myspace
                                  - quora
                                  - vimeo
                                  - yelp
                                  - youtube
                                  title: Segment Operator
                                  description: The social network to segment against.
                                  example: twitter
                            - type: object
                              title: Social Profiles Social Network Follow Segment
                              description: Segment by social network in Social Profiles
                                data.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SocialNetworkFollow
                                  enum:
                                  - SocialNetworkFollow
                                field:
                                  type: string
                                  enum:
                                  - social_network
                                  title: Segment Field
                                  description: Segment by social network in Social
                                    Profiles data.
                                  example: social_network
                                op:
                                  type: string
                                  enum:
                                  - follow
                                  - notfollow
                                  title: Segment Operator
                                  description: Members who are/not following a linked
                                    account on a given social network.
                                  example: follow
                                value:
                                  type: string
                                  enum:
                                  - twitter_follow
                                  title: Segment Operator
                                  description: The social network to segment against.
                                  example: twitter_follow
                            - type: object
                              title: Address Merge Field Segment
                              description: Segment by an address-type merge field.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: AddressMerge
                                  enum:
                                  - AddressMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: An address-type merge field to segment.
                                  example: MMERGE3
                                op:
                                  type: string
                                  enum:
                                  - contains
                                  - notcontain
                                  - blank
                                  - blank_not
                                  title: Segment Operator
                                  description: Whether the member's address merge
                                    field contains/does not contain a value or is/is
                                    not blank.
                                  example: contains
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The value to segment a text merge field
                                    with.
                                  example: Atlanta
                            - type: object
                              title: Address/Zip Merge Field Segment
                              description: Segment by an address-type merge field
                                within a given distance.
                              required:
                              - field
                              - op
                              - value
                              - extra
                              properties:
                                condition_type:
                                  type: string
                                  x-value: ZipMerge
                                  enum:
                                  - ZipMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: An address or zip-type merge field
                                    to segment.
                                  example: MMERGE2
                                op:
                                  type: string
                                  enum:
                                  - geoin
                                  title: Segment Operator
                                  description: Whether the member's address merge
                                    field is within a given distance from a city or
                                    zip.
                                  example: geoin
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The distance from the city/zip.
                                  example: "25"
                                extra:
                                  type: string
                                  title: Segment Extra
                                  description: The city or the zip being used to segment
                                    against.
                                  example: "30318"
                            - type: object
                              title: Birthday Merge Field Segment
                              description: Segment by a contact's birthday.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: BirthdayMerge
                                  enum:
                                  - BirthdayMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: A date merge field to segment.
                                  example: MMERGE4
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - blank
                                  - blank_not
                                  title: Segment Operator
                                  description: Whether the member's birthday merge
                                    information is/is not a certain date or is/is
                                    not blank.
                                  example: is
                                value:
                                  type: string
                                  title: Segment Value
                                  description: A date to segment against (mm/dd).
                                  example: 01/30
                            - type: object
                              title: Date Merge Field Segment
                              description: Segment by a given date merge field.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: DateMerge
                                  enum:
                                  - DateMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: A date merge field to segment.
                                  example: MMERGE5
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - less
                                  - blank
                                  - blank_not
                                  - greater
                                  title: Segment Operator
                                  description: "Whether the member's merge information\
                                    \ is/is not, is greater/less than a value or is/is\
                                    \ not blank."
                                  example: is
                                value:
                                  type: string
                                  title: Segment Value
                                  description: A date to segment against.
                                  example: 01/30/2015
                            - type: object
                              title: Dropdown/Radio Merge Field Segment
                              description: An individual segment condition
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: SelectMerge
                                  enum:
                                  - SelectMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: A merge field to segment.
                                  example: MMERGE6
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - blank
                                  - blank_not
                                  - notcontain
                                  - contains
                                  title: Segment Operator
                                  description: Whether the member's merge information
                                    is/is not a value or is/is not blank.
                                  example: is
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The value to segment a text merge field
                                    with.
                                  example: Second Choice
                            - type: object
                              title: Text or Number Merge Field Segment
                              description: Segment by a given text or number merge
                                field.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: TextMerge
                                  enum:
                                  - TextMerge
                                field:
                                  type: string
                                  title: Segment Field
                                  description: A text or number merge field to segment.
                                  example: MMERGE7
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - contains
                                  - notcontain
                                  - starts
                                  - ends
                                  - greater
                                  - less
                                  - blank
                                  - blank_not
                                  title: Segment Operator
                                  description: "Whether the member's merge information\
                                    \ is/is not, contains/does not contain, starts/ends\
                                    \ with, or is greater/less than a value"
                                  example: contains
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The value to segment a text or number
                                    merge field with.
                                  example: Freddie's Jokes
                            - type: object
                              title: Email Segment
                              description: Segment by email address.
                              required:
                              - field
                              - op
                              properties:
                                condition_type:
                                  type: string
                                  x-value: EmailAddress
                                  enum:
                                  - EmailAddress
                                field:
                                  type: string
                                  enum:
                                  - merge0
                                  - EMAIL
                                  title: Segment Field
                                  description: Segmenting based off of a subscriber's
                                    email address.
                                  example: EMAIL
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  - contains
                                  - notcontain
                                  - starts
                                  - ends
                                  - greater
                                  - less
                                  title: Segment Operator
                                  description: "Whether the email address is/not exactly,\
                                    \ contains/doesn't contain, starts/ends with a\
                                    \ string."
                                value:
                                  type: string
                                  title: Segment Value
                                  description: The value to compare the email against.
                                  example: urist.mcvankab@freddiesjokes.com
                            - type: object
                              title: Predicted Gender Segment
                              description: Segment by predicted gender.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: PredictedGender
                                  enum:
                                  - PredictedGender
                                field:
                                  type: string
                                  enum:
                                  - predicted_gender
                                  title: Segment Field
                                  description: Segment by predicted gender.
                                op:
                                  type: string
                                  enum:
                                  - is
                                  - not
                                  title: Segment Operator
                                  description: Members who are/not the exact criteria
                                    listed.
                                  example: is
                                value:
                                  type: string
                                  enum:
                                  - male
                                  - female
                                  title: Segment Operator
                                  description: The predicted gender to segment.
                                  example: female
                            - type: object
                              title: Predicted Age Segment
                              description: Segment by predicted age.
                              required:
                              - field
                              - op
                              - value
                              properties:
                                condition_type:
                                  type: string
                                  x-value: PredictedAge
                                  enum:
                                  - PredictedAge
                                field:
                                  type: string
                                  enum:
                                  - predicted_age_range
                                  title: Segment Field
                                  description: Segment by predicted age.
                                op:
                                  type: string
                                  enum:
                                  - is
                                  title: Segment Operator
                                  description: Members who are/not the exact criteria
                                    listed.
                                  example: is
                                value:
                                  type: string
                                  enum:
                                  - 18-24
                                  - 25-34
                                  - 35-44
                                  - 45-54
                                  - 55-64
                                  - 65+
                                  title: Segment Operator
                                  description: The predicted age to segment.
                                  example: female
                            - type: object
                              title: New Subscribers Prebuilt Segment
                              description: Segment by when people subscribed.
                              properties:
                                condition_type:
                                  type: string
                                  x-value: NewSubscribers
                                  enum:
                                  - NewSubscribers
                                field:
                                  type: string
                                  enum:
                                  - timestamp_opt
                                  title: Segment Field
                                  description: Segment by when people subscribed.
                                op:
                                  type: string
                                  enum:
                                  - date_within
                                  title: Segment Operator
                                  description: "Whe the event took place, namely within\
                                    \ a time frame."
                                value:
                                  type: string
                                  title: Segment Data
                                  description: "What type of data to segment on: a\
                                    \ specific date, a specific campaign, or the last\
                                    \ campaign sent."
                            x-discriminator:
                              type: string
                              propertyName: condition_type
                      description: "An object representing all segmentation options.\
                        \ This object should contain a `saved_segment_id` to use an\
                        \ existing segment, or you can create a new segment by including\
                        \ both `match` and `conditions` options."
                  description: List settings for the outreach
                thumbnail:
                  type: string
                  description: The URL of the thumbnail for this outreach
            - type: object
              properties:
                email_source_name:
                  type: string
                paused_at:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
                needs_attention:
                  type: boolean
                was_canceled_by_facebook:
                  type: boolean
            - type: object
              properties:
                channel:
                  type: object
                  properties:
                    fb_placement_feed:
                      type: boolean
                      description: Is this for facebook feed
                      example: true
                    fb_placement_audience:
                      type: boolean
                      description: Is this for facebook audience
                      example: false
                    ig_placement_feed:
                      type: boolean
                      description: Is this for instagram feed
                      example: false
                  description: Channel settings
                audience:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Type of the audience
                      enum:
                      - Custom Audience
                      - Lookalike Audience
                      - Interest-based Audience
                    source_type:
                      type: string
                      description: List or Facebook based audience
                      enum:
                      - facebook
                      - list
                    email_source:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Email source name
                        type:
                          type: string
                          description: Type of the email source
                        is_segment:
                          type: boolean
                          description: Is the source reference a segment
                        segment_type:
                          type: string
                          description: Segment type if this source is tied to a segment
                        list_name:
                          type: string
                          description: Associated list name to the source
                    include_source_in_target:
                      type: boolean
                      description: To include list contacts as part of audience
                    lookalike_country_code:
                      type: string
                      description: To find similar audience in given country
                    targeting_specs:
                      type: object
                      properties:
                        gender:
                          type: integer
                        min_age:
                          type: integer
                        max_age:
                          type: integer
                        locations:
                          type: object
                          properties:
                            countries:
                              type: array
                              items:
                                type: string
                            regions:
                              type: array
                              items:
                                type: string
                            cities:
                              type: array
                              items:
                                type: string
                            zips:
                              type: array
                              items:
                                type: string
                        interests:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                  description: Audience settings
                budget:
                  type: object
                  properties:
                    duration:
                      type: integer
                      description: Duration of the ad in seconds
                      example: 86400
                    total_amount:
                      type: number
                      description: Total budget of the ad
                      example: 500.0
                    currency_code:
                      type: string
                      description: Currency code
                      example: USD
                report_summary:
                  type: object
                  properties:
                    reach:
                      type: integer
                    impressions:
                      type: integer
                    clicks:
                      type: integer
                    click_rate:
                      type: number
                    unique_clicks:
                      type: integer
                    first_time_buyers:
                      type: integer
                    ecommerce:
                      type: object
                      properties:
                        total_revenue:
                          type: number
                        currency_code:
                          type: string
                    total_products_sold:
                      type: integer
                    total_orders:
                      type: integer
                    average_order_amount:
                      type: object
                      properties:
                        amount:
                          type: number
                        currency_code:
                          type: string
                    cost_per_click:
                      type: object
                      properties:
                        amount:
                          type: number
                        currency_code:
                          type: string
                    average_daily_budget:
                      type: object
                      properties:
                        amount:
                          type: number
                        currency_code:
                          type: string
                    likes:
                      type: integer
                    comments:
                      type: integer
                    shares:
                      type: integer
                    has_extended_ad_duration:
                      type: boolean
                    extended_at:
                      type: object
                      properties:
                        datetime:
                          type: string
                        timezone:
                          type: string
                    return_on_investment:
                      type: number
                  description: Report summary of facebook ad
                audience_activity:
                  type: object
                  properties:
                    clicks:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                          clicks:
                            type: integer
                    impressions:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                          impressions:
                            type: integer
                    revenue:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                          revenue:
                            type: number
            - type: object
              properties:
                _links:
                  title: Links
                  type: array
                  description: A list of link types and descriptions for the API schema
                    documents.
                  readOnly: true
                  items:
                    title: Resource Link
                    type: object
                    properties:
                      rel:
                        title: Rel
                        type: string
                        description: "As with an HTML 'rel' attribute, this describes\
                          \ the type of link."
                        readOnly: true
                      href:
                        title: Href
                        type: string
                        description: This property contains a fully-qualified URL
                          that can be called to retrieve the linked resource or perform
                          the linked action.
                        readOnly: true
                      method:
                        title: Method
                        type: string
                        description: The HTTP method that should be used when accessing
                          the URL defined in 'href'.
                        readOnly: true
                        enum:
                        - GET
                        - POST
                        - PUT
                        - PATCH
                        - DELETE
                        - OPTIONS
                        - HEAD
                      targetSchema:
                        title: Target Schema
                        type: string
                        description: "For GETs, this is a URL representing the schema\
                          \ that the response should conform to."
                        readOnly: true
                      schema:
                        title: Schema
                        type: string
                        description: "For HTTP methods that can receive bodies (POST\
                          \ and PUT), this is a URL representing the schema that the\
                          \ body should conform to."
                        readOnly: true
                    description: This object represents a link from the resource where
                      it is found to another resource or action that may be performed.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of Facebook ads.
      example:
        facebook_ads:
        - ""
        - ""
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 0
    Shipping Address:
      title: Shipping Address
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The name associated with an order's shipping address.
          example: Freddie Chimpenheimer
        address1:
          title: Address Field 1
          type: string
          description: The shipping address for the order.
          example: 675 Ponce de Leon Ave NE
        address2:
          title: Address Field 2
          type: string
          description: An additional field for the shipping address.
          example: Suite 5000
        city:
          title: 'City '
          type: string
          description: The city in the order's shipping address.
          example: Atlanta
        province:
          title: Province
          type: string
          description: The state or normalized province in the order's shipping address.
          example: Georgia
        province_code:
          title: Province Code
          type: string
          description: The two-letter code for the province or state in the shipping
            address.
          example: GA
        postal_code:
          title: Postal Code
          type: string
          description: The postal or zip code in the shipping address.
          example: "30308"
        country:
          title: Country Code
          type: string
          description: The country in the shipping address.
          example: United States
        country_code:
          title: Country Code
          type: string
          description: The two-letter code for the country in the shipping address.
          example: US
        longitude:
          title: Longitude
          type: number
          description: The longitude for the shipping address location.
          example: -75.68903
        latitude:
          title: Latitude
          type: number
          description: The latitude for the shipping address location.
          example: 45.427408
        phone:
          title: Phone Number
          type: string
          description: The phone number for the order's shipping address.
          example: "8675309"
        company:
          title: Company
          type: string
          description: The company associated with the shipping address.
      description: The shipping address for the order.
      example: null
    inline_response_200_18:
      type: object
      properties:
        responses:
          title: Responses
          type: array
          description: An array of responses to a survey.
          items:
            $ref: '#/components/schemas/Survey Respondents'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        responses:
        - submitted_at: 2000-01-23T04:56:07.000+00:00
          response_id: response_id
          contact:
            email_id: email_id
            full_name: full_name
            avatar_url: avatar_url
            contact_id: contact_id
            email: email
            status: Subscribed
            consents_to_one_to_one_messaging: true
          is_new_contact: true
        - submitted_at: 2000-01-23T04:56:07.000+00:00
          response_id: response_id
          contact:
            email_id: email_id
            full_name: full_name
            avatar_url: avatar_url
            contact_id: contact_id
            email: email
            status: Subscribed
            consents_to_one_to_one_messaging: true
          is_new_contact: true
        total_items: 0
    Batch addremove List members tofrom static segment_errors:
      type: object
      properties:
        email_addresses:
          title: Email addresses added to the static segment or removed
          type: array
          description: Email addresses added to the static segment or removed
          items:
            type: string
        error:
          title: Error message
          type: string
          description: The error message indicating why the email addresses could
            not be added or updated.
      example:
        email_addresses:
        - email_addresses
        - email_addresses
        error: error
    Ecommerce Promo Code_1:
      title: E-commerce Promo Code
      type: object
      properties:
        id:
          title: Promo Code Foreign ID
          type: string
          description: A unique identifier for the promo Code.
          readOnly: true
        code:
          title: Promo Code
          type: string
          description: The discount code. Restricted to UTF-8 characters with max
            length 50.
          example: summersale
        redemption_url:
          title: Redemption Url
          type: string
          description: The url that should be used in the promotion campaign restricted
            to UTF-8 characters with max length 2000.
          example: A url that applies promo code directly at checkout or a url that
            points to sale page or store url
        usage_count:
          title: Promo Code Usage Count
          type: integer
          description: Number of times promo code has been used.
        enabled:
          title: Enabled
          type: boolean
          description: Whether the promo code is currently enabled.
          example: true
        created_at_foreign:
          title: Foreign Create Time
          type: string
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about an Ecommerce Store's specific Promo Code
      example:
        usage_count: 0
        code: summersale
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
        created_at_foreign: 2000-01-23T04:56:07.000+00:00
        updated_at_foreign: 2000-01-23T04:56:07.000+00:00
        redemption_url: A url that applies promo code directly at checkout or a url
          that points to sale page or store url
        enabled: true
    inline_response_200_15:
      type: object
      properties:
        surveys:
          title: Surveys
          type: array
          description: The surveys that have reports available.
          items:
            $ref: '#/components/schemas/Survey Report_1'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        surveys:
        - list_id: list_id
          updated_at: 2017-08-04T11:09:01Z
          created_at: 2017-08-04T11:09:01Z
          total_responses: 810
          id: 040d2c2e1f0
          web_id: 165
          list_name: list_name
          title: New product ideas
          published_at: 2017-08-04T11:09:01Z
          url: url
          status: published
        - list_id: list_id
          updated_at: 2017-08-04T11:09:01Z
          created_at: 2017-08-04T11:09:01Z
          total_responses: 810
          id: 040d2c2e1f0
          web_id: 165
          list_name: list_name
          title: New product ideas
          published_at: 2017-08-04T11:09:01Z
          url: url
          status: published
        total_items: 0
    Ecommerce Promo Code_2:
      title: E-commerce Promo Code
      type: object
      properties:
        code:
          title: Promo Code
          type: string
          description: The discount code. Restricted to UTF-8 characters with max
            length 50.
          example: summersale
        redemption_url:
          title: Redemption Url
          type: string
          description: The url that should be used in the promotion campaign restricted
            to UTF-8 characters with max length 2000.
          example: A url that applies promo code directly at checkout or a url that
            points to sale page or store url
        usage_count:
          title: Promo Code Usage Count
          type: integer
          description: Number of times promo code has been used.
        enabled:
          title: Enabled
          type: boolean
          description: Whether the promo code is currently enabled.
          example: true
        created_at_foreign:
          title: Foreign Create Time
          type: string
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
      description: Information about an Ecommerce Store's specific Promo Code.
    inline_response_200_14:
      type: object
      properties:
        landing_pages:
          type: array
          items:
            $ref: '#/components/schemas/Landing Page Report_1'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of landing pages.
      example:
        _links:
        - null
        - null
        landing_pages:
        - unique_visits: 6
          subscribes: 1
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 33345484
          list_name: Test List
          title: title
          url: url
          signup_tags:
          - tag_name: tag_name
            tag_id: 3
          - tag_name: tag_name
            tag_id: 3
          visits: 0
          timeseries:
            daily_stats:
              unique_visits:
              - date: 2018-04-25
                val: 1
              - date: 2018-04-25
                val: 1
              visits:
              - date: 2018-04-25
                val: 11
              - date: 2018-04-25
                val: 11
              clicks:
              - date: 2018-04-25
                val: 13
              - date: 2018-04-25
                val: 13
            weekly_stats:
              unique_visits:
              - null
              - null
              visits:
              - date: 2018-04-25
                val: 49
              - date: 2018-04-25
                val: 49
              clicks:
              - date: 2018-04-25
                val: 23
              - date: 2018-04-25
                val: 23
          ecommerce:
            average_order_revenue: 9.301444243932576
            total_revenue: 2.3021358869347655
            total_orders: 7
            currency_code: currency_code
          name: name
          clicks: 5
          id: 00dfc2e1f0
          published_at: 2000-01-23T04:56:07.000+00:00
          conversion_rate: 5.637376656633329
          unpublished_at: 2000-01-23T04:56:07.000+00:00
          status: status
        - unique_visits: 6
          subscribes: 1
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 33345484
          list_name: Test List
          title: title
          url: url
          signup_tags:
          - tag_name: tag_name
            tag_id: 3
          - tag_name: tag_name
            tag_id: 3
          visits: 0
          timeseries:
            daily_stats:
              unique_visits:
              - date: 2018-04-25
                val: 1
              - date: 2018-04-25
                val: 1
              visits:
              - date: 2018-04-25
                val: 11
              - date: 2018-04-25
                val: 11
              clicks:
              - date: 2018-04-25
                val: 13
              - date: 2018-04-25
                val: 13
            weekly_stats:
              unique_visits:
              - null
              - null
              visits:
              - date: 2018-04-25
                val: 49
              - date: 2018-04-25
                val: 49
              clicks:
              - date: 2018-04-25
                val: 23
              - date: 2018-04-25
                val: 23
          ecommerce:
            average_order_revenue: 9.301444243932576
            total_revenue: 2.3021358869347655
            total_orders: 7
            currency_code: currency_code
          name: name
          clicks: 5
          id: 00dfc2e1f0
          published_at: 2000-01-23T04:56:07.000+00:00
          conversion_rate: 5.637376656633329
          unpublished_at: 2000-01-23T04:56:07.000+00:00
          status: status
        total_items: 2
    inline_response_200_17:
      type: object
      properties:
        answers:
          title: Answers
          type: array
          description: An array of answers for a question on the survey.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        answers: ""
        total_items: 0
    Ecommerce Promo Code_3:
      title: E-commerce Promo Code
      type: object
      properties:
        id:
          title: Promo Code Foreign ID
          type: string
          description: A unique identifier for the promo Code.
          readOnly: true
        code:
          title: Promo Code
          type: string
          description: The discount code. Restricted to UTF-8 characters with max
            length 50.
          example: summersale
        redemption_url:
          title: Redemption Url
          type: string
          description: The url that should be used in the promotion campaign restricted
            to UTF-8 characters with max length 2000.
          example: A url that applies promo code directly at checkout or a url that
            points to sale page or store url
        usage_count:
          title: Promo Code Usage Count
          type: integer
          description: Number of times promo code has been used.
        enabled:
          title: Enabled
          type: boolean
          description: Whether the promo code is currently enabled.
          example: true
        created_at_foreign:
          title: Foreign Create Time
          type: string
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about an Ecommerce Store's specific Promo Code
      example:
        usage_count: 0
        code: summersale
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
        created_at_foreign: 2000-01-23T04:56:07.000+00:00
        updated_at_foreign: 2000-01-23T04:56:07.000+00:00
        redemption_url: A url that applies promo code directly at checkout or a url
          that points to sale page or store url
        enabled: true
    inline_response_200_13_audience_activity_impressions:
      type: object
      properties:
        date:
          type: string
        impressions:
          type: integer
      example:
        date: date
        impressions: 6
    inline_response_200_16:
      type: object
      properties:
        questions:
          title: Question Reports
          type: array
          description: An array of reports for each question on the survey.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        questions: ""
        total_items: 0
    AB Split Stats:
      title: A/B Split Stats
      type: object
      properties:
        a:
          $ref: '#/components/schemas/Campaign A'
        b:
          $ref: '#/components/schemas/Campaign B'
      description: General stats about different groups of an A/B Split campaign.
        Does not return information about Multivariate Campaigns.
      example:
        a:
          forwards: 5
          unsubs: 6
          opens: 3
          bounces: 1
          recipient_clicks: 6
          forwards_opens: 6
          last_open: last_open
          abuse_reports: 2
          unique_opens: 3
        b:
          forwards: 0
          unsubs: 7
          opens: 8
          bounces: 7
          recipient_clicks: 6
          forwards_opens: 4
          last_open: last_open
          abuse_reports: 0
          unique_opens: 7
    Automation Campaign Settings_1:
      title: Automation Campaign Settings
      type: object
      properties:
        title:
          title: Automation Title
          type: string
          description: The title of the Automation.
        from_name:
          title: From Name
          type: string
          description: The 'from' name for the Automation (not an email address).
        reply_to:
          title: Reply To Address
          type: string
          description: The reply-to email address for the Automation.
        use_conversation:
          title: Conversations
          type: boolean
          description: Whether to use Mailchimp Conversation feature to manage replies
        to_name:
          title: To Name
          type: string
          description: "The Automation's custom 'To' name, typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        authenticate:
          title: Authentication
          type: boolean
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the Automation. Defaults to `true`."
        auto_footer:
          title: Auto-Footer
          type: boolean
          description: "Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the Automation."
        inline_css:
          title: Inline CSS
          type: boolean
          description: Whether to automatically inline the CSS included with the Automation
            content.
      description: The settings for the Automation workflow.
      example:
        auto_footer: true
        use_conversation: true
        authenticate: true
        reply_to: reply_to
        to_name: to_name
        inline_css: true
        title: title
        from_name: from_name
    Collection Authorization:
      title: Collection Authorization
      required:
      - max_instances
      - may_create
      type: object
      properties:
        may_create:
          title: Resource creation authorization
          type: boolean
          description: May the user create additional instances of this resource?
        max_instances:
          title: Max instances
          type: integer
          description: "How many total instances of this resource are allowed? This\
            \ is independent of any filter conditions applied to the query. As a special\
            \ case, -1 indicates unlimited."
        current_total_instances:
          title: Current total instances
          type: integer
          description: "How many total instances of this resource are already in use?\
            \ This is independent of any filter conditions applied to the query. Value\
            \ may be larger than max_instances. As a special case, -1 is returned\
            \ when access is unlimited."
      description: Do particular authorization constraints around this collection
        limit creation of new instances?
      example:
        may_create: true
        current_total_instances: 4
        max_instances: 1
    Growth History:
      title: Growth History
      type: object
      properties:
        history:
          title: Members
          type: array
          description: "An array of objects, each representing a monthly growth report\
            \ for a list."
          items:
            $ref: '#/components/schemas/Growth History_2'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A month-by-month summary of a specific list's growth activity.
      example:
        list_id: list_id
        _links:
        - null
        - null
        history:
        - imports: 6
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          pending: 9
          reconfirm: 2
          existing: 0
          optins: 1
          subscribed: 5
          unsubscribed: 5
          deleted: 3
          month: month
          cleaned: 7
          transactional: 2
        - imports: 6
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          pending: 9
          reconfirm: 2
          existing: 0
          optins: 1
          subscribed: 5
          unsubscribed: 5
          deleted: 3
          month: month
          cleaned: 7
          transactional: 2
        total_items: 4
    List Members:
      title: List Members
      type: object
      properties:
        id:
          title: Email ID
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        unique_email_id:
          title: Unique Email ID
          type: string
          description: An identifier for the address across all of Mailchimp.
          readOnly: true
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        stats:
          $ref: '#/components/schemas/Subscriber Stats'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
          readOnly: true
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          readOnly: true
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
          readOnly: true
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          readOnly: true
        member_rating:
          title: Member Rating
          type: integer
          description: "Star rating for this member, between 1 and 5."
          readOnly: true
        last_changed:
          title: Last Changed Date
          type: string
          description: The date and time the member's info was last changed in ISO
            8601 format.
          format: date-time
          readOnly: true
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        email_client:
          title: Email Client
          type: string
          description: The list member's email client.
          readOnly: true
        location:
          $ref: '#/components/schemas/Location_1'
        last_note:
          $ref: '#/components/schemas/Notes'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      example:
        email_type: email_type
        list_id: list_id
        timestamp_opt: 2000-01-23T04:56:07.000+00:00
        last_note:
          note_id: 9
          note: note
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        timestamp_signup: 2000-01-23T04:56:07.000+00:00
        ip_signup: ip_signup
        member_rating: 0
        language: language
        unique_email_id: unique_email_id
        email_address: email_address
        email_client: email_client
        stats:
          avg_click_rate: 6.027456183070403
          avg_open_rate: 0.8008281904610115
        ip_opt: ip_opt
        location:
          country_code: country_code
          dstoff: 7
          timezone: timezone
          latitude: 5.962133916683182
          gmtoff: 2
          longitude: 5.637376656633329
        id: id
        interests:
          key: true
        vip: true
        status: subscribed
        last_changed: 2000-01-23T04:56:07.000+00:00
    Interest Category_3:
      title: Interest Category
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id for the category.
          readOnly: true
        id:
          title: Category ID
          type: string
          description: The id for the interest category.
          readOnly: true
        title:
          title: Name
          type: string
          description: The text description of this category. This field appears on
            signup forms and is often phrased as a question.
        display_order:
          title: Display Order
          type: integer
          description: The order that the categories are displayed in the list. Lower
            numbers display first.
        type:
          title: Display Type
          type: string
          description: Determines how this category’s interests appear on signup forms.
          enum:
          - checkboxes
          - dropdown
          - radio
          - hidden
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "Interest categories organize interests, which are used to group\
        \ subscribers based on their preferences. These correspond to Group Titles\
        \ the application."
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        display_order: 0
        id: id
        title: title
        type: checkboxes
    Tracked Conversations:
      title: Tracked Conversations
      type: object
      properties:
        conversations:
          title: Conversations
          type: array
          description: A list of conversations.
          items:
            $ref: '#/components/schemas/Conversation_1'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of this account's tracked conversations.
      example:
        _links:
        - null
        - null
        conversations:
        - from_email: from_email
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          subject: subject
          unread_messages: 6
          last_message:
            from_email: from_email
            read: true
            subject: subject
            message: message
            from_label: from_label
            timestamp: 2000-01-23T04:56:07.000+00:00
          id: id
          message_count: 0
          from_label: from_label
          campaign_id: campaign_id
        - from_email: from_email
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          subject: subject
          unread_messages: 6
          last_message:
            from_email: from_email
            read: true
            subject: subject
            message: message
            from_label: from_label
            timestamp: 2000-01-23T04:56:07.000+00:00
          id: id
          message_count: 0
          from_label: from_label
          campaign_id: campaign_id
        total_items: 1
    Ecommerce Cart:
      title: E-commerce Cart
      required:
      - currency_code
      - customer
      - id
      - lines
      - order_total
      type: object
      properties:
        id:
          title: Cart Foreign ID
          type: string
          description: A unique identifier for the cart.
        customer:
          $ref: '#/components/schemas/Ecommerce Customer'
        campaign_id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies the campaign for a cart.
          example: 839488a60b
        checkout_url:
          title: Checkout URL
          type: string
          description: "The URL for the cart. This parameter is required for [Abandoned\
            \ Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations."
        currency_code:
          title: Currency Code
          type: string
          description: The three-letter ISO 4217 code for the currency that the cart
            uses.
        order_total:
          title: Order Total
          type: number
          description: The order total for the cart.
        tax_total:
          title: Tax Total
          type: number
          description: The total tax for the cart.
        lines:
          title: Cart Line Items
          type: array
          description: An array of the cart's line items.
          items:
            $ref: '#/components/schemas/Ecommerce Cart Line Item'
      description: Information about a specific cart.
    Gallery Folder_2:
      title: Gallery Folder
      required:
      - name
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
      description: An individual folder listed in the File Manager.
    Interest Category_1:
      title: Interest Category
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id for the category.
          readOnly: true
        id:
          title: Category ID
          type: string
          description: The id for the interest category.
          readOnly: true
        title:
          title: Name
          type: string
          description: The text description of this category. This field appears on
            signup forms and is often phrased as a question.
        display_order:
          title: Display Order
          type: integer
          description: The order that the categories are displayed in the list. Lower
            numbers display first.
        type:
          title: Display Type
          type: string
          description: Determines how this category’s interests appear on signup forms.
          enum:
          - checkboxes
          - dropdown
          - radio
          - hidden
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "Interest categories organize interests, which are used to group\
        \ subscribers based on their preferences. These correspond to Group Titles\
        \ the application."
      example:
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        display_order: 0
        id: id
        title: title
        type: checkboxes
    Campaign Content_variate_contents:
      type: object
      properties:
        content_label:
          title: Content Label
          type: string
          description: Label used to identify the content option.
          example: Green header
        plain_text:
          title: Plain Text
          type: string
          description: "The plain-text portion of the campaign. If left unspecified,\
            \ we'll generate this automatically."
        html:
          title: Campaign HTML
          type: string
          description: The raw HTML for the campaign.
          example: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
            \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
            \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
            \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
      example:
        content_label: Green header
        plain_text: plain_text
        html: "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta\
          \ http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style\
          \ type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0\
          \ marginwidth=0 topmargin=0 marginheight=0 offset=0>"
    Gallery Folder_1:
      title: Gallery Folder
      type: object
      properties:
        id:
          title: Folder ID
          type: integer
          description: The unique id for the folder.
          readOnly: true
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
        file_count:
          title: File Count
          type: integer
          description: The number of files in the folder.
          readOnly: true
        created_at:
          title: Created Date
          type: string
          description: The date and time a file was added to the File Manager in ISO
            8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Created By
          type: string
          description: The username of the profile that created the folder.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An individual folder listed in the File Manager.
      example:
        file_count: 6
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        created_by: created_by
    Interest Category_2:
      title: Interest Category
      required:
      - title
      - type
      type: object
      properties:
        title:
          title: Name
          type: string
          description: The text description of this category. This field appears on
            signup forms and is often phrased as a question.
        display_order:
          title: Display Order
          type: integer
          description: The order that the categories are displayed in the list. Lower
            numbers display first.
        type:
          title: Display Type
          type: string
          description: Determines how this category’s interests appear on signup forms.
          enum:
          - checkboxes
          - dropdown
          - radio
          - hidden
      description: "Interest categories organize interests, which are used to group\
        \ subscribers based on their preferences. These correspond to Group Titles\
        \ the application."
    Add List Members:
      title: Add List Members
      type: object
      properties:
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        location:
          $ref: '#/components/schemas/Location'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscribe confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      example: null
    API Root:
      title: API Root
      type: object
      properties:
        account_id:
          title: Account ID
          type: string
          description: The Mailchimp account ID.
          readOnly: true
        login_id:
          title: Login ID
          type: string
          description: "The ID associated with the user who owns this API key. If\
            \ you can login to multiple accounts, this ID will be the same for each\
            \ account."
          readOnly: true
        account_name:
          title: Account Name
          type: string
          description: The name of the account.
          readOnly: true
        email:
          title: Account Email
          type: string
          description: The account email address.
          readOnly: true
        first_name:
          title: First Name
          type: string
          description: The first name tied to the account.
          readOnly: true
        last_name:
          title: Last Name
          type: string
          description: The last name tied to the account.
          readOnly: true
        username:
          title: User Name
          type: string
          description: The username tied to the account.
          readOnly: true
          example: freddie2000
        avatar_url:
          title: Avatar URL
          type: string
          description: URL of the avatar for the user.
          readOnly: true
        role:
          title: Role
          type: string
          description: "The [user role](https://mailchimp.com/help/manage-user-levels-in-your-account/)\
            \ for the account."
          readOnly: true
        member_since:
          title: Account Creation Date
          type: string
          description: The date and time that the account was created in ISO 8601
            format.
          format: date-time
          readOnly: true
          example: 2010-01-01T23:59:59Z
        pricing_plan_type:
          title: Account Pricing Plan
          type: string
          description: The type of pricing plan the account is on.
          readOnly: true
          enum:
          - monthly
          - pay_as_you_go
          - forever_free
        first_payment:
          title: First Payment
          type: string
          description: Date of first payment for monthly plans.
          format: date-time
          readOnly: true
          example: 2010-01-01T23:59:59Z
        account_timezone:
          title: Account Timezone
          type: string
          description: The timezone currently set for the account.
          readOnly: true
        account_industry:
          title: Account Industry
          type: string
          description: The user-specified industry associated with the account.
          readOnly: true
        contact:
          $ref: '#/components/schemas/Account Contact'
        pro_enabled:
          title: Mailchimp Pro
          type: boolean
          description: "Legacy - whether the account includes [Mailchimp Pro](https://mailchimp.com/help/about-mailchimp-pro/)."
          readOnly: true
        last_login:
          title: Last Login Date
          type: string
          description: The date and time of the last login for this account in ISO
            8601 format.
          format: date-time
          readOnly: true
        total_subscribers:
          title: Total Subscribers
          type: integer
          description: The total number of subscribers across all lists in the account.
          readOnly: true
        industry_stats:
          $ref: '#/components/schemas/Industry Stats_1'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The API root resource links to all other resources available in
        the API.
      example:
        member_since: 2010-01-01T23:59:59Z
        login_id: login_id
        pro_enabled: true
        role: role
        first_payment: 2010-01-01T23:59:59Z
        pricing_plan_type: monthly
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        last_login: 2000-01-23T04:56:07.000+00:00
        last_name: last_name
        industry_stats:
          click_rate: 5.962133916683182
          bounce_rate: 1.4658129805029452
          open_rate: 6.027456183070403
        account_id: account_id
        avatar_url: avatar_url
        account_name: account_name
        contact:
          zip: zip
          country: country
          addr2: addr2
          addr1: addr1
          city: city
          company: company
          state: state
        account_industry: account_industry
        first_name: first_name
        email: email
        account_timezone: account_timezone
        total_subscribers: 0
        username: freddie2000
    Gallery Folder_3:
      title: Gallery Folder
      type: object
      properties:
        id:
          title: Folder ID
          type: integer
          description: The unique id for the folder.
          readOnly: true
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
        file_count:
          title: File Count
          type: integer
          description: The number of files in the folder.
          readOnly: true
        created_at:
          title: Created Date
          type: string
          description: The date and time a file was added to the File Manager in ISO
            8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Created By
          type: string
          description: The username of the profile that created the folder.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An individual folder listed in the File Manager.
      example:
        file_count: 6
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        created_by: created_by
    Automation Workflow Email:
      title: Automation Workflow Email
      type: object
      properties:
        id:
          title: Automation Email ID
          type: string
          description: A string that uniquely identifies the Automation email.
          readOnly: true
        web_id:
          title: Automation Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this automation\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
          readOnly: true
          example: 33345484
        workflow_id:
          title: Workflow ID
          type: string
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
        position:
          title: Email Position
          type: integer
          description: The position of an Automation email in a workflow.
          readOnly: true
        delay:
          $ref: '#/components/schemas/Automation Delay_1'
        create_time:
          title: Create Time
          type: string
          description: The date and time the campaign was created in ISO 8601 format.
          format: date-time
          readOnly: true
        start_time:
          title: Start Time
          type: string
          description: The date and time the campaign was started in ISO 8601 format.
          format: date-time
          readOnly: true
        archive_url:
          title: Archive URL
          type: string
          description: The link to the campaign's archive version in ISO 8601 format.
          readOnly: true
        status:
          title: Campaign Status
          type: string
          description: The current status of the campaign.
          readOnly: true
          enum:
          - save
          - paused
          - sending
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for this campaign.
          readOnly: true
        send_time:
          title: Send Time
          type: string
          description: ' The date and time a campaign was sent in ISO 8601 format'
          format: date-time
          readOnly: true
        content_type:
          title: Content Type
          type: string
          description: "How the campaign's content is put together ('template', 'drag_and_drop',\
            \ 'html', 'url')."
          readOnly: true
        needs_block_refresh:
          title: Needs Block Refresh
          type: boolean
          description: Determines if the automation email needs its blocks refreshed
            by opening the web-based campaign editor.
          readOnly: true
          example: true
        has_logo_merge_tag:
          title: Has Logo Merge Tag
          type: boolean
          description: Determines if the campaign contains the *|BRAND:LOGO|* merge
            tag.
          readOnly: true
          example: true
        recipients:
          $ref: '#/components/schemas/List_11'
        settings:
          $ref: '#/components/schemas/Campaign Settings_5'
        tracking:
          $ref: '#/components/schemas/Campaign Tracking Options_1'
        social_card:
          $ref: '#/components/schemas/Campaign Social Card'
        trigger_settings:
          $ref: '#/components/schemas/Automation Trigger_1'
        report_summary:
          $ref: '#/components/schemas/Campaign Report Summary_3'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual Automation workflow email.
      example:
        archive_url: archive_url
        settings:
          auto_footer: true
          subject_line: subject_line
          preview_text: preview_text
          authenticate: true
          title: title
          from_name: from_name
          auto_tweet: true
          auto_fb_post:
          - auto_fb_post
          - auto_fb_post
          fb_comments: true
          drag_and_drop: true
          reply_to: reply_to
          inline_css: true
          template_id: 2
        workflow_id: workflow_id
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        trigger_settings:
          runtime:
            hours:
              type: send_asap
            days:
            - sunday
            - sunday
          workflow_emails_count: 1
          workflow_type: abandonedBrowse
          workflow_title: workflow_title
        web_id: 33345484
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        needs_block_refresh: true
        start_time: 2000-01-23T04:56:07.000+00:00
        delay:
          amount: 6
          full_description: 1 day after subscribers purchase anything from your store
          action_description: subscribers purchase anything from your store
          action: previous_campaign_sent
          type: now
          direction: before
        send_time: 2000-01-23T04:56:07.000+00:00
        content_type: content_type
        social_card:
          image_url: image_url
          description: description
          title: title
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - {}
            - {}
          list_id: list_id
          segment_text: segment_text
          recipient_count: 5
          list_name: list_name
          list_is_active: true
        emails_sent: 6
        id: id
        position: 0
        has_logo_merge_tag: true
        status: save
        report_summary:
          subscriber_clicks: 4
          click_rate: 7.386281948385884
          opens: 7
          clicks: 2
          unique_opens: 9
          open_rate: 3.616076749251911
    Ecommerce Product_3:
      title: E-commerce Product
      type: object
      properties:
        id:
          title: Product Foreign ID
          type: string
          description: A unique identifier for the product.
          readOnly: true
        currency_code:
          title: Currency Code
          type: string
          description: The currency code
          readOnly: true
        title:
          title: Title
          type: string
          description: The title of a product.
          example: Cat Hat
        handle:
          title: Handle
          type: string
          description: The handle of a product.
          example: cat-hat
        url:
          title: Product URL
          type: string
          description: The URL for a product.
        description:
          title: Description
          type: string
          description: The description of a product.
          example: This is a cat hat.
        type:
          title: Type
          type: string
          description: The type of product.
          example: Accessories
        vendor:
          title: Vendor
          type: string
          description: The vendor for a product.
        image_url:
          title: Product Image URL
          type: string
          description: The image URL for a product.
        variants:
          title: Product Variants
          type: array
          description: "Returns up to 50 of the product's variants. To retrieve all\
            \ variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/)."
          items:
            $ref: '#/components/schemas/Ecommerce Product Variant_6'
        images:
          title: Product Images
          type: array
          description: An array of the product's images.
          items:
            $ref: '#/components/schemas/Ecommerce Product Image_5'
        published_at_foreign:
          title: Foreign Publish Time
          type: string
          description: The date and time the product was published in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific product.
      example:
        images:
        - _links:
          - null
          - null
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        - _links:
          - null
          - null
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        _links:
        - null
        - null
        image_url: image_url
        description: This is a cat hat.
        handle: cat-hat
        variants:
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        title: Cat Hat
        type: Accessories
        currency_code: currency_code
        url: url
        vendor: vendor
        published_at_foreign: 2015-07-15T19:28:00Z
        id: id
    Ecommerce Product_2:
      title: E-commerce Product
      type: object
      properties:
        title:
          title: Title
          type: string
          description: The title of a product.
          example: Cat Hat
        handle:
          title: Handle
          type: string
          description: The handle of a product.
          example: cat-hat
        url:
          title: Product URL
          type: string
          description: The URL for a product.
        description:
          title: Description
          type: string
          description: The description of a product.
          example: This is a cat hat.
        type:
          title: Type
          type: string
          description: The type of product.
          example: Accessories
        vendor:
          title: Vendor
          type: string
          description: The vendor for a product.
        image_url:
          title: Product Image URL
          type: string
          description: The image URL for a product.
        variants:
          title: Product Variants
          type: array
          description: An array of the product's variants. At least one variant is
            required for each product. A variant can use the same `id` and `title`
            as the parent product.
          items:
            $ref: '#/components/schemas/Ecommerce Product Variant_1'
        images:
          title: Product Images
          type: array
          description: An array of the product's images.
          items:
            $ref: '#/components/schemas/Ecommerce Product Image_1'
        published_at_foreign:
          title: Foreign Publish Time
          type: string
          description: The date and time the product was published in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
      description: Information about a specific product.
    Ecommerce Product_1:
      title: E-commerce Product
      type: object
      properties:
        id:
          title: Product Foreign ID
          type: string
          description: A unique identifier for the product.
          readOnly: true
        currency_code:
          title: Currency Code
          type: string
          description: The currency code
          readOnly: true
        title:
          title: Title
          type: string
          description: The title of a product.
          example: Cat Hat
        handle:
          title: Handle
          type: string
          description: The handle of a product.
          example: cat-hat
        url:
          title: Product URL
          type: string
          description: The URL for a product.
        description:
          title: Description
          type: string
          description: The description of a product.
          example: This is a cat hat.
        type:
          title: Type
          type: string
          description: The type of product.
          example: Accessories
        vendor:
          title: Vendor
          type: string
          description: The vendor for a product.
        image_url:
          title: Product Image URL
          type: string
          description: The image URL for a product.
        variants:
          title: Product Variants
          type: array
          description: "Returns up to 50 of the product's variants. To retrieve all\
            \ variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/)."
          items:
            $ref: '#/components/schemas/Ecommerce Product Variant_6'
        images:
          title: Product Images
          type: array
          description: An array of the product's images.
          items:
            $ref: '#/components/schemas/Ecommerce Product Image_5'
        published_at_foreign:
          title: Foreign Publish Time
          type: string
          description: The date and time the product was published in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific product.
      example:
        images:
        - _links:
          - null
          - null
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        - _links:
          - null
          - null
          variant_ids:
          - variant_ids
          - variant_ids
          id: id
          url: url
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        image_url: image_url
        description: This is a cat hat.
        handle: cat-hat
        variants:
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        - inventory_quantity: 6
          visibility: visibility
          updated_at: 2015-07-15T19:28:00Z
          backorders: backorders
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 0.8008281904610115
          image_url: image_url
          created_at: 2015-07-15T19:28:00Z
          id: id
          title: Cat Hat
          sku: sku
          url: url
        title: Cat Hat
        type: Accessories
        currency_code: currency_code
        url: url
        vendor: vendor
        published_at_foreign: 2015-07-15T19:28:00Z
        id: id
    inline_response_200_11_audience_targeting_specs_interests:
      type: object
      properties:
        name:
          type: string
      example:
        name: name
    Signup Form:
      title: Signup Form
      type: object
      properties:
        header:
          $ref: '#/components/schemas/Signup form header options'
        contents:
          title: Signup form body content
          type: array
          description: The signup form body content.
          items:
            $ref: '#/components/schemas/Collection of Content for List Signup Forms'
        styles:
          title: Signup Form element style
          type: array
          description: "An array of objects, each representing an element style for\
            \ the signup form."
          items:
            $ref: '#/components/schemas/Collection of Element style for List Signup
              Forms'
      description: List signup form.
    Conversation Message_1:
      title: Conversation Message
      type: object
      properties:
        id:
          title: ID
          type: string
          description: A string that uniquely identifies this message
          readOnly: true
        conversation_id:
          title: Conversation ID
          type: string
          description: A string that identifies this message's conversation
          readOnly: true
        list_id:
          title: List ID
          type: integer
          description: The list's web ID
          readOnly: true
        from_label:
          title: From Label
          type: string
          description: A label representing the sender of this message
          readOnly: true
        from_email:
          title: From Email
          type: string
          description: A label representing the email of the sender of this message
        subject:
          title: Subject
          type: string
          description: The subject of this message
        message:
          title: Message
          type: string
          description: The plain-text content of the message
        read:
          title: Read
          type: boolean
          description: Whether this message has been marked as read
        timestamp:
          title: Timestamp
          type: string
          description: The date and time the message was either sent or received in
            ISO 8601 format.
          format: date-time
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An individual message in a conversation. Conversation tracking
        is a feature available to paid accounts that lets you view replies to your
        campaigns in your Mailchimp account.
      example:
        from_email: from_email
        read: true
        list_id: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        conversation_id: conversation_id
        subject: subject
        id: id
        message: message
        from_label: from_label
        timestamp: 2000-01-23T04:56:07.000+00:00
    Weekly clicks and visits data_clicks:
      type: object
      properties:
        date:
          title: Date
          type: string
          readOnly: true
          example: 2018-04-25
        val:
          title: Value
          type: integer
          readOnly: true
          example: 23
      example:
        date: 2018-04-25
        val: 23
    Automation Trigger:
      title: Automation Trigger
      required:
      - workflow_type
      type: object
      properties:
        workflow_type:
          title: Workflow Type
          type: string
          description: The type of Automation workflow. Currently only supports 'abandonedCart'.
      description: Trigger settings for the Automation.
      example: null
    Subscriber Stats:
      title: Subscriber Stats
      type: object
      properties:
        avg_open_rate:
          title: Average Open Rate
          type: number
          description: A subscriber's average open rate.
          readOnly: true
        avg_click_rate:
          title: Average Click Rate
          type: number
          description: A subscriber's average clickthrough rate.
          readOnly: true
      description: Open and click rates for this subscriber.
      readOnly: true
      example:
        avg_click_rate: 6.027456183070403
        avg_open_rate: 0.8008281904610115
    Collection of Tags_tags:
      type: object
      properties:
        id:
          title: Tag ID
          type: integer
          description: The unique id for the tag.
          readOnly: true
        name:
          title: Tag Name
          type: string
          description: The name of the tag.
        date_added:
          title: Date Added
          type: string
          description: The date and time the tag was added to the list member in ISO
            8601 format.
          format: date-time
          readOnly: true
      example:
        date_added: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
    Automation Workflow Email_1:
      title: Automation Workflow Email
      type: object
      properties:
        id:
          title: Automation Email ID
          type: string
          description: A string that uniquely identifies the Automation email.
          readOnly: true
        web_id:
          title: Automation Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this automation\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`."
          readOnly: true
          example: 33345484
        workflow_id:
          title: Workflow ID
          type: string
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
        position:
          title: Email Position
          type: integer
          description: The position of an Automation email in a workflow.
          readOnly: true
        delay:
          $ref: '#/components/schemas/Automation Delay_1'
        create_time:
          title: Create Time
          type: string
          description: The date and time the campaign was created in ISO 8601 format.
          format: date-time
          readOnly: true
        start_time:
          title: Start Time
          type: string
          description: The date and time the campaign was started in ISO 8601 format.
          format: date-time
          readOnly: true
        archive_url:
          title: Archive URL
          type: string
          description: The link to the campaign's archive version in ISO 8601 format.
          readOnly: true
        status:
          title: Campaign Status
          type: string
          description: The current status of the campaign.
          readOnly: true
          enum:
          - save
          - paused
          - sending
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for this campaign.
          readOnly: true
        send_time:
          title: Send Time
          type: string
          description: ' The date and time a campaign was sent in ISO 8601 format'
          format: date-time
          readOnly: true
        content_type:
          title: Content Type
          type: string
          description: "How the campaign's content is put together ('template', 'drag_and_drop',\
            \ 'html', 'url')."
          readOnly: true
        needs_block_refresh:
          title: Needs Block Refresh
          type: boolean
          description: Determines if the automation email needs its blocks refreshed
            by opening the web-based campaign editor.
          readOnly: true
          example: true
        has_logo_merge_tag:
          title: Has Logo Merge Tag
          type: boolean
          description: Determines if the campaign contains the *|BRAND:LOGO|* merge
            tag.
          readOnly: true
          example: true
        recipients:
          $ref: '#/components/schemas/List_11'
        settings:
          $ref: '#/components/schemas/Campaign Settings_5'
        tracking:
          $ref: '#/components/schemas/Campaign Tracking Options_1'
        social_card:
          $ref: '#/components/schemas/Campaign Social Card'
        trigger_settings:
          $ref: '#/components/schemas/Automation Trigger_1'
        report_summary:
          $ref: '#/components/schemas/Campaign Report Summary_3'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual Automation workflow email.
      example:
        archive_url: archive_url
        settings:
          auto_footer: true
          subject_line: subject_line
          preview_text: preview_text
          authenticate: true
          title: title
          from_name: from_name
          auto_tweet: true
          auto_fb_post:
          - auto_fb_post
          - auto_fb_post
          fb_comments: true
          drag_and_drop: true
          reply_to: reply_to
          inline_css: true
          template_id: 2
        workflow_id: workflow_id
        create_time: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        trigger_settings:
          runtime:
            hours:
              type: send_asap
            days:
            - sunday
            - sunday
          workflow_emails_count: 1
          workflow_type: abandonedBrowse
          workflow_title: workflow_title
        web_id: 33345484
        tracking:
          salesforce:
            notes: true
            campaign: true
          goal_tracking: true
          capsule:
            notes: true
          clicktale: clicktale
          text_clicks: true
          ecomm360: true
          opens: true
          google_analytics: google_analytics
          html_clicks: true
        needs_block_refresh: true
        start_time: 2000-01-23T04:56:07.000+00:00
        delay:
          amount: 6
          full_description: 1 day after subscribers purchase anything from your store
          action_description: subscribers purchase anything from your store
          action: previous_campaign_sent
          type: now
          direction: before
        send_time: 2000-01-23T04:56:07.000+00:00
        content_type: content_type
        social_card:
          image_url: image_url
          description: description
          title: title
        recipients:
          segment_opts:
            prebuilt_segment_id: subscribers-female
            match: any
            saved_segment_id: 5
            conditions:
            - {}
            - {}
          list_id: list_id
          segment_text: segment_text
          recipient_count: 5
          list_name: list_name
          list_is_active: true
        emails_sent: 1
        id: id
        position: 0
        has_logo_merge_tag: true
        status: save
        report_summary:
          subscriber_clicks: 4
          click_rate: 7.386281948385884
          opens: 7
          clicks: 2
          unique_opens: 9
          open_rate: 3.616076749251911
    Campaign Reports_1:
      title: Campaign Reports
      type: object
      properties:
        reports:
          title: Lists
          type: array
          description: "An array of objects, each representing a report resource."
          items:
            $ref: '#/components/schemas/Campaign Report_1'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of reports containing campaigns marked as Sent.
      example:
        reports:
        - forwards:
            forwards_count: 7
            forwards_opens: 9
          share_report:
            share_url: share_url
            share_password: share_password
          preview_text: preview_text
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          rss_last_send: 2000-01-23T04:56:07.000+00:00
          list_name: list_name
          type: type
          list_is_active: true
          industry_stats:
            unopen_rate: 9.369310271410669
            click_rate: 5.025004791520295
            bounce_rate: 9.965781217890562
            unsub_rate: 6.683562403749608
            type: type
            abuse_rate: 8.762042012749001
            open_rate: 4.965218492984954
          list_stats:
            sub_rate: 9.018348186070783
            click_rate: 6.965117697638846
            unsub_rate: 6.438423552598547
            open_rate: 3.5571952270680973
          campaign_title: campaign_title
          facebook_likes:
            facebook_likes: 1
            unique_likes: 7
            recipient_likes: 6
          timeseries:
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          emails_sent: 0
          ecommerce:
            total_spent: 4.678947989005849
            total_revenue: 7.260521264802104
            total_orders: 1
            currency_code: USD
          id: id
          bounces:
            hard_bounces: 5
            syntax_errors: 2
            soft_bounces: 5
          subject_line: subject_line
          ab_split:
            a:
              forwards: 5
              unsubs: 6
              opens: 3
              bounces: 1
              recipient_clicks: 6
              forwards_opens: 6
              last_open: last_open
              abuse_reports: 2
              unique_opens: 3
            b:
              forwards: 0
              unsubs: 7
              opens: 8
              bounces: 7
              recipient_clicks: 6
              forwards_opens: 4
              last_open: last_open
              abuse_reports: 0
              unique_opens: 7
          timewarp:
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          unsubscribed: 1
          send_time: 2000-01-23T04:56:07.000+00:00
          opens:
            opens_total: 3
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 2
            open_rate: 4.145608029883936
          clicks:
            clicks_total: 7
            unique_clicks: 1
            click_rate: 1.4894159098541704
            last_click: 2000-01-23T04:56:07.000+00:00
            unique_subscriber_clicks: 1
          abuse_reports: 6
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
        - forwards:
            forwards_count: 7
            forwards_opens: 9
          share_report:
            share_url: share_url
            share_password: share_password
          preview_text: preview_text
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          rss_last_send: 2000-01-23T04:56:07.000+00:00
          list_name: list_name
          type: type
          list_is_active: true
          industry_stats:
            unopen_rate: 9.369310271410669
            click_rate: 5.025004791520295
            bounce_rate: 9.965781217890562
            unsub_rate: 6.683562403749608
            type: type
            abuse_rate: 8.762042012749001
            open_rate: 4.965218492984954
          list_stats:
            sub_rate: 9.018348186070783
            click_rate: 6.965117697638846
            unsub_rate: 6.438423552598547
            open_rate: 3.5571952270680973
          campaign_title: campaign_title
          facebook_likes:
            facebook_likes: 1
            unique_likes: 7
            recipient_likes: 6
          timeseries:
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          - emails_sent: 0
            recipients_clicks: 4
            unique_opens: 6
            timestamp: 2000-01-23T04:56:07.000+00:00
          emails_sent: 0
          ecommerce:
            total_spent: 4.678947989005849
            total_revenue: 7.260521264802104
            total_orders: 1
            currency_code: USD
          id: id
          bounces:
            hard_bounces: 5
            syntax_errors: 2
            soft_bounces: 5
          subject_line: subject_line
          ab_split:
            a:
              forwards: 5
              unsubs: 6
              opens: 3
              bounces: 1
              recipient_clicks: 6
              forwards_opens: 6
              last_open: last_open
              abuse_reports: 2
              unique_opens: 3
            b:
              forwards: 0
              unsubs: 7
              opens: 8
              bounces: 7
              recipient_clicks: 6
              forwards_opens: 4
              last_open: last_open
              abuse_reports: 0
              unique_opens: 7
          timewarp:
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          - unique_clicks: 3
            opens: 3
            clicks: 5
            last_click: 2000-01-23T04:56:07.000+00:00
            gmt_offset: 3
            bounces: 4
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 7
          unsubscribed: 1
          send_time: 2000-01-23T04:56:07.000+00:00
          opens:
            opens_total: 3
            last_open: 2000-01-23T04:56:07.000+00:00
            unique_opens: 2
            open_rate: 4.145608029883936
          clicks:
            clicks_total: 7
            unique_clicks: 1
            click_rate: 1.4894159098541704
            last_click: 2000-01-23T04:56:07.000+00:00
            unique_subscriber_clicks: 1
          abuse_reports: 6
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
        _links:
        - null
        - null
        total_items: 9
    Twitter Stats:
      title: Twitter Stats
      type: object
      properties:
        tweets:
          title: Tweet Count
          type: integer
          description: The number of tweets including a link to the campaign.
          readOnly: true
        first_tweet:
          title: First Tweet Timestamp
          type: string
          description: The day and time of the first recorded tweet with a link to
            the campaign.
          readOnly: true
        last_tweet:
          title: Last Tweet Timestamp
          type: string
          description: The day and time of the last recorded tweet with a link to
            the campaign.
          readOnly: true
        retweets:
          title: Retweet Count
          type: integer
          description: The number of retweets that include a link to the campaign.
          readOnly: true
        statuses:
          title: Twitter Status
          type: array
          description: A summary of tweets that include a link to the campaign.
          readOnly: true
          items:
            $ref: '#/components/schemas/Twitter Status'
      description: A summary of Twitter activity for a campaign.
      example:
        last_tweet: last_tweet
        statuses:
        - datetime: 2000-01-23T04:56:07.000+00:00
          status_id: status_id
          screen_name: screen_name
          is_retweet: true
          status: status
        - datetime: 2000-01-23T04:56:07.000+00:00
          status_id: status_id
          screen_name: screen_name
          is_retweet: true
          status: status
        first_tweet: first_tweet
        tweets: 0
        retweets: 6
    Weekly clicks and visits data:
      title: Weekly clicks and visits data
      type: object
      properties:
        clicks:
          title: Clicks
          type: array
          description: The total number of clicks in a week.
          items:
            $ref: '#/components/schemas/Weekly clicks and visits data_clicks'
        visits:
          title: Visits
          type: array
          description: The total number of visits in a week.
          items:
            $ref: '#/components/schemas/Weekly clicks and visits data_visits'
        unique_visits:
          title: Unique Visits
          type: array
          items:
            $ref: '#/components/schemas/Daily clicks and visits data_unique_visits'
      description: The clicks and visits data from the last five weeks.
      readOnly: true
      example:
        unique_visits:
        - null
        - null
        visits:
        - date: 2018-04-25
          val: 49
        - date: 2018-04-25
          val: 49
        clicks:
        - date: 2018-04-25
          val: 23
        - date: 2018-04-25
          val: 23
    List Webhooks_2:
      title: List Webhooks
      type: object
      properties:
        id:
          title: Unique ID
          type: string
          description: An string that uniquely identifies this webhook.
          readOnly: true
          example: 5d9a5e3f7b
        url:
          title: URL
          type: string
          description: A valid URL for the Webhook.
          readOnly: true
          example: http://yourdomain.com/webhook
        events:
          $ref: '#/components/schemas/Events_2'
        sources:
          $ref: '#/components/schemas/Sources_1'
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
          readOnly: true
          example: 4ca5becb8d
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Webhook configured for the given list.
      example:
        sources:
          admin: true
          api: true
          user: true
        list_id: 4ca5becb8d
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: 5d9a5e3f7b
        url: http://yourdomain.com/webhook
        events:
          subscribe: true
          unsubscribe: true
          profile: true
          cleaned: true
          campaign: true
          upemail: true
    Sent To_1:
      title: Sent To
      type: object
      properties:
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        status:
          title: Member Status
          type: string
          description: "The status of the member ('sent', 'hard' for hard bounce,\
            \ or 'soft' for soft bounce)."
        open_count:
          title: Open Count
          type: integer
          description: The number of times a campaign was opened by this member.
        last_open:
          title: Last Open
          type: string
          description: The date and time of the last open for this member in ISO 8601
            format.
          format: date-time
        absplit_group:
          title: A/B Split Group
          type: string
          description: "For A/B Split Campaigns, the group the member was apart of\
            \ ('a', 'b', or 'winner')."
        gmt_offset:
          title: GMT Offset
          type: integer
          description: "For campaigns sent with timewarp, the time zone group the\
            \ member is apart of."
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique list id.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A subscriber's status for a specific campaign.
      example:
        email_id: email_id
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        open_count: 0
        list_is_active: true
        last_open: 2000-01-23T04:56:07.000+00:00
        email_address: email_address
        absplit_group: absplit_group
        gmt_offset: 6
        vip: true
        campaign_id: campaign_id
        status: status
    List Webhooks_1:
      title: List Webhooks
      type: object
      properties:
        id:
          title: Unique ID
          type: string
          description: An string that uniquely identifies this webhook.
          readOnly: true
          example: 5d9a5e3f7b
        url:
          title: URL
          type: string
          description: A valid URL for the Webhook.
          readOnly: true
          example: http://yourdomain.com/webhook
        events:
          $ref: '#/components/schemas/Events_2'
        sources:
          $ref: '#/components/schemas/Sources_1'
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
          readOnly: true
          example: 4ca5becb8d
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Webhook configured for the given list.
      example:
        sources:
          admin: true
          api: true
          user: true
        list_id: 4ca5becb8d
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: 5d9a5e3f7b
        url: http://yourdomain.com/webhook
        events:
          subscribe: true
          unsubscribe: true
          profile: true
          cleaned: true
          campaign: true
          upemail: true
    Growth History_1:
      title: Growth History
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The list id for the growth activity report.
          readOnly: true
        month:
          title: Month
          type: string
          description: The month that the growth history is describing.
          readOnly: true
        existing:
          title: Existing
          type: integer
          description: (deprecated)
          readOnly: true
        imports:
          title: Imports
          type: integer
          description: (deprecated)
          readOnly: true
        optins:
          title: Opt-in
          type: integer
          description: (deprecated)
          readOnly: true
        subscribed:
          title: Subscribed
          type: integer
          description: Total subscribed members on the list at the end of the month.
          readOnly: true
        unsubscribed:
          title: Unsubscribed
          type: integer
          description: Newly unsubscribed members on the list for a specific month.
          readOnly: true
        reconfirm:
          title: Reconfirm
          type: integer
          description: Newly reconfirmed members on the list for a specific month.
          readOnly: true
        cleaned:
          title: Cleaned
          type: integer
          description: Newly cleaned (hard-bounced) members on the list for a specific
            month.
          readOnly: true
        pending:
          title: Pending
          type: integer
          description: Pending members on the list for a specific month.
          readOnly: true
        deleted:
          title: Deleted
          type: integer
          description: Newly deleted members on the list for a specific month.
          readOnly: true
        transactional:
          title: Transactional
          type: integer
          description: Subscribers that have been sent transactional emails via Mandrill.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of a specific list's growth activity for a specific month
        and year.
      example:
        imports: 6
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        pending: 9
        reconfirm: 2
        existing: 0
        optins: 1
        subscribed: 5
        unsubscribed: 5
        deleted: 3
        month: month
        cleaned: 7
        transactional: 2
    Ecommerce Cart Line Item:
      title: E-commerce Cart Line Item
      required:
      - id
      - price
      - product_id
      - product_variant_id
      - quantity
      type: object
      properties:
        id:
          title: Cart Line Item Foreign ID
          type: string
          description: A unique identifier for the cart line item.
        product_id:
          title: Cart Line Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the cart
            line item.
        product_variant_id:
          title: Cart Line Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the cart line item.
        quantity:
          title: Quantity
          type: integer
          description: The quantity of a cart line item.
        price:
          title: Price
          type: number
          description: The price of a cart line item.
      description: Information about a specific cart line item.
      example: null
    Growth History_2:
      title: Growth History
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The list id for the growth activity report.
          readOnly: true
        month:
          title: Month
          type: string
          description: The month that the growth history is describing.
          readOnly: true
        existing:
          title: Existing
          type: integer
          description: (deprecated)
          readOnly: true
        imports:
          title: Imports
          type: integer
          description: (deprecated)
          readOnly: true
        optins:
          title: Opt-in
          type: integer
          description: (deprecated)
          readOnly: true
        subscribed:
          title: Subscribed
          type: integer
          description: Total subscribed members on the list at the end of the month.
          readOnly: true
        unsubscribed:
          title: Unsubscribed
          type: integer
          description: Newly unsubscribed members on the list for a specific month.
          readOnly: true
        reconfirm:
          title: Reconfirm
          type: integer
          description: Newly reconfirmed members on the list for a specific month.
          readOnly: true
        cleaned:
          title: Cleaned
          type: integer
          description: Newly cleaned (hard-bounced) members on the list for a specific
            month.
          readOnly: true
        pending:
          title: Pending
          type: integer
          description: Pending members on the list for a specific month.
          readOnly: true
        deleted:
          title: Deleted
          type: integer
          description: Newly deleted members on the list for a specific month.
          readOnly: true
        transactional:
          title: Transactional
          type: integer
          description: Subscribers that have been sent transactional emails via Mandrill.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of a specific list's growth activity for a specific month
        and year.
      example:
        imports: 6
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        pending: 9
        reconfirm: 2
        existing: 0
        optins: 1
        subscribed: 5
        unsubscribed: 5
        deleted: 3
        month: month
        cleaned: 7
        transactional: 2
    Member Activity:
      title: Member Activity
      type: object
      properties:
        action:
          title: Action
          type: string
          description: "One of the following actions: 'open', 'click', or 'bounce'"
        type:
          title: Type
          type: string
          description: "If the action is a 'bounce', the type of bounce received:\
            \ 'hard', 'soft'."
        timestamp:
          title: Timestamp
          type: string
          description: The date and time recorded for the action in ISO 8601 format.
          format: date-time
        url:
          title: URL
          type: string
          description: "If the action is a 'click', the URL on which the member clicked."
        ip:
          title: IP
          type: string
          description: The IP address recorded for the action.
      description: A summary of the interaction with the campaign.
      example:
        ip: ip
        action: action
        type: type
        url: url
        timestamp: 2000-01-23T04:56:07.000+00:00
    Subscriber in Automation Queue_3:
      title: Subscriber in Automation Queue
      required:
      - email_address
      type: object
      properties:
        id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        workflow_id:
          title: Workflow ID
          type: string
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
        email_id:
          title: Automation Email ID
          type: string
          description: A string that uniquely identifies an email in an Automation
            workflow.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: A string that uniquely identifies a list.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: The list member's email address.
        next_send:
          title: Next Send
          type: string
          description: The date and time of the next send for the workflow email in
            ISO 8601 format.
          format: date-time
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about subscribers in an Automation email queue.
      example:
        email_id: email_id
        workflow_id: workflow_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        next_send: 2000-01-23T04:56:07.000+00:00
        id: id
    Subscriber in Automation Queue_2:
      title: Subscriber in Automation Queue
      required:
      - email_address
      type: object
      properties:
        email_address:
          title: Email Address
          type: string
          description: The list member's email address.
      description: Information about subscribers in an Automation email queue.
    Subscriber in Automation Queue_1:
      title: Subscriber in Automation Queue
      type: object
      properties:
        id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        workflow_id:
          title: Workflow ID
          type: string
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
        email_id:
          title: Automation Email ID
          type: string
          description: A string that uniquely identifies an email in an Automation
            workflow.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: A string that uniquely identifies a list.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: The list member's email address.
        next_send:
          title: Next Send
          type: string
          description: The date and time of the next send for the workflow email in
            ISO 8601 format.
          format: date-time
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about subscribers in an Automation email queue.
      example:
        email_id: email_id
        workflow_id: workflow_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        next_send: 2000-01-23T04:56:07.000+00:00
        id: id
        list_is_active: true
    Gallery Folder:
      title: Gallery Folder
      required:
      - name
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
      description: An individual folder listed in the File Manager.
    Problem Detail Document:
      title: Problem Detail Document
      required:
      - detail
      - instance
      - status
      - title
      - type
      type: object
      properties:
        type:
          title: Problem Type
          type: string
          description: "An absolute URI that identifies the problem type. When dereferenced,\
            \ it should provide human-readable documentation for the problem type."
          example: https://mailchimp.com/developer/marketing/docs/errors/
        title:
          title: Error Title
          type: string
          description: "A short, human-readable summary of the problem type. It shouldn't\
            \ change based on the occurrence of the problem, except for purposes of\
            \ localization."
          example: Resource Not Found
        status:
          title: HTTP Status Code
          type: integer
          description: "The HTTP status code (RFC2616, Section 6) generated by the\
            \ origin server for this occurrence of the problem."
          example: 404
        detail:
          title: Error Message
          type: string
          description: "A human-readable explanation specific to this occurrence of\
            \ the problem. [Learn more about errors](/developer/guides/get-started-with-mailchimp-api-3/#Errors)."
          example: The requested resource could not be found.
        instance:
          title: Instance ID
          type: string
          description: A string that identifies this specific occurrence of the problem.
            Please provide this ID when contacting support.
          example: 995c5cb0-3280-4a6e-808b-3b096d0bb219
      description: An error generated by the Mailchimp API. Conforms to IETF draft
        'draft-nottingham-http-problem-06'.
    Orders:
      title: Orders
      type: object
      properties:
        orders:
          title: Orders
          type: array
          description: "An array of objects, each representing an order resource."
          items:
            $ref: '#/components/schemas/Ecommerce Order_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of orders in an account.
      example:
        _links:
        - null
        - null
        orders:
        - discount_total: 6.027456183070403
          fulfillment_status: fulfillment_status
          tax_total: 1.4658129805029452
          _links:
          - null
          - null
          processed_at_foreign: 2015-07-15T19:28:00Z
          billing_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          currency_code: currency_code
          landing_site: http://www.example.com?source=abc
          order_url: order_url
          tracking_number: tracking_number
          id: id
          shipping_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          updated_at_foreign: 2015-07-15T19:28:00Z
          lines:
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - null
            - null
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - null
            - null
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          promos:
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          tracking_url: tracking_url
          campaign_id: 839488a60b
          cancelled_at_foreign: 2015-07-15T19:28:00Z
          store_id: store_id
          shipping_total: 5.962133916683182
          outreach:
            published_time: 2017-06-06T13:56:12Z
            name: Freddie's Jokes
            id: 839488a60b
            type: regular
          tracking_code: prec
          tracking_carrier: tracking_carrier
          financial_status: financial_status
          order_total: 0.8008281904610115
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        - discount_total: 6.027456183070403
          fulfillment_status: fulfillment_status
          tax_total: 1.4658129805029452
          _links:
          - null
          - null
          processed_at_foreign: 2015-07-15T19:28:00Z
          billing_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          currency_code: currency_code
          landing_site: http://www.example.com?source=abc
          order_url: order_url
          tracking_number: tracking_number
          id: id
          shipping_address:
            country: United States
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            latitude: 45.427408
            province_code: GA
            country_code: US
            province: Georgia
            phone: "8675309"
            name: Freddie Chimpenheimer
            company: company
            postal_code: "30308"
            longitude: -75.68903
          updated_at_foreign: 2015-07-15T19:28:00Z
          lines:
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - null
            - null
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 2
            _links:
            - null
            - null
            image_url: image_url
            price: 7.061401241503109
            product_id: product_id
            discount: 9.301444243932576
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          promos:
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          - code: code
            amount_discounted: 5.637376656633329
            type: fixed
          tracking_url: tracking_url
          campaign_id: 839488a60b
          cancelled_at_foreign: 2015-07-15T19:28:00Z
          store_id: store_id
          shipping_total: 5.962133916683182
          outreach:
            published_time: 2017-06-06T13:56:12Z
            name: Freddie's Jokes
            id: 839488a60b
            type: regular
          tracking_code: prec
          tracking_carrier: tracking_carrier
          financial_status: financial_status
          order_total: 0.8008281904610115
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        total_items: 3
    batches_body:
      required:
      - operations
      type: object
      properties:
        operations:
          title: Operations List
          type: array
          description: An array of objects that describes operations to perform.
          items:
            $ref: '#/components/schemas/Operations'
    Gallery File:
      title: Gallery File
      required:
      - file_data
      - name
      type: object
      properties:
        folder_id:
          title: Folder ID
          type: integer
          description: The id of the folder.
        name:
          title: File Name
          type: string
          description: The name of the file.
        file_data:
          title: File Data
          type: string
          description: The base64-encoded contents of the file.
      description: An individual file listed in the File Manager.
    Abandoned Browse Automation:
      title: Abandoned Browse Automation
      type: object
      properties:
        is_supported:
          title: Is Supported
          type: boolean
          description: Whether this store supports the abandonedBrowse automation.
          readOnly: true
          example: false
        id:
          title: ID
          type: string
          description: Unique ID of automation parent campaign.
          readOnly: true
          example: 355a72bfc3
        status:
          title: Status
          type: string
          description: Status of the abandonedBrowse automation.
          readOnly: true
          example: sending
          enum:
          - save
          - sending
          - paused
      description: abandonedBrowse automation details. abandonedBrowse is also known
        as Product Retargeting Email or Retarget Site Visitors on the web.
      readOnly: true
      example:
        is_supported: false
        id: 355a72bfc3
        status: sending
    Script_1:
      title: Script
      type: object
      properties:
        url:
          title: Script URL
          type: string
          description: The URL used for any integrations that offer built-in support
            for connected sites.
          example: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        fragment:
          title: Script Fragment
          type: string
          description: A pre-built script that you can copy-and-paste into your site
            to integrate it with Mailchimp.
          example: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
      description: The script used to connect your site with Mailchimp.
      readOnly: true
      example:
        fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
          script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
          );</script>"
        url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
    inline_response_200_11_content:
      type: object
      properties:
        title:
          type: string
        link_url:
          type: string
        message:
          type: string
        description:
          type: string
        image_url:
          type: string
        call_to_action:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_11_content_attachments'
      example:
        attachments:
        - call_to_action: call_to_action
          image_url: image_url
          name: name
          link_url: link_url
          description: description
        - call_to_action: call_to_action
          image_url: image_url
          name: name
          link_url: link_url
          description: description
        call_to_action: call_to_action
        image_url: image_url
        link_url: link_url
        description: description
        title: title
        message: message
    Automation Workflow Runtime Settings:
      title: Automation Workflow Runtime Settings
      type: object
      properties:
        days:
          title: Days
          type: array
          description: The days an Automation workflow can send.
          items:
            type: string
            enum:
            - sunday
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
        hours:
          $ref: '#/components/schemas/Hours'
      description: A workflow's runtime settings for an Automation.
      example:
        hours:
          type: send_asap
        days:
        - sunday
        - sunday
    inline_response_200_13_audience_activity_clicks:
      type: object
      properties:
        date:
          type: string
        clicks:
          type: integer
      example:
        date: date
        clicks: 0
    Removed Subscribers:
      title: Removed Subscribers
      type: object
      properties:
        workflow_id:
          title: Workflow ID
          type: string
          description: A string that uniquely identifies an Automation workflow.
          readOnly: true
        subscribers:
          title: Trigger
          type: array
          description: "An array of objects, each representing a subscriber who was\
            \ removed from an Automation workflow."
          readOnly: true
          items:
            $ref: '#/components/schemas/Subscriber Removed from Automation Workflow_1'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of the subscribers who were removed from an Automation
        workflow.
      example:
        workflow_id: workflow_id
        _links:
        - null
        - null
        subscribers:
        - workflow_id: workflow_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
        - workflow_id: workflow_id
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
        total_items: 0
    Click Summary:
      title: Click Summary
      type: object
      properties:
        clicks:
          title: Clicks
          type: integer
          description: The total number of clicks to the campaign's URL.
          readOnly: true
        first_click:
          title: First Click
          type: string
          description: The timestamp for the first click to the URL.
          format: date-time
          readOnly: true
        last_click:
          title: Last Click
          type: string
          description: The timestamp for the last click to the URL.
          format: date-time
          readOnly: true
        locations:
          title: Click Locations
          type: array
          description: A summary of the top click locations.
          readOnly: true
          items:
            $ref: '#/components/schemas/Location_2'
      description: A summary of the click-throughs on the campaign's URL.
      readOnly: true
      example:
        clicks: 1
        last_click: 2000-01-23T04:56:07.000+00:00
        locations:
        - country: country
          region: NY
        - country: country
          region: NY
        first_click: 2000-01-23T04:56:07.000+00:00
    Collection of Notes:
      title: Collection of Notes
      type: object
      properties:
        notes:
          title: Notes
          type: array
          description: "An array of objects, each representing a note resource."
          items:
            $ref: '#/components/schemas/Member Notes_3'
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "The last 10 notes for a specific list member, based on date created."
      example:
        email_id: email_id
        notes:
        - email_id: email_id
          note: note
          updated_at: 2000-01-23T04:56:07.000+00:00
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          contact_id: contact_id
          created_by: created_by
        - email_id: email_id
          note: note
          updated_at: 2000-01-23T04:56:07.000+00:00
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          contact_id: contact_id
          created_by: created_by
        list_id: list_id
        _links:
        - null
        - null
        total_items: 6
    Open Detail Report:
      title: Open Detail Report
      type: object
      properties:
        members:
          title: Open Reports
          type: array
          description: "An array of objects, each representing a list member who opened\
            \ a campaign email. Each members object will contain information about\
            \ the number of total opens by a single member, as well as timestamps\
            \ for each open event."
          items:
            $ref: '#/components/schemas/Open Activity_1'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        total_opens:
          title: Total opens
          type: integer
          description: The total number of opens matching the query regardless of
            pagination.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A detailed report of any campaign emails that were opened by a
        list member.
      example:
        total_opens: 6
        _links:
        - null
        - null
        members:
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          opens_count: 0
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          opens:
          - timestamp: 2000-01-23T04:56:07.000+00:00
          - timestamp: 2000-01-23T04:56:07.000+00:00
          contact_status: contact_status
          list_is_active: true
          vip: true
          campaign_id: campaign_id
        - email_id: email_id
          email_address: email_address
          list_id: list_id
          opens_count: 0
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          opens:
          - timestamp: 2000-01-23T04:56:07.000+00:00
          - timestamp: 2000-01-23T04:56:07.000+00:00
          contact_status: contact_status
          list_is_active: true
          vip: true
          campaign_id: campaign_id
        total_items: 1
        campaign_id: campaign_id
    Group B:
      title: Group B
      type: object
      properties:
        total_clicks_b:
          title: Total Clicks Group B
          type: integer
          description: The total number of clicks for Group B.
          readOnly: true
        click_percentage_b:
          title: Click Percentage Group B
          type: number
          description: The percentage of total clicks for Group B.
          readOnly: true
        unique_clicks_b:
          title: Unique Clicks Group B
          type: integer
          description: The number of unique clicks for Group B.
          readOnly: true
        unique_click_percentage_b:
          title: Unique Click Percentage Group B
          type: number
          description: The percentage of unique clicks for Group B.
          readOnly: true
      description: Stats for Group B.
      example:
        click_percentage_b: 2.027123023002322
        unique_clicks_b: 4
        total_clicks_b: 3
        unique_click_percentage_b: 7.386281948385884
    Group A:
      title: Group A
      type: object
      properties:
        total_clicks_a:
          title: Total Clicks Group A
          type: integer
          description: The total number of clicks for Group A.
          readOnly: true
        click_percentage_a:
          title: Click Percentage Group A
          type: number
          description: The percentage of total clicks for Group A.
          readOnly: true
        unique_clicks_a:
          title: Unique Clicks Group A
          type: integer
          description: The number of unique clicks for Group A.
          readOnly: true
        unique_click_percentage_a:
          title: Unique Click Percentage Group A
          type: number
          description: The percentage of unique clicks for Group A.
          readOnly: true
      description: Stats for Group A.
      example:
        click_percentage_a: 2.3021358869347655
        unique_clicks_a: 7
        total_clicks_a: 5
        unique_click_percentage_a: 9.301444243932576
    Event:
      title: Event
      type: object
      properties:
        occurred_at:
          title: Occurred Time
          type: string
          description: The date and time the event occurred in ISO 8601 format.
          format: date-time
          readOnly: true
        name:
          title: Event Name
          type: string
          description: "The name for this type of event ('purchased', 'visited', etc).\
            \ Must be 2-30 characters in length"
        properties:
          title: Properties
          type: object
          additionalProperties:
            type: string
          description: An optional list of properties
      description: A specific event for a contact.
      example:
        occurred_at: 2000-01-23T04:56:07.000+00:00
        name: name
        properties:
          key: properties
    Tag search results_tags:
      type: object
      properties:
        id:
          title: Tag ID
          type: integer
          description: The unique id for the tag.
          readOnly: true
        name:
          title: Tag Name
          type: string
          description: The name of the tag.
      example:
        name: name
        id: 0
    Templates:
      title: Templates
      type: object
      properties:
        templates:
          title: User Templates
          type: array
          description: All of an account's saved or custom templates.
          items:
            $ref: '#/components/schemas/Template Instance_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list an account's available templates.
      example:
        _links:
        - null
        - null
        templates:
        - thumbnail: thumbnail
          date_edited: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          date_created: 2000-01-23T04:56:07.000+00:00
          active: true
          type: type
          created_by: created_by
          drag_and_drop: true
          content_type: template
          share_url: share_url
          responsive: true
          name: name
          id: 0
          category: category
          folder_id: folder_id
          edited_by: edited_by
        - thumbnail: thumbnail
          date_edited: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          date_created: 2000-01-23T04:56:07.000+00:00
          active: true
          type: type
          created_by: created_by
          drag_and_drop: true
          content_type: template
          share_url: share_url
          responsive: true
          name: name
          id: 0
          category: category
          folder_id: folder_id
          edited_by: edited_by
        total_items: 6
    File Manager:
      title: File Manager
      type: object
      properties:
        files:
          title: Files
          type: array
          description: ' A list of files and images in an account.'
          items:
            $ref: '#/components/schemas/Gallery File_3'
        total_file_size:
          title: Total File Size
          type: number
          description: The total size of all File Manager files in bytes.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of available images and files stored in the File Manager
        for the account.
      example:
        total_file_size: 2.3021358869347655
        _links:
        - null
        - null
        files:
        - full_size_url: http://example.com/aeiou
          size: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          width: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          folder_id: 6
          type: image
          thumbnail_url: http://example.com/aeiou
          created_by: created_by
          height: 5
        - full_size_url: http://example.com/aeiou
          size: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          width: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          folder_id: 6
          type: image
          thumbnail_url: http://example.com/aeiou
          created_by: created_by
          height: 5
        total_items: 7
    Interest:
      title: Interest
      required:
      - name
      type: object
      properties:
        name:
          title: Interest Name
          type: string
          description: The name of the interest. This can be shown publicly on a subscription
            form.
        display_order:
          title: Display Order
          type: integer
          description: The display order for interests.
      description: Assign subscribers to interests to group them together. Interests
        are referred to as 'group names' in the Mailchimp application.
    Campaign Defaults_1:
      title: Campaign Defaults
      type: object
      properties:
        from_name:
          title: Sender's Name
          type: string
          description: The default from name for campaigns sent to this list.
        from_email:
          title: Sender's Email Address
          type: string
          description: The default from email for campaigns sent to this list.
        subject:
          title: Subject
          type: string
          description: The default subject line for campaigns sent to this list.
        language:
          title: Language
          type: string
          description: The default language for this lists's forms.
      description: "[Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/)\
        \ created for this list."
      example:
        from_email: from_email
        subject: subject
        language: language
        from_name: from_name
    Landing Page Report_timeseries:
      type: object
      properties:
        daily_stats:
          $ref: '#/components/schemas/Daily clicks and visits data'
        weekly_stats:
          $ref: '#/components/schemas/Weekly clicks and visits data'
      example:
        daily_stats:
          unique_visits:
          - date: 2018-04-25
            val: 1
          - date: 2018-04-25
            val: 1
          visits:
          - date: 2018-04-25
            val: 11
          - date: 2018-04-25
            val: 11
          clicks:
          - date: 2018-04-25
            val: 13
          - date: 2018-04-25
            val: 13
        weekly_stats:
          unique_visits:
          - null
          - null
          visits:
          - date: 2018-04-25
            val: 49
          - date: 2018-04-25
            val: 49
          clicks:
          - date: 2018-04-25
            val: 23
          - date: 2018-04-25
            val: 23
    Conditions_1:
      title: Conditions
      type: object
      properties:
        match:
          title: Match
          type: string
          description: Match type.
          enum:
          - any
          - all
        conditions:
          title: Segment Conditions
          type: array
          description: An array of segment conditions.
          items:
            title: Segment Type
            type: array
            description: "Segment match conditions. There are multiple possible types,\
              \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
            items:
              type: object
              x-oneOf:
              - type: object
                title: Aim Segment
                description: Segment by interaction with a specific campaign.
                properties:
                  condition_type:
                    type: string
                    x-value: Aim
                    enum:
                    - Aim
                  field:
                    type: string
                    enum:
                    - aim
                    title: Segment Field
                    description: Segment by interaction with a specific campaign.
                    example: aim
                  op:
                    type: string
                    enum:
                    - open
                    - click
                    - sent
                    - noopen
                    - noclick
                    - nosent
                    title: Segment Operator
                    description: "The status of the member with regard to their campaign\
                      \ interaction. One of the following: opened, clicked, was sent,\
                      \ didn't open, didn't click, or was not sent."
                    example: open
                  value:
                    type: string
                    title: Segment Data
                    description: Either the web id value for a specific campaign or
                      'any' to account for subscribers who have/have not interacted
                      with any campaigns.
                    example: any
              - type: object
                title: Automation Segment
                description: Segment by interaction with an Automation workflow.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: Automation
                    enum:
                    - Automation
                  field:
                    type: string
                    enum:
                    - automation
                    title: Segment Field
                    description: Segment by interaction with an Automation workflow.
                    example: automation
                  op:
                    type: string
                    enum:
                    - started
                    - completed
                    - not_started
                    - not_completed
                    title: Segment Operator
                    description: "The status of the member with regard to the automation\
                      \ workflow. One of the following: has started the workflow,\
                      \ has completed the workflow, has not started the workflow,\
                      \ or has not completed the workflow."
                    example: started
                  value:
                    type: string
                    title: Segment Data
                    description: The web id for the automation workflow to segment
                      against.
                    example: "2135217"
              - type: object
                title: Poll Activity Segment
                description: Segment by poll activity.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: CampaignPoll
                    enum:
                    - CampaignPoll
                  field:
                    type: string
                    enum:
                    - poll
                    title: Segment Field
                    description: Segment by poll activity.
                    example: poll
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: Members have/have not interacted with a specific
                      poll in a Mailchimp email.
                    example: member
                  value:
                    type: number
                    title: Segment Operator
                    description: The id for the poll.
                    example: 409
              - type: object
                title: Conversation Segment
                description: Segment by interaction with a campaign via Conversations.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: Conversation
                    enum:
                    - Conversation
                  field:
                    type: string
                    enum:
                    - conversation
                    title: Segment Field
                    description: Segment by interaction with a campaign via Conversations.
                    example: conversation
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: "The status of a member's interaction with a conversation.\
                      \ One of the following: has replied or has not replied."
                    example: member
                  value:
                    type: string
                    title: Segment Data
                    description: The web id value for a specific campaign or 'any'
                      to account for subscribers who have/have not interacted with
                      any campaigns.
                    example: any
              - type: object
                title: Date Segment
                description: Segment by a specific date field.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: Date
                    enum:
                    - Date
                  field:
                    type: string
                    enum:
                    - timestamp_opt
                    - info_changed
                    - ecomm_date
                    title: Segment Field
                    description: "The type of date field to segment on: The opt-in\
                      \ time for a signup, the date the subscriber was last updated,\
                      \ or the date of their last ecomm purchase."
                    example: timestamp_opt
                  op:
                    type: string
                    enum:
                    - greater
                    - less
                    - is
                    - not
                    - blank
                    - blank_not
                    - within
                    - notwithin
                    title: Segment Operator
                    description: "When the event took place:  Before, after, is a\
                      \ specific date, is not a specific date, is blank, or is not\
                      \ blank."
                    example: greater
                  value:
                    type: string
                    title: Segment Data
                    description: "What type of data to segment on: a specific date,\
                      \ a specific campaign, or the last campaign sent."
                    example: date
                  extra:
                    type: string
                    title: Segment Extra Value
                    description: "When segmenting on 'date' or 'campaign', the date\
                      \ for the segment formatted as YYYY-MM-DD or the web id for\
                      \ the campaign."
                    example: 2015-01-30
              - type: object
                title: Email Client Segment
                description: Segment by use of a particular email client.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: EmailClient
                    enum:
                    - EmailClient
                  field:
                    type: string
                    enum:
                    - email_client
                    title: Segment Field
                    description: Segment by use of a particular email client.
                    example: email_client
                  op:
                    type: string
                    enum:
                    - client_is
                    - client_not
                    title: Segment Operator
                    description: "The operation to determine whether we select clients\
                      \ that match the value, or clients that do not match the value."
                    example: client_is
                  value:
                    type: string
                    title: Segment Data
                    description: The name of the email client.
                    example: Gmail
              - type: object
                title: Language Segment
                description: Segment by language.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: Language
                    enum:
                    - Language
                  field:
                    type: string
                    enum:
                    - language
                    title: Segment Field
                    description: Segmenting based off of a subscriber's language.
                    example: language
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Whether the member's language is or is not set to
                      a specific language.
                    example: is
                  value:
                    type: string
                    title: Segment Data
                    description: A two-letter language identifier.
                    example: en
              - type: object
                title: Member Rating Segment
                description: Segment by member rating.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: MemberRating
                    enum:
                    - MemberRating
                  field:
                    type: string
                    enum:
                    - rating
                    title: Segment Field
                    description: Segment by member rating.
                    example: rating
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - greater
                    - less
                    title: Segment Operator
                    description: Members who have have a rating that is/not exactly
                      a given number or members who have a rating greater/less than
                      a given number.
                    example: greater
                  value:
                    type: number
                    title: Segment Operator
                    description: The star rating number to segment against.
                    example: 4
              - type: object
                title: Signup Source Segment
                description: Segment by signup source.
                required:
                - field
                - condition_type
                - op
                properties:
                  condition_type:
                    type: string
                    enum:
                    - SignupSource
                    x-value: SignupSource
                    title: Type
                  field:
                    type: string
                    enum:
                    - source
                    title: Segment Field
                    example: source
                  op:
                    type: string
                    enum:
                    - source_is
                    - source_not
                    title: Segment Operator
                    description: Whether the member's signup source was/was not a
                      particular value.
                    example: source_is
                  value:
                    type: string
                    title: Segment Data
                    description: The signup source.
                    example: List Import
              - type: object
                title: Survey Monkey Segment
                description: Segment by interaction with a SurveyMonkey survey.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SurveyMonkey
                    enum:
                    - SurveyMonkey
                  field:
                    type: string
                    enum:
                    - survey_monkey
                    title: Segment Field
                    description: Segment by interaction with a SurveyMonkey survey.
                    example: survey_monkey
                  op:
                    type: string
                    enum:
                    - started
                    - completed
                    - not_started
                    - not_completed
                    title: Segment Operator
                    description: "The status of the member with regard to the survey.One\
                      \ of the following: has started the survey, has completed the\
                      \ survey, has not started the survey, or has not completed the\
                      \ survey."
                    example: started
                  value:
                    type: string
                    title: Survey ID
                    description: The unique ID of the survey monkey survey.
                    example: "32179586"
              - type: object
                title: VIP Segment
                description: Segment by VIP status.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: VIP
                    enum:
                    - VIP
                  field:
                    type: string
                    enum:
                    - gmonkey
                    title: Segment Field
                    description: Segment by VIP status.
                    example: gmonkey
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: Whether the member is or is not marked as VIP.
                    example: member
              - type: object
                title: Interests Segment
                description: Segment by an interest group merge field.
                properties:
                  condition_type:
                    type: string
                    x-value: Interests
                    enum:
                    - Interests
                  field:
                    type: string
                    title: Segment Field
                    description: Segmenting based on interest group information. This
                      should start with 'interests-' followed by the grouping id.
                      Ex. 'interests-123'.
                    example: interests-123
                  op:
                    type: string
                    enum:
                    - interestcontains
                    - interestcontainsall
                    - interestnotcontains
                    title: Segment Operator
                    description: "Whether the member is a part of one, all, or none\
                      \ of the groups."
                    example: interestcontains
                  value:
                    type: array
                    title: Segment Value
                    description: "An array containing strings, each representing a\
                      \ group id."
                    items:
                      type: string
                      example:
                      - "44401"
                      - "44405"
                      - "44409"
              - type: object
                title: Ecommerce Category Segment
                description: Segment by purchases in specific items or categories.
                properties:
                  condition_type:
                    type: string
                    x-value: EcommCategory
                    enum:
                    - EcommCategory
                  field:
                    type: string
                    enum:
                    - ecomm_cat
                    - ecomm_prod
                    title: Segment Field
                    description: Segment by purchases in specific items or categories.
                    example: ecomm_cat
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - contains
                    - notcontain
                    - starts
                    - ends
                    title: Segment Operator
                    description: "A member who has purchased from a category/specific\
                      \ item that is/is not a specific name, where the category/item\
                      \ name contains/doesn't contain a specific phrase or string,\
                      \ or a category/item name that starts/ends with a string."
                    example: is
                  value:
                    type: string
                    title: Segment Data
                    description: The ecommerce category/item information.
                    example: Product
              - type: object
                title: Ecommerce Number Segment
                description: "Segment by average spent total, number of orders, total\
                  \ number of products purchased, or average number of products per\
                  \ order."
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: EcommNumber
                    enum:
                    - EcommNumber
                  field:
                    type: string
                    enum:
                    - ecomm_spent_avg
                    - ecomm_orders
                    - ecomm_prod_all
                    - ecomm_avg_ord
                    title: Segment Field
                    description: "Segment by average spent total, number of orders,\
                      \ total number of products purchased, or average number of products\
                      \ per order."
                    example: ecomm_orders
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - greater
                    - less
                    title: Segment Operator
                    description: "Members who have spent exactly, have not spent exactly,\
                      \ spent more, or spent less than the segment value."
                    example: greater
                  value:
                    type: number
                    title: Segment Operator
                    description: "Members who have spent exactly, have not spent exactly,\
                      \ spent more, or spent less than this amount."
                    example: 42
              - type: object
                title: Ecommerce Purchased Segment
                description: Segment by whether someone has purchased anything.
                properties:
                  condition_type:
                    type: string
                    x-value: EcommPurchased
                    enum:
                    - EcommPurchased
                  field:
                    type: string
                    enum:
                    - ecomm_purchased
                    title: Segment Field
                    description: Segment by whether someone has purchased anything.
                    example: ecomm_purchased
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: Members who have have ('member') or have not ('notmember')
                      purchased.
                    example: member
              - type: object
                title: Ecommerce Spent Segment
                description: Segment by amount spent on a single order or across all
                  orders.
                properties:
                  condition_type:
                    type: string
                    x-value: EcommSpent
                    enum:
                    - EcommSpent
                  field:
                    type: string
                    enum:
                    - ecomm_spent_one
                    - ecomm_spent_all
                    title: Segment Field
                    description: Segment by amount spent on a single order or across
                      all orders.
                    example: ecomm_spent_one
                  op:
                    type: string
                    enum:
                    - greater
                    - less
                    title: Segment Operator
                    description: Members who have spent 'more' or 'less' than then
                      specified value.
                    example: greater
                  value:
                    type: integer
                    title: Segment Data
                    description: The total amount a member spent.
                    example: 42
              - type: object
                title: Ecommerce Purchased Store Segment
                description: Segment by purchases from a specific store.
                properties:
                  condition_type:
                    type: string
                    x-value: EcommStore
                    enum:
                    - EcommStore
                  field:
                    type: string
                    enum:
                    - ecomm_store
                    title: Segment Field
                    description: Segment by purchases from a specific store.
                    example: ecomm_store
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Members who have or have not purchased from a specific
                      store.
                    example: is
                  value:
                    type: string
                    title: Segment Operator
                    description: The store id to segment against.
                    example: "289"
              - type: object
                title: Goal Activity Segment
                description: Segment by Goal activity.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: GoalActivity
                    enum:
                    - GoalActivity
                  field:
                    type: string
                    enum:
                    - goal
                    title: Segment Field
                    description: Segment by Goal activity.
                    example: goal
                  op:
                    type: string
                    enum:
                    - is
                    - goal_not
                    - contains
                    - goal_notcontain
                    - starts
                    - ends
                    title: Segment Operator
                    description: "Whether the website URL is/not exactly, contains/doesn't\
                      \ contain, starts with/ends with a string."
                    example: is
                  value:
                    type: string
                    title: Segment Value
                    description: The URL to check Goal activity against.
              - type: object
                title: Goal Timestamp Segment
                description: Segment by most recent interaction with a website.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: GoalTimestamp
                    enum:
                    - GoalTimestamp
                  field:
                    type: string
                    enum:
                    - goal_last_visited
                    title: Segment Field
                    description: Segment by most recent interaction with a website.
                    example: goal_last_visited
                  op:
                    type: string
                    enum:
                    - greater
                    - less
                    - is
                    title: Segment Operator
                    description: "Whether the website activity happened after, before,\
                      \ or at a given timestamp."
                    example: greater
                  value:
                    type: string
                    title: Segment Value
                    description: The date to check Goal activity against.
                    example: 2015-07-20 19:45:21
              - type: object
                title: Similar Subscribers Segment Member Segment
                description: Segment by similar subscribers.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: FuzzySegment
                    enum:
                    - FuzzySegment
                  field:
                    type: string
                    enum:
                    - fuzzy_segment
                    title: Segment Field
                    description: Segment by similar subscribers.
                    example: fuzzy_segment
                  op:
                    type: string
                    enum:
                    - fuzzy_is
                    - fuzzy_not
                    title: Segment Operator
                    description: Members who are/are not apart of a 'similar subscribers'
                      segment.
                    example: fuzzy_is
                  value:
                    type: number
                    title: Segment Operator
                    description: The id for the 'similar subscribers' segment.
                    example: 48433
              - type: object
                title: Static Segment Member Segment
                description: Segment by a given static segment.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: StaticSegment
                    enum:
                    - StaticSegment
                  field:
                    type: string
                    enum:
                    - static_segment
                    title: Segment Field
                    description: Segment by a given static segment.
                    example: static_segment
                  op:
                    type: string
                    enum:
                    - static_is
                    - static_not
                    title: Segment Operator
                    description: Members who are/are not apart of a static segment.
                    example: static_is
                  value:
                    type: number
                    title: Segment Operator
                    description: The id for the static segment.
                    example: 48433
              - type: object
                title: Location-Based Segment
                description: Segment by a specific country or US state.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoCountryState
                    enum:
                    - IPGeoCountryState
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeocountry
                    - ipgeonotcountry
                    - ipgeostate
                    - ipgeonotstate
                    title: Segment Operator
                    description: Segment members who are within a specific country
                      or US state.
                    example: ipgeocountry
                  value:
                    type: string
                    title: Segment Data
                    description: The two-letter country code or US state abbreviation.
                    example: US
              - type: object
                title: Geolocation Segment
                description: Segment by a specific geographic region.
                required:
                - field
                - op
                - value
                - addr
                - lat
                - lng
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoIn
                    enum:
                    - IPGeoIn
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeoin
                    - ipgeonotin
                    title: Segment Operator
                    description: Segment members who are within a specific geographic
                      region.
                    example: ipgeoin
                  value:
                    type: integer
                    title: Segment Data
                    description: The radius of the target location.
                    example: 42
                  addr:
                    type: string
                    title: Segment Location Address
                    description: The address of the target location.
                    example: "Atlanta, GA, USA"
                  lat:
                    type: string
                    title: Segment Location Latitude
                    description: The latitude of the target location.
                    example: "33.7489954"
                  lng:
                    type: string
                    title: Segment Location Longitude
                    description: The longitude of the target location.
                    example: "-84.3879824"
              - type: object
                title: US Zip Code Segment
                description: Segment by a specific US ZIP code.
                required:
                - field
                - op
                - value
                - extra
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoInZip
                    enum:
                    - IPGeoInZip
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeoinzip
                    title: Segment Operator
                    description: Segment members who are within a specific US zip
                      code.
                    example: ipgeoinzip
                  value:
                    type: integer
                    title: Segment Data
                    description: The radius of the target location.
                    example: 25
                  extra:
                    type: integer
                    title: Extra Data
                    description: The zip code to segment against.
                    example: 30318
              - type: object
                title: Unknown Location-Based Segment
                description: Segment members whose location information is unknown.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoUnknown
                    enum:
                    - IPGeoUnknown
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeounknown
                    title: Segment Operator
                    description: Segment members for which location information is
                      unknown.
                    example: ipgeounknown
              - type: object
                title: Zip Code Location-Based Segment
                description: Segment by a specific US ZIP code.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: IPGeoZip
                    enum:
                    - IPGeoZip
                  field:
                    type: string
                    enum:
                    - ipgeo
                    title: Segment Field
                    description: Segmenting subscribers who are within a specific
                      location.
                    example: ipgeo
                  op:
                    type: string
                    enum:
                    - ipgeoiszip
                    - ipgeonotzip
                    title: Segment Operator
                    description: Segment members who are/are not within a specific
                      US zip code.
                    example: ipgeonotzip
                  value:
                    type: integer
                    title: Segment Data
                    description: The 5-digit zip code.
                    example: 30318
              - type: object
                title: Social Profiles Age Segment
                description: Segment by age ranges in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialAge
                    enum:
                    - SocialAge
                  field:
                    type: string
                    enum:
                    - social_age
                    title: Segment Field
                    description: Segment by age ranges in Social Profiles data.
                    example: social_age
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Members who are/not the exact criteria listed.
                    example: is
                  value:
                    type: string
                    enum:
                    - 18-24
                    - 25-34
                    - 35-54
                    - 55+
                    title: Segment Operator
                    description: The age range to segment.
                    example: 35-54
              - type: object
                title: Social Profiles Gender Segment
                description: Segment by listed gender in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialGender
                    enum:
                    - SocialGender
                  field:
                    type: string
                    enum:
                    - social_gender
                    title: Segment Field
                    description: Segment by listed gender in Social Profiles data.
                    example: social_gender
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Members who are/not the exact criteria listed.
                    example: is
                  value:
                    type: string
                    enum:
                    - male
                    - female
                    title: Segment Operator
                    description: The Social Profiles gender to segment.
                    example: female
              - type: object
                title: Social Profiles Influence Segment
                description: Segment by influence rating in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialInfluence
                    enum:
                    - SocialInfluence
                  field:
                    type: string
                    enum:
                    - social_influence
                    title: Segment Field
                    description: Segment by influence rating in Social Profiles data.
                    example: social_influence
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - greater
                    - less
                    title: Segment Operator
                    description: Members who have a rating that is/not or greater/less
                      than the rating provided.
                    example: greater
                  value:
                    type: number
                    title: Segment Operator
                    description: The Social Profiles influence rating to segment.
                    example: 2
              - type: object
                title: Social Profiles Social Network Segment
                description: Segment by social network in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialNetworkMember
                    enum:
                    - SocialNetworkMember
                  field:
                    type: string
                    enum:
                    - social_network
                    title: Segment Field
                    description: Segment by social network in Social Profiles data.
                    example: social_network
                  op:
                    type: string
                    enum:
                    - member
                    - notmember
                    title: Segment Operator
                    description: Members who are/not on a given social network.
                    example: member
                  value:
                    type: string
                    enum:
                    - twitter
                    - facebook
                    - linkedin
                    - flickr
                    - foursquare
                    - lastfm
                    - myspace
                    - quora
                    - vimeo
                    - yelp
                    - youtube
                    title: Segment Operator
                    description: The social network to segment against.
                    example: twitter
              - type: object
                title: Social Profiles Social Network Follow Segment
                description: Segment by social network in Social Profiles data.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: SocialNetworkFollow
                    enum:
                    - SocialNetworkFollow
                  field:
                    type: string
                    enum:
                    - social_network
                    title: Segment Field
                    description: Segment by social network in Social Profiles data.
                    example: social_network
                  op:
                    type: string
                    enum:
                    - follow
                    - notfollow
                    title: Segment Operator
                    description: Members who are/not following a linked account on
                      a given social network.
                    example: follow
                  value:
                    type: string
                    enum:
                    - twitter_follow
                    title: Segment Operator
                    description: The social network to segment against.
                    example: twitter_follow
              - type: object
                title: Address Merge Field Segment
                description: Segment by an address-type merge field.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: AddressMerge
                    enum:
                    - AddressMerge
                  field:
                    type: string
                    title: Segment Field
                    description: An address-type merge field to segment.
                    example: MMERGE3
                  op:
                    type: string
                    enum:
                    - contains
                    - notcontain
                    - blank
                    - blank_not
                    title: Segment Operator
                    description: Whether the member's address merge field contains/does
                      not contain a value or is/is not blank.
                    example: contains
                  value:
                    type: string
                    title: Segment Value
                    description: The value to segment a text merge field with.
                    example: Atlanta
              - type: object
                title: Address/Zip Merge Field Segment
                description: Segment by an address-type merge field within a given
                  distance.
                required:
                - field
                - op
                - value
                - extra
                properties:
                  condition_type:
                    type: string
                    x-value: ZipMerge
                    enum:
                    - ZipMerge
                  field:
                    type: string
                    title: Segment Field
                    description: An address or zip-type merge field to segment.
                    example: MMERGE2
                  op:
                    type: string
                    enum:
                    - geoin
                    title: Segment Operator
                    description: Whether the member's address merge field is within
                      a given distance from a city or zip.
                    example: geoin
                  value:
                    type: string
                    title: Segment Value
                    description: The distance from the city/zip.
                    example: "25"
                  extra:
                    type: string
                    title: Segment Extra
                    description: The city or the zip being used to segment against.
                    example: "30318"
              - type: object
                title: Birthday Merge Field Segment
                description: Segment by a contact's birthday.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: BirthdayMerge
                    enum:
                    - BirthdayMerge
                  field:
                    type: string
                    title: Segment Field
                    description: A date merge field to segment.
                    example: MMERGE4
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - blank
                    - blank_not
                    title: Segment Operator
                    description: Whether the member's birthday merge information is/is
                      not a certain date or is/is not blank.
                    example: is
                  value:
                    type: string
                    title: Segment Value
                    description: A date to segment against (mm/dd).
                    example: 01/30
              - type: object
                title: Date Merge Field Segment
                description: Segment by a given date merge field.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: DateMerge
                    enum:
                    - DateMerge
                  field:
                    type: string
                    title: Segment Field
                    description: A date merge field to segment.
                    example: MMERGE5
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - less
                    - blank
                    - blank_not
                    - greater
                    title: Segment Operator
                    description: "Whether the member's merge information is/is not,\
                      \ is greater/less than a value or is/is not blank."
                    example: is
                  value:
                    type: string
                    title: Segment Value
                    description: A date to segment against.
                    example: 01/30/2015
              - type: object
                title: Dropdown/Radio Merge Field Segment
                description: An individual segment condition
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: SelectMerge
                    enum:
                    - SelectMerge
                  field:
                    type: string
                    title: Segment Field
                    description: A merge field to segment.
                    example: MMERGE6
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - blank
                    - blank_not
                    - notcontain
                    - contains
                    title: Segment Operator
                    description: Whether the member's merge information is/is not
                      a value or is/is not blank.
                    example: is
                  value:
                    type: string
                    title: Segment Value
                    description: The value to segment a text merge field with.
                    example: Second Choice
              - type: object
                title: Text or Number Merge Field Segment
                description: Segment by a given text or number merge field.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: TextMerge
                    enum:
                    - TextMerge
                  field:
                    type: string
                    title: Segment Field
                    description: A text or number merge field to segment.
                    example: MMERGE7
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - contains
                    - notcontain
                    - starts
                    - ends
                    - greater
                    - less
                    - blank
                    - blank_not
                    title: Segment Operator
                    description: "Whether the member's merge information is/is not,\
                      \ contains/does not contain, starts/ends with, or is greater/less\
                      \ than a value"
                    example: contains
                  value:
                    type: string
                    title: Segment Value
                    description: The value to segment a text or number merge field
                      with.
                    example: Freddie's Jokes
              - type: object
                title: Email Segment
                description: Segment by email address.
                required:
                - field
                - op
                properties:
                  condition_type:
                    type: string
                    x-value: EmailAddress
                    enum:
                    - EmailAddress
                  field:
                    type: string
                    enum:
                    - merge0
                    - EMAIL
                    title: Segment Field
                    description: Segmenting based off of a subscriber's email address.
                    example: EMAIL
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    - contains
                    - notcontain
                    - starts
                    - ends
                    - greater
                    - less
                    title: Segment Operator
                    description: "Whether the email address is/not exactly, contains/doesn't\
                      \ contain, starts/ends with a string."
                  value:
                    type: string
                    title: Segment Value
                    description: The value to compare the email against.
                    example: urist.mcvankab@freddiesjokes.com
              - type: object
                title: Predicted Gender Segment
                description: Segment by predicted gender.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: PredictedGender
                    enum:
                    - PredictedGender
                  field:
                    type: string
                    enum:
                    - predicted_gender
                    title: Segment Field
                    description: Segment by predicted gender.
                  op:
                    type: string
                    enum:
                    - is
                    - not
                    title: Segment Operator
                    description: Members who are/not the exact criteria listed.
                    example: is
                  value:
                    type: string
                    enum:
                    - male
                    - female
                    title: Segment Operator
                    description: The predicted gender to segment.
                    example: female
              - type: object
                title: Predicted Age Segment
                description: Segment by predicted age.
                required:
                - field
                - op
                - value
                properties:
                  condition_type:
                    type: string
                    x-value: PredictedAge
                    enum:
                    - PredictedAge
                  field:
                    type: string
                    enum:
                    - predicted_age_range
                    title: Segment Field
                    description: Segment by predicted age.
                  op:
                    type: string
                    enum:
                    - is
                    title: Segment Operator
                    description: Members who are/not the exact criteria listed.
                    example: is
                  value:
                    type: string
                    enum:
                    - 18-24
                    - 25-34
                    - 35-44
                    - 45-54
                    - 55-64
                    - 65+
                    title: Segment Operator
                    description: The predicted age to segment.
                    example: female
              - type: object
                title: New Subscribers Prebuilt Segment
                description: Segment by when people subscribed.
                properties:
                  condition_type:
                    type: string
                    x-value: NewSubscribers
                    enum:
                    - NewSubscribers
                  field:
                    type: string
                    enum:
                    - timestamp_opt
                    title: Segment Field
                    description: Segment by when people subscribed.
                  op:
                    type: string
                    enum:
                    - date_within
                    title: Segment Operator
                    description: "Whe the event took place, namely within a time frame."
                  value:
                    type: string
                    title: Segment Data
                    description: "What type of data to segment on: a specific date,\
                      \ a specific campaign, or the last campaign sent."
              x-discriminator:
                type: string
                propertyName: condition_type
      description: "The [conditions of the segment](https://mailchimp.com/help/save-and-manage-segments/).\
        \ Static and fuzzy segments don't have conditions."
      example: null
    Conditions_2:
      title: Conditions
      type: object
      properties:
        match:
          title: Match
          type: string
          description: Match type.
          enum:
          - any
          - all
        conditions:
          title: Segment Type
          type: array
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
      description: The conditions of the segment. Static segments (tags) and fuzzy
        segments don't have conditions.
      example:
        match: any
        conditions:
        - {}
        - {}
    Members to addremove tofrom a static segment:
      title: Members to add/remove to/from a static segment
      type: object
      properties:
        members_to_add:
          title: Members to add to the static segment
          type: array
          description: An array of emails to be used for a static segment. Any emails
            provided that are not present on the list will be ignored. A maximum of
            500 members can be sent.
          items:
            type: string
        members_to_remove:
          title: Members to remove from the static segment
          type: array
          description: An array of emails to be used for a static segment. Any emails
            provided that are not present on the list will be ignored. A maximum of
            500 members can be sent.
          items:
            type: string
      description: Members to add/remove to/from a static segment
    Billing Address_1:
      title: Billing Address
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The name associated with an order's billing address.
          example: Freddie Chimpenheimer
        address1:
          title: Address Field 1
          type: string
          description: The billing address for the order.
          example: 675 Ponce de Leon Ave NE
        address2:
          title: Address Field 2
          type: string
          description: An additional field for the billing address.
          example: Suite 5000
        city:
          title: 'City '
          type: string
          description: The city in the billing address.
          example: Atlanta
        province:
          title: Province
          type: string
          description: The state or normalized province in the billing address.
          example: Georgia
        province_code:
          title: Province Code
          type: string
          description: The two-letter code for the province or state in the billing
            address.
          example: GA
        postal_code:
          title: Postal Code
          type: string
          description: The postal or zip code in the billing address.
          example: "30308"
        country:
          title: Country Code
          type: string
          description: The country in the billing address.
          example: United States
        country_code:
          title: Country Code
          type: string
          description: The two-letter code for the country in the billing address.
          example: US
        longitude:
          title: Longitude
          type: number
          description: The longitude for the billing address location.
          example: -75.68903
        latitude:
          title: Latitude
          type: number
          description: The latitude for the billing address location.
          example: 45.427408
        phone:
          title: Phone Number
          type: string
          description: The phone number for the billing address.
          example: "8675309"
        company:
          title: Company
          type: string
          description: The company associated with the billing address.
      description: The billing address for the order.
      example:
        country: United States
        address2: Suite 5000
        city: Atlanta
        address1: 675 Ponce de Leon Ave NE
        latitude: 45.427408
        province_code: GA
        country_code: US
        province: Georgia
        phone: "8675309"
        name: Freddie Chimpenheimer
        company: company
        postal_code: "30308"
        longitude: -75.68903
    Tracking Settings:
      title: Tracking Settings
      type: object
      properties:
        track_with_mailchimp:
          title: Track with Mailchimp
          type: boolean
          description: "Use cookies to track unique visitors and calculate overall\
            \ conversion rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/)."
        enable_restricted_data_processing:
          title: Enable restricted data processing
          type: boolean
          description: "Google offers restricted data processing in connection with\
            \ the California Consumer Privacy Act (CCPA) to restrict how Google uses\
            \ certain identifiers and other data processed in the provision of its\
            \ services. You can learn more about Google's restricted data processing\
            \ within Google Ads [here](https://privacy.google.com/businesses/rdp/)."
      description: The tracking settings applied to this landing page.
      example:
        track_with_mailchimp: true
        enable_restricted_data_processing: true
    Landing Page:
      title: Landing Page
      type: object
      properties:
        name:
          title: Landing Page Name
          type: string
          description: The name of this landing page.
        title:
          title: Landing Page title
          type: string
          description: The title of this landing page seen in the browser's title
            bar.
        description:
          title: Landing Page description
          type: string
          description: The description of this landing page.
        store_id:
          title: Store ID
          type: string
          description: The ID of the store associated with this landing page.
        list_id:
          title: Landing Page list id
          type: string
          description: The list's ID associated with this landing page.
        type:
          title: Landing Page Template Type
          type: string
          description: The type of template the landing page has.
          example: signup
          enum:
          - signup
          - product
        template_id:
          title: Landing Page template_id
          type: integer
          description: The template_id of this landing page.
          example: 1001
        tracking:
          $ref: '#/components/schemas/Tracking Settings'
      description: A summary of an individual page's properties.
    Ecommerce Product Variant:
      title: E-commerce Product Variant
      required:
      - id
      - title
      type: object
      properties:
        id:
          title: Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant.
        title:
          title: Title
          type: string
          description: The title of a product variant.
          example: Cat Hat
        url:
          title: URL
          type: string
          description: The URL for a product variant.
        sku:
          title: SKU
          type: string
          description: The stock keeping unit (SKU) of a product variant.
        price:
          title: Price
          type: number
          description: The price of a product variant.
        inventory_quantity:
          title: Inventory Quantity
          type: integer
          description: The inventory quantity of a product variant.
        image_url:
          title: Image URL
          type: string
          description: The image URL for a product variant.
        backorders:
          title: Backorders
          type: string
          description: The backorders of a product variant.
        visibility:
          title: Visibility
          type: string
          description: The visibility of a product variant.
      description: Information about a specific product variant.
      example: null
    Promo Codes:
      title: Promo Codes
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        promo_codes:
          title: Promo Codes
          type: array
          description: "An array of objects, each representing promo codes defined\
            \ for a store."
          items:
            $ref: '#/components/schemas/Ecommerce Promo Code_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of the store's promo codes.
      example:
        store_id: store_id
        promo_codes:
        - usage_count: 0
          code: summersale
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
          created_at_foreign: 2000-01-23T04:56:07.000+00:00
          updated_at_foreign: 2000-01-23T04:56:07.000+00:00
          redemption_url: A url that applies promo code directly at checkout or a
            url that points to sale page or store url
          enabled: true
        - usage_count: 0
          code: summersale
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: id
          created_at_foreign: 2000-01-23T04:56:07.000+00:00
          updated_at_foreign: 2000-01-23T04:56:07.000+00:00
          redemption_url: A url that applies promo code directly at checkout or a
            url that points to sale page or store url
          enabled: true
        _links:
        - null
        - null
        total_items: 6
    Signup form header options:
      title: Signup form header options
      type: object
      properties:
        image_url:
          title: Header Image URL
          type: string
          description: Header image URL.
          example: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
        text:
          title: Header Text
          type: string
          description: Header text.
          example: Header Text goes here
        image_width:
          title: Image width
          type: string
          description: "Image width, in pixels."
          example: "800"
        image_height:
          title: Image height
          type: string
          description: "Image height, in pixels."
          example: "200"
        image_alt:
          title: Image Alt
          type: string
          description: Alt text for the image.
          example: This is an image
        image_link:
          title: Image Link
          type: string
          description: The URL that the header image will link to.
          example: gotothisimage.com
        image_align:
          title: Image align
          type: string
          description: Image alignment.
          example: center
          enum:
          - none
          - left
          - center
          - right
        image_border_width:
          title: Image border width
          type: string
          description: Image border width.
          example: "2"
        image_border_style:
          title: Image border style
          type: string
          description: Image border style.
          example: solid
          enum:
          - none
          - solid
          - dotted
          - dashed
          - double
          - groove
          - outset
          - inset
          - ridge
        image_border_color:
          title: Image border color
          type: string
          description: Image border color.
          example: '#896d6d'
        image_target:
          title: Image target
          type: string
          description: Image link target.
          example: _blank
          enum:
          - _blank
          - "null"
      description: Options for customizing your signup form header.
      example:
        image_height: "200"
        image_link: gotothisimage.com
        image_align: center
        image_border_color: '#896d6d'
        image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
        image_border_style: solid
        image_alt: This is an image
        text: Header Text goes here
        image_width: "800"
        image_target: _blank
        image_border_width: "2"
    Click Detail Report:
      title: Click Detail Report
      type: object
      properties:
        urls_clicked:
          title: URLs Clicked
          type: array
          description: "An array of objects, each representing a specific URL contained\
            \ in the campaign."
          items:
            $ref: '#/components/schemas/Click Detail Report_2'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of URLs and unique IDs included in HTML and plain-text versions
        of a campaign.
      example:
        _links:
        - null
        - null
        urls_clicked:
        - unique_click_percentage: 5.962133916683182
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          unique_clicks: 1
          ab_split:
            a:
              click_percentage_a: 2.3021358869347655
              unique_clicks_a: 7
              total_clicks_a: 5
              unique_click_percentage_a: 9.301444243932576
            b:
              click_percentage_b: 2.027123023002322
              unique_clicks_b: 4
              total_clicks_b: 3
              unique_click_percentage_b: 7.386281948385884
          click_percentage: 6.027456183070403
          total_clicks: 0
          last_click: 2000-01-23T04:56:07.000+00:00
          id: id
          url: url
          campaign_id: campaign_id
        - unique_click_percentage: 5.962133916683182
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          unique_clicks: 1
          ab_split:
            a:
              click_percentage_a: 2.3021358869347655
              unique_clicks_a: 7
              total_clicks_a: 5
              unique_click_percentage_a: 9.301444243932576
            b:
              click_percentage_b: 2.027123023002322
              unique_clicks_b: 4
              total_clicks_b: 3
              unique_click_percentage_b: 7.386281948385884
          click_percentage: 6.027456183070403
          total_clicks: 0
          last_click: 2000-01-23T04:56:07.000+00:00
          id: id
          url: url
          campaign_id: campaign_id
        total_items: 1
        campaign_id: campaign_id
    inline_response_200_9_products:
      type: object
      properties:
        title:
          type: string
        sku:
          type: string
        image_url:
          type: string
        total_revenue:
          type: number
        total_purchased:
          type: number
        currency_code:
          type: string
        recommendation_total:
          type: integer
        recommendation_purchased:
          type: integer
      example:
        total_purchased: 6.027456183070403
        image_url: image_url
        total_revenue: 0.8008281904610115
        recommendation_purchased: 5
        recommendation_total: 1
        title: title
        sku: sku
        currency_code: currency_code
    Campaign Reports_1_timeseries:
      type: object
      properties:
        timestamp:
          title: Timestamp
          type: string
          description: The date and time for the series in ISO 8601 format.
          format: date-time
        emails_sent:
          title: Emails Sent
          type: integer
          description: The number of emails sent in the timeseries.
        unique_opens:
          title: Unique Opens
          type: integer
          description: The number of unique opens in the timeseries.
        recipients_clicks:
          title: Recipient Clicks
          type: integer
          description: The number of clicks in the timeseries.
      example:
        emails_sent: 0
        recipients_clicks: 4
        unique_opens: 6
        timestamp: 2000-01-23T04:56:07.000+00:00
    Sending Schedule_1:
      title: Sending Schedule
      type: object
      properties:
        hour:
          title: Sending Hour
          maximum: 23
          minimum: 0
          type: integer
          description: "The hour to send the campaign in local time. Acceptable hours\
            \ are 0-23. For example, '4' would be 4am in [your account's default time\
            \ zone](https://mailchimp.com/help/set-account-details/)."
        daily_send:
          $ref: '#/components/schemas/Daily Sending Days'
        weekly_send_day:
          title: Weekly Sending Day
          type: string
          description: The day of the week to send a weekly RSS Campaign.
          enum:
          - sunday
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
        monthly_send_date:
          title: Monthly Sending Day
          maximum: 31
          minimum: 0
          type: number
          description: "The day of the month to send a monthly RSS Campaign. Acceptable\
            \ days are 0-31, where '0' is always the last day of a month. Months with\
            \ fewer than the selected number of days will not have an RSS campaign\
            \ sent out that day. For example, RSS Campaigns set to send on the 30th\
            \ will not go out in February."
      description: The schedule for sending the RSS Campaign.
      example:
        hour: 16
        weekly_send_day: sunday
        daily_send:
          sunday: true
          saturday: true
          tuesday: true
          wednesday: true
          thursday: true
          friday: true
          monday: true
        monthly_send_date: 28.834477156190985
    Batch update List members_errors:
      type: object
      properties:
        email_address:
          title: Member Email address
          type: string
          description: The email address that could not be added or updated.
        error:
          title: Error message
          type: string
          description: The error message indicating why the email address could not
            be added or updated.
        error_code:
          title: Error code
          type: string
          description: A unique code that identifies this specifc error.
          enum:
          - ERROR_CONTACT_EXISTS
          - ERROR_GENERIC
      example:
        email_address: email_address
        error_code: ERROR_CONTACT_EXISTS
        error: error
    Campaign:
      title: Campaign
      required:
      - type
      type: object
      properties:
        type:
          title: Campaign Type
          type: string
          description: "There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/)\
            \ you can create in Mailchimp. A/B Split campaigns have been deprecated\
            \ and variate campaigns should be used instead."
          enum:
          - regular
          - plaintext
          - absplit
          - rss
          - variate
        recipients:
          $ref: '#/components/schemas/List_1'
        settings:
          $ref: '#/components/schemas/Campaign Settings_1'
        variate_settings:
          $ref: '#/components/schemas/AB Test Options'
        tracking:
          $ref: '#/components/schemas/Campaign Tracking Options'
        rss_opts:
          $ref: '#/components/schemas/RSS Options'
        social_card:
          $ref: '#/components/schemas/Campaign Social Card'
        content_type:
          title: Content Type
          type: string
          description: How the campaign's content is put together. The old drag and
            drop editor uses 'template' while the new editor uses 'multichannel'.
            Defaults to template.
          example: template
          enum:
          - template
          - multichannel
      description: A summary of an individual campaign's settings and content.
    Resource Link:
      title: Resource Link
      type: object
      properties:
        rel:
          title: Rel
          type: string
          description: "As with an HTML 'rel' attribute, this describes the type of\
            \ link."
          readOnly: true
        href:
          title: Href
          type: string
          description: This property contains a fully-qualified URL that can be called
            to retrieve the linked resource or perform the linked action.
          readOnly: true
        method:
          title: Method
          type: string
          description: The HTTP method that should be used when accessing the URL
            defined in 'href'.
          readOnly: true
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          - OPTIONS
          - HEAD
        targetSchema:
          title: Target Schema
          type: string
          description: "For GETs, this is a URL representing the schema that the response\
            \ should conform to."
          readOnly: true
        schema:
          title: Schema
          type: string
          description: "For HTTP methods that can receive bodies (POST and PUT), this\
            \ is a URL representing the schema that the body should conform to."
          readOnly: true
      description: This object represents a link from the resource where it is found
        to another resource or action that may be performed.
      example:
        schema: schema
        targetSchema: targetSchema
        method: GET
        rel: rel
        href: href
    RSS Options:
      title: RSS Options
      required:
      - feed_url
      - frequency
      type: object
      properties:
        feed_url:
          title: Feed URL
          type: string
          description: The URL for the RSS feed.
          format: uri
        frequency:
          title: Frequency
          type: string
          description: The frequency of the RSS Campaign.
          enum:
          - daily
          - weekly
          - monthly
        schedule:
          $ref: '#/components/schemas/Sending Schedule'
        constrain_rss_img:
          title: Constrain RSS Images
          type: boolean
          description: Whether to add CSS to images in the RSS feed to constrain their
            width in campaigns.
      description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
        \ options, specific to an RSS campaign."
      example: null
    Template Instance_2:
      title: Template Instance
      required:
      - html
      - name
      type: object
      properties:
        name:
          title: Template Name
          type: string
          description: The name of the template.
          example: Freddie's Jokes
        folder_id:
          title: Folder ID
          type: string
          description: The id of the folder the template is currently in.
          example: a4b830b
        html:
          title: Template HTML
          type: string
          description: "The raw HTML for the template. We  support the Mailchimp [Template\
            \ Language](https://mailchimp.com/help/getting-started-with-mailchimps-template-language/)\
            \ in any HTML code passed via the API."
      description: Information about a specific template.
    Template Instance_3:
      title: Template Instance
      type: object
      properties:
        id:
          title: Template ID
          type: integer
          description: The individual id for the template.
          readOnly: true
        type:
          title: Template Type
          type: string
          description: "The type of template (user, base, or gallery)."
          readOnly: true
        name:
          title: Template Name
          type: string
          description: The name of the template.
        drag_and_drop:
          title: Drag and Drop
          type: boolean
          description: Whether the template uses the drag and drop editor.
          readOnly: true
        responsive:
          title: Responsive
          type: boolean
          description: Whether the template contains media queries to make it responsive.
          readOnly: true
        category:
          title: Template Category
          type: string
          description: "If available, the category the template is listed in."
          readOnly: true
        date_created:
          title: Date Created
          type: string
          description: The date and time the template was created in ISO 8601 format.
          format: date-time
          readOnly: true
        date_edited:
          title: Date Edited
          type: string
          description: The date and time the template was edited in ISO 8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Created By
          type: string
          description: The login name for template's creator.
          readOnly: true
        edited_by:
          title: Edited By
          type: string
          description: The login name who last edited the template.
          readOnly: true
        active:
          title: Active
          type: boolean
          description: "User templates are not 'deleted,' but rather marked as 'inactive.'\
            \ Returns whether the template is still active."
          readOnly: true
        folder_id:
          title: Folder ID
          type: string
          description: The id of the folder the template is currently in.
        thumbnail:
          title: Template Thumbnail
          type: string
          description: "If available, the URL for a thumbnail of the template."
          readOnly: true
        share_url:
          title: Share URL
          type: string
          description: "The URL used for [template sharing](https://mailchimp.com/help/share-a-template/)."
          readOnly: true
        content_type:
          title: Content Type
          type: string
          description: How the template's content is put together.
          readOnly: true
          enum:
          - template
          - multichannel
          - html
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific template.
      example:
        thumbnail: thumbnail
        date_edited: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        date_created: 2000-01-23T04:56:07.000+00:00
        active: true
        type: type
        created_by: created_by
        drag_and_drop: true
        content_type: template
        share_url: share_url
        responsive: true
        name: name
        id: 0
        category: category
        folder_id: folder_id
        edited_by: edited_by
    Template Instance_1:
      title: Template Instance
      type: object
      properties:
        id:
          title: Template ID
          type: integer
          description: The individual id for the template.
          readOnly: true
        type:
          title: Template Type
          type: string
          description: "The type of template (user, base, or gallery)."
          readOnly: true
        name:
          title: Template Name
          type: string
          description: The name of the template.
        drag_and_drop:
          title: Drag and Drop
          type: boolean
          description: Whether the template uses the drag and drop editor.
          readOnly: true
        responsive:
          title: Responsive
          type: boolean
          description: Whether the template contains media queries to make it responsive.
          readOnly: true
        category:
          title: Template Category
          type: string
          description: "If available, the category the template is listed in."
          readOnly: true
        date_created:
          title: Date Created
          type: string
          description: The date and time the template was created in ISO 8601 format.
          format: date-time
          readOnly: true
        date_edited:
          title: Date Edited
          type: string
          description: The date and time the template was edited in ISO 8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Created By
          type: string
          description: The login name for template's creator.
          readOnly: true
        edited_by:
          title: Edited By
          type: string
          description: The login name who last edited the template.
          readOnly: true
        active:
          title: Active
          type: boolean
          description: "User templates are not 'deleted,' but rather marked as 'inactive.'\
            \ Returns whether the template is still active."
          readOnly: true
        folder_id:
          title: Folder ID
          type: string
          description: The id of the folder the template is currently in.
        thumbnail:
          title: Template Thumbnail
          type: string
          description: "If available, the URL for a thumbnail of the template."
          readOnly: true
        share_url:
          title: Share URL
          type: string
          description: "The URL used for [template sharing](https://mailchimp.com/help/share-a-template/)."
          readOnly: true
        content_type:
          title: Content Type
          type: string
          description: How the template's content is put together.
          readOnly: true
          enum:
          - template
          - multichannel
          - html
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific template.
      example:
        thumbnail: thumbnail
        date_edited: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        date_created: 2000-01-23T04:56:07.000+00:00
        active: true
        type: type
        created_by: created_by
        drag_and_drop: true
        content_type: template
        share_url: share_url
        responsive: true
        name: name
        id: 0
        category: category
        folder_id: folder_id
        edited_by: edited_by
    Automation Workflow:
      title: Automation Workflow
      required:
      - recipients
      - trigger_settings
      type: object
      properties:
        recipients:
          $ref: '#/components/schemas/List'
        settings:
          $ref: '#/components/schemas/Automation Campaign Settings'
        trigger_settings:
          $ref: '#/components/schemas/Automation Trigger'
      description: A summary of an individual Automation workflow's settings and content.
    Abuse Complaint_1:
      title: Abuse Complaint
      type: object
      properties:
        id:
          title: Abuse Report ID
          type: integer
          description: The id for the abuse report
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id for the abuse report
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique id of the list for the abuse report.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        date:
          title: Date
          type: string
          description: Date for the abuse report
          format: date-time
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Details of abuse complaints for a specific list. An abuse complaint
        occurs when your recipient clicks to 'report spam' in their email program.
      example:
        email_id: email_id
        date: 2000-01-23T04:56:07.000+00:00
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        id: 0
        list_is_active: true
        vip: true
        campaign_id: campaign_id
    Verified Domains_1:
      title: Verified Domains
      type: object
      properties:
        domains:
          title: Domains
          type: array
          description: The domains on the account
          readOnly: true
          items:
            $ref: '#/components/schemas/Verified Domains_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
      description: The verified domains currently on the account.
      example:
        domains:
        - authenticated: true
          domain: domain
          verified: true
          verification_email: verification_email
          verification_sent: 2000-01-23T04:56:07.000+00:00
        - authenticated: true
          domain: domain
          verified: true
          verification_email: verification_email
          verification_sent: 2000-01-23T04:56:07.000+00:00
        total_items: 0
    Campaign Report_1:
      title: Campaign Report
      type: object
      properties:
        id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies this campaign.
        campaign_title:
          title: Campaign Title
          type: string
          description: The title of the campaign.
          readOnly: true
        type:
          title: Campaign Type
          type: string
          description: "The type of campaign (regular, plain-text, ab_split, rss,\
            \ automation, variate, or auto)."
        list_id:
          title: List ID
          type: string
          description: The unique list id.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        list_name:
          title: List Name
          type: string
          description: The name of the list.
          readOnly: true
        subject_line:
          title: Campaign Subject Line
          type: string
          description: The subject line for the campaign.
          readOnly: true
        preview_text:
          title: Campaign Preview Text
          type: string
          description: The preview text for the campaign.
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent for this campaign.
        abuse_reports:
          title: Abuse Reports
          type: integer
          description: The number of abuse reports generated for this campaign.
        unsubscribed:
          title: Unsubscribe Count
          type: integer
          description: The total number of unsubscribed members for this campaign.
          readOnly: true
        send_time:
          title: Send Time
          type: string
          description: The date and time a campaign was sent in ISO 8601 format.
          format: date-time
          readOnly: true
        rss_last_send:
          title: RSS Last Send
          type: string
          description: "For RSS campaigns, the date and time of the last send in ISO\
            \ 8601 format."
          format: date-time
          readOnly: true
        bounces:
          $ref: '#/components/schemas/Bounces'
        forwards:
          $ref: '#/components/schemas/Forwards'
        opens:
          $ref: '#/components/schemas/Opens'
        clicks:
          $ref: '#/components/schemas/Clicks'
        facebook_likes:
          $ref: '#/components/schemas/Facebook Likes'
        industry_stats:
          $ref: '#/components/schemas/Industry Stats'
        list_stats:
          $ref: '#/components/schemas/List Stats'
        ab_split:
          $ref: '#/components/schemas/AB Split Stats'
        timewarp:
          title: Timewarp Stats
          type: array
          description: "An hourly breakdown of sends, opens, and clicks if a campaign\
            \ is sent using timewarp."
          items:
            $ref: '#/components/schemas/Campaign Reports_1_timewarp'
        timeseries:
          title: Timeseries
          type: array
          description: An hourly breakdown of the performance of the campaign over
            the first 24 hours.
          items:
            $ref: '#/components/schemas/Campaign Reports_1_timeseries'
        share_report:
          $ref: '#/components/schemas/Share Report'
        ecommerce:
          $ref: '#/components/schemas/ECommerce Report'
        delivery_status:
          $ref: '#/components/schemas/Campaign Delivery Status'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Report details about a sent campaign.
      example:
        forwards:
          forwards_count: 7
          forwards_opens: 9
        share_report:
          share_url: share_url
          share_password: share_password
        preview_text: preview_text
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        rss_last_send: 2000-01-23T04:56:07.000+00:00
        list_name: list_name
        type: type
        list_is_active: true
        industry_stats:
          unopen_rate: 9.369310271410669
          click_rate: 5.025004791520295
          bounce_rate: 9.965781217890562
          unsub_rate: 6.683562403749608
          type: type
          abuse_rate: 8.762042012749001
          open_rate: 4.965218492984954
        list_stats:
          sub_rate: 9.018348186070783
          click_rate: 6.965117697638846
          unsub_rate: 6.438423552598547
          open_rate: 3.5571952270680973
        campaign_title: campaign_title
        facebook_likes:
          facebook_likes: 1
          unique_likes: 7
          recipient_likes: 6
        timeseries:
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: 2000-01-23T04:56:07.000+00:00
        - emails_sent: 0
          recipients_clicks: 4
          unique_opens: 6
          timestamp: 2000-01-23T04:56:07.000+00:00
        emails_sent: 0
        ecommerce:
          total_spent: 4.678947989005849
          total_revenue: 7.260521264802104
          total_orders: 1
          currency_code: USD
        id: id
        bounces:
          hard_bounces: 5
          syntax_errors: 2
          soft_bounces: 5
        subject_line: subject_line
        ab_split:
          a:
            forwards: 5
            unsubs: 6
            opens: 3
            bounces: 1
            recipient_clicks: 6
            forwards_opens: 6
            last_open: last_open
            abuse_reports: 2
            unique_opens: 3
          b:
            forwards: 0
            unsubs: 7
            opens: 8
            bounces: 7
            recipient_clicks: 6
            forwards_opens: 4
            last_open: last_open
            abuse_reports: 0
            unique_opens: 7
        timewarp:
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          gmt_offset: 3
          bounces: 4
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 7
        - unique_clicks: 3
          opens: 3
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          gmt_offset: 3
          bounces: 4
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 7
        unsubscribed: 1
        send_time: 2000-01-23T04:56:07.000+00:00
        opens:
          opens_total: 3
          last_open: 2000-01-23T04:56:07.000+00:00
          unique_opens: 2
          open_rate: 4.145608029883936
        clicks:
          clicks_total: 7
          unique_clicks: 1
          click_rate: 1.4894159098541704
          last_click: 2000-01-23T04:56:07.000+00:00
          unique_subscriber_clicks: 1
        abuse_reports: 6
        delivery_status:
          emails_sent: 6
          can_cancel: true
          emails_canceled: 3
          enabled: true
          status: delivering
    Verified Domains_2:
      title: Verified Domains
      required:
      - verification_email
      type: object
      properties:
        verification_email:
          title: Verification Email
          type: string
          description: The e-mail address at the domain you want to verify. This will
            receive a two-factor challenge to be used in the verify action.
      description: The verified domains currently on the account.
    Events_2:
      title: Events
      type: object
      properties:
        subscribe:
          title: Subscribed
          type: boolean
          description: Whether the webhook is triggered when a list subscriber is
            added.
          example: true
        unsubscribe:
          title: Unsubscribed
          type: boolean
          description: Whether the webhook is triggered when a list member unsubscribes.
          example: true
        profile:
          title: Profile Updated
          type: boolean
          description: Whether the webhook is triggered when a subscriber's profile
            is updated.
          example: true
        cleaned:
          title: Cleaned
          type: boolean
          description: Whether the webhook is triggered when a subscriber's email
            address is cleaned from the list.
          example: true
        upemail:
          title: Email Address Updated
          type: boolean
          description: Whether the webhook is triggered when a subscriber's email
            address is changed.
          example: true
        campaign:
          title: Campaign Sent
          type: boolean
          description: Whether the webhook is triggered when a campaign is sent or
            cancelled.
          example: true
      description: The events that can trigger the webhook and whether they are enabled.
      readOnly: true
      example:
        subscribe: true
        unsubscribe: true
        profile: true
        cleaned: true
        campaign: true
        upemail: true
    Verified Domains_3:
      title: Verified Domains
      type: object
      properties:
        domain:
          title: Domain Name
          type: string
          description: The name of this domain.
          readOnly: true
        verified:
          title: Verified
          type: boolean
          description: Whether the domain has been verified for sending.
          readOnly: true
        authenticated:
          title: Authenticated
          type: boolean
          description: Whether domain authentication is enabled for this domain.
          readOnly: true
        verification_email:
          title: Verification Email
          type: string
          description: The e-mail address receiving the two-factor challenge for this
            domain.
          readOnly: true
        verification_sent:
          title: Verification Challenge Sent
          type: string
          description: The date/time that the two-factor challenge was sent to the
            verification email.
          format: date-time
          readOnly: true
      description: The verified domains currently on the account.
      example:
        authenticated: true
        domain: domain
        verified: true
        verification_email: verification_email
        verification_sent: 2000-01-23T04:56:07.000+00:00
    Events_1:
      title: Events
      type: object
      properties:
        subscribe:
          title: Subscribed
          type: boolean
          description: Whether the webhook is triggered when a list subscriber is
            added.
          example: true
        unsubscribe:
          title: Unsubscribed
          type: boolean
          description: Whether the webhook is triggered when a list member unsubscribes.
          example: true
        profile:
          title: Profile Updated
          type: boolean
          description: Whether the webhook is triggered when a subscriber's profile
            is updated.
          example: true
        cleaned:
          title: Cleaned
          type: boolean
          description: Whether the webhook is triggered when a subscriber's email
            address is cleaned from the list.
          example: true
        upemail:
          title: Email Address Updated
          type: boolean
          description: Whether the webhook is triggered when a subscriber's email
            address is changed.
          example: true
        campaign:
          title: Campaign Sent
          type: boolean
          description: Whether the webhook is triggered when a campaign is sent or
            cancelled.
          example: true
      description: The events that can trigger the webhook and whether they are enabled.
      example: null
    Hours:
      title: Hours
      required:
      - type
      type: object
      properties:
        type:
          title: Email Send Time Settings
          type: string
          description: When to send the Automation email.
          enum:
          - send_asap
          - send_between
          - send_at
      description: The hours an Automation workflow can send.
      example:
        type: send_asap
    List Webhooks:
      title: List Webhooks
      type: object
      properties:
        webhooks:
          title: Webhooks
          type: array
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List Webhooks_2'
        list_id:
          title: List ID
          type: string
          description: The list id.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Manage webhooks for a specific list.
      example:
        list_id: list_id
        webhooks:
        - sources:
            admin: true
            api: true
            user: true
          list_id: 4ca5becb8d
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: 5d9a5e3f7b
          url: http://yourdomain.com/webhook
          events:
            subscribe: true
            unsubscribe: true
            profile: true
            cleaned: true
            campaign: true
            upemail: true
        - sources:
            admin: true
            api: true
            user: true
          list_id: 4ca5becb8d
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          id: 5d9a5e3f7b
          url: http://yourdomain.com/webhook
          events:
            subscribe: true
            unsubscribe: true
            profile: true
            cleaned: true
            campaign: true
            upemail: true
        _links:
        - null
        - null
        total_items: 0
    Abuse Complaint_3:
      title: Abuse Complaint
      type: object
      properties:
        id:
          title: Abuse Report ID
          type: integer
          description: The id for the abuse report
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id for the abuse report
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id for the abuse report.
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        date:
          title: Date
          type: string
          description: Date for the abuse report
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Details of abuse complaints for a specific list. An abuse complaint
        occurs when your recipient clicks to 'report spam' in their email program.
      example:
        email_id: email_id
        date: date
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        id: 0
        vip: true
        campaign_id: campaign_id
    Forwards:
      title: Forwards
      type: object
      properties:
        forwards_count:
          title: Total Forwards
          type: integer
          description: How many times the campaign has been forwarded.
        forwards_opens:
          title: Forward Opens
          type: integer
          description: How many times the forwarded campaign has been opened.
      description: An object describing the forwards and forward activity for the
        campaign.
      example:
        forwards_count: 7
        forwards_opens: 9
    Abuse Complaint_2:
      title: Abuse Complaint
      type: object
      properties:
        id:
          title: Abuse Report ID
          type: integer
          description: The id for the abuse report
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id for the abuse report
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique id of the list for the abuse report.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        date:
          title: Date
          type: string
          description: Date for the abuse report
          format: date-time
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Details of abuse complaints for a specific list. An abuse complaint
        occurs when your recipient clicks to 'report spam' in their email program.
      example:
        email_id: email_id
        date: 2000-01-23T04:56:07.000+00:00
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        id: 0
        list_is_active: true
        vip: true
        campaign_id: campaign_id
    Upload Archive:
      title: Upload Archive
      required:
      - archive_content
      type: object
      properties:
        archive_content:
          title: Archive Content
          type: string
          description: The base64-encoded representation of the archive file.
        archive_type:
          title: Archive Type
          type: string
          description: The type of encoded file. Defaults to zip.
          enum:
          - zip
          - tar.gz
          - tar.bz2
          - tar
          - tgz
          - tbz
      description: "Available when uploading an archive to create campaign content.\
        \ The archive should include all campaign content and images. [Learn more](https://mailchimp.com/help/import-a-custom-html-template/)."
      example: null
    Daily List Activity:
      title: Daily List Activity
      type: object
      properties:
        day:
          title: Day
          type: string
          description: The date for the activity summary.
          readOnly: true
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails sent on the date for the activity
            summary.
          readOnly: true
        unique_opens:
          title: Unique Opens
          type: integer
          description: The number of unique opens.
          readOnly: true
        recipient_clicks:
          title: Recipient Clicks
          type: integer
          description: The number of clicks.
          readOnly: true
        hard_bounce:
          title: Hard Bounces
          type: integer
          description: The number of hard bounces.
          readOnly: true
        soft_bounce:
          title: Soft Bounces
          type: integer
          description: The number of soft bounces
          readOnly: true
        subs:
          title: Subscribes
          type: integer
          description: The number of subscribes.
          readOnly: true
        unsubs:
          title: Unsubscribes
          type: integer
          description: The number of unsubscribes.
          readOnly: true
        other_adds:
          title: Other Adds
          type: integer
          description: "The number of subscribers who may have been added outside\
            \ of the [double opt-in process](https://mailchimp.com/help/about-double-opt-in/),\
            \ such as imports or API activity."
          readOnly: true
        other_removes:
          title: Other Removes
          type: integer
          description: "The number of subscribers who may have been removed outside\
            \ of unsubscribing or reporting an email as spam (for example, deleted\
            \ subscribers)."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: One day's worth of list activity. Doesn't include Automation activity.
      example:
        soft_bounce: 5
        hard_bounce: 5
        subs: 2
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        emails_sent: 0
        unsubs: 7
        recipient_clicks: 1
        other_adds: 9
        day: day
        unique_opens: 6
        other_removes: 3
    Subscriber in Customer Journeys audience:
      title: Subscriber in Customer Journey's audience
      required:
      - email_address
      type: object
      properties:
        email_address:
          title: Email Address
          type: string
          description: The list member's email address.
      description: Information about subscribers in a Customer Journey's audience.
    Interest Category:
      title: Interest Category
      required:
      - title
      - type
      type: object
      properties:
        title:
          title: Name
          type: string
          description: The text description of this category. This field appears on
            signup forms and is often phrased as a question.
        display_order:
          title: Display Order
          type: integer
          description: The order that the categories are displayed in the list. Lower
            numbers display first.
        type:
          title: Display Type
          type: string
          description: Determines how this category’s interests appear on signup forms.
          enum:
          - checkboxes
          - dropdown
          - radio
          - hidden
      description: "Interest categories organize interests, which are used to group\
        \ subscribers based on their preferences. These correspond to Group Titles\
        \ the application."
    Ecommerce Promo Code:
      title: E-commerce Promo Code
      required:
      - code
      - id
      - redemption_url
      type: object
      properties:
        id:
          title: Promo Code Foreign ID
          type: string
          description: A unique identifier for the promo code. Restricted to UTF-8
            characters with max length 50.
        code:
          title: Promo Code
          type: string
          description: The discount code. Restricted to UTF-8 characters with max
            length 50.
          example: summersale
        redemption_url:
          title: Redemption Url
          type: string
          description: The url that should be used in the promotion campaign restricted
            to UTF-8 characters with max length 2000.
          example: A url that applies promo code directly at checkout or a url that
            points to sale page or store url
        usage_count:
          title: Promo Code Usage Count
          type: integer
          description: Number of times promo code has been used.
        enabled:
          title: Enabled
          type: boolean
          description: Whether the promo code is currently enabled.
          example: true
        created_at_foreign:
          title: Foreign Create Time
          type: string
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
      description: Information about an Ecommerce Store's specific Promo Code.
    Notes:
      title: Notes
      type: object
      properties:
        note_id:
          title: Note ID
          type: integer
          description: The note id.
          readOnly: true
        created_at:
          title: Created Time
          type: string
          description: The date and time the note was created in ISO 8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Author
          type: string
          description: The author of the note.
          readOnly: true
        note:
          title: Note
          type: string
          description: The content of the note.
          readOnly: true
      description: The most recent Note added about this member.
      readOnly: true
      example:
        note_id: 9
        note: note
        created_at: 2000-01-23T04:56:07.000+00:00
        created_by: created_by
    Eepurl Activity:
      title: Eepurl Activity
      type: object
      properties:
        twitter:
          $ref: '#/components/schemas/Twitter Stats'
        clicks:
          $ref: '#/components/schemas/Click Summary'
        referrers:
          title: Referrers
          type: array
          description: A summary of the top referrers for the campaign.
          readOnly: true
          items:
            $ref: '#/components/schemas/Referrer'
          x-title: Referrers
        eepurl:
          title: Eepurl
          type: string
          description: The shortened link used for tracking.
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "A summary of social activity for the campaign, tracked by EepURL."
      example:
        twitter:
          last_tweet: last_tweet
          statuses:
          - datetime: 2000-01-23T04:56:07.000+00:00
            status_id: status_id
            screen_name: screen_name
            is_retweet: true
            status: status
          - datetime: 2000-01-23T04:56:07.000+00:00
            status_id: status_id
            screen_name: screen_name
            is_retweet: true
            status: status
          first_tweet: first_tweet
          tweets: 0
          retweets: 6
        eepurl: eepurl
        referrers:
        - referrer: referrer
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          first_click: 2000-01-23T04:56:07.000+00:00
        - referrer: referrer
          clicks: 5
          last_click: 2000-01-23T04:56:07.000+00:00
          first_click: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        clicks:
          clicks: 1
          last_click: 2000-01-23T04:56:07.000+00:00
          locations:
          - country: country
            region: NY
          - country: country
            region: NY
          first_click: 2000-01-23T04:56:07.000+00:00
        total_items: 5
        campaign_id: campaign_id
    List Members_1_tags:
      type: object
      properties:
        id:
          title: Tag ID
          type: integer
          description: The tag id.
          readOnly: true
        name:
          title: Tag Name
          type: string
          description: The name of the tag
          readOnly: true
      example:
        name: name
        id: 2
    Member Activity Events:
      title: Member Activity Events
      type: object
      properties:
        activity:
          title: Activity
          type: array
          description: "An array of objects, each representing a member event."
          items:
            $ref: '#/components/schemas/Member Activity_2'
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        contact_id:
          title: Contact ID
          type: string
          description: "As Mailchimp evolves beyond email, you may eventually have\
            \ contacts without email addresses. While the `email_id` is the MD5 hash\
            \ of their email address, this `contact_id` is agnostic of contact’s inclusion\
            \ of an email address."
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The last 50 member events for a list.
      example:
        email_id: email_id
        activity:
        - parent_campaign: parent_campaign
          action: action
          type: type
          title: title
          url: url
          campaign_id: campaign_id
          timestamp: 2000-01-23T04:56:07.000+00:00
        - parent_campaign: parent_campaign
          action: action
          type: type
          title: title
          url: url
          campaign_id: campaign_id
          timestamp: 2000-01-23T04:56:07.000+00:00
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        contact_id: contact_id
        total_items: 0
    ECommerce Report_1:
      title: E-Commerce Report
      type: object
      properties:
        total_orders:
          title: Total Orders
          type: integer
          description: The total orders for a campaign.
          readOnly: true
        total_spent:
          title: Total Spent
          type: number
          description: The total spent for a campaign. Calculated as the sum of all
            order totals with no deductions.
          readOnly: true
        total_revenue:
          title: Total Revenue
          type: number
          description: The total revenue for a campaign. Calculated as the sum of
            all order totals minus shipping and tax totals.
          readOnly: true
      description: E-Commerce stats for a campaign.
      example:
        total_spent: 8.762042012749001
        total_revenue: 9.018348186070783
        total_orders: 6
    Merge Field_3:
      title: Merge Field
      type: object
      properties:
        merge_id:
          title: Merge Field ID
          type: integer
          description: An unchanging id for the merge field.
          readOnly: true
        tag:
          title: Merge Tag
          type: string
          description: "The merge tag used for Mailchimp campaigns and [adding contact\
            \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
        name:
          title: Merge Field Name
          type: string
          description: The name of the merge field (audience field).
        type:
          title: Merge Field Type
          type: string
          description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for the merge field."
          readOnly: true
          enum:
          - text
          - number
          - address
          - phone
          - date
          - url
          - imageurl
          - radio
          - dropdown
          - birthday
          - zip
        required:
          title: Required
          type: boolean
          description: The boolean value if the merge field is required.
        default_value:
          title: Default Value
          type: string
          description: The default value for the merge field if `null`.
        public:
          title: Merge Field Public Status
          type: boolean
          description: Whether the merge field is displayed on the signup form.
        display_order:
          title: Display Order
          type: integer
          description: The order that the merge field displays on the list signup
            form.
        options:
          $ref: '#/components/schemas/Merge Field Options_2'
        help_text:
          title: Merge Field Help Text
          type: string
          description: Extra text to help the subscriber fill out the form.
        list_id:
          title: List ID
          type: string
          description: The ID that identifies this merge field's audience'.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
      example:
        public: true
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        display_order: 6
        options:
          size: 5
          date_format: date_format
          choices:
          - First Choice
          - Second Choice
          - Third Choice
          default_country: 1
          phone_format: phone_format
        merge_id: 0
        default_value: default_value
        tag: tag
        type: text
        required: true
        help_text: help_text
    Merge Field_2:
      title: Merge Field
      required:
      - name
      type: object
      properties:
        tag:
          title: Merge Tag
          type: string
          description: "The merge tag used for Mailchimp campaigns and [adding contact\
            \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
        name:
          title: Merge Field Name
          type: string
          description: The name of the merge field (audience field).
        required:
          title: Required
          type: boolean
          description: Whether the merge field is required to import a contact.
        default_value:
          title: Default Value
          type: string
          description: The default value for the merge field if `null`.
        public:
          title: Merge Field Public Status
          type: boolean
          description: Whether the merge field is displayed on the signup form.
        display_order:
          title: Display Order
          type: integer
          description: The order that the merge field displays on the list signup
            form.
        options:
          $ref: '#/components/schemas/Merge Field Options_1'
        help_text:
          title: Merge Field Help Text
          type: string
          description: Extra text to help the subscriber fill out the form.
      description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
    Carts:
      title: Carts
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        carts:
          title: E-commerce Store Carts
          type: array
          description: "An array of objects, each representing a cart."
          items:
            $ref: '#/components/schemas/Ecommerce Cart_3'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of a store's carts.
      example:
        store_id: store_id
        carts:
        - checkout_url: checkout_url
          tax_total: 6.027456183070403
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - null
          - null
          created_at: 2015-07-15T19:28:00Z
          order_total: 0.8008281904610115
          id: id
          lines:
          - product_variant_title: product_variant_title
            quantity: 1
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 5.962133916683182
            product_id: product_id
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 1
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 5.962133916683182
            product_id: product_id
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          campaign_id: 839488a60b
          currency_code: currency_code
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        - checkout_url: checkout_url
          tax_total: 6.027456183070403
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - null
          - null
          created_at: 2015-07-15T19:28:00Z
          order_total: 0.8008281904610115
          id: id
          lines:
          - product_variant_title: product_variant_title
            quantity: 1
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 5.962133916683182
            product_id: product_id
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          - product_variant_title: product_variant_title
            quantity: 1
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            price: 5.962133916683182
            product_id: product_id
            id: id
            product_variant_id: product_variant_id
            product_title: product_title
          campaign_id: 839488a60b
          currency_code: currency_code
          customer:
            total_spent: 100.0
            orders_count: 4
            email_address: email_address
            address:
              country: United States
              country_code: US
              province: Georgia
              address2: Suite 5000
              city: Atlanta
              address1: 675 Ponce de Leon Ave NE
              province_code: GA
              postal_code: "30308"
            updated_at: 2015-07-15T19:28:00Z
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            last_name: last_name
            created_at: 2015-07-15T19:28:00Z
            opt_in_status: true
            company: company
            id: id
            first_name: first_name
        _links:
        - null
        - null
        total_items: 5
    Merge Field_1:
      title: Merge Field
      type: object
      properties:
        merge_id:
          title: Merge Field ID
          type: integer
          description: An unchanging id for the merge field.
          readOnly: true
        tag:
          title: Merge Tag
          type: string
          description: "The merge tag used for Mailchimp campaigns and [adding contact\
            \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
        name:
          title: Merge Field Name
          type: string
          description: The name of the merge field (audience field).
        type:
          title: Merge Field Type
          type: string
          description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for the merge field."
          readOnly: true
          enum:
          - text
          - number
          - address
          - phone
          - date
          - url
          - imageurl
          - radio
          - dropdown
          - birthday
          - zip
        required:
          title: Required
          type: boolean
          description: The boolean value if the merge field is required.
        default_value:
          title: Default Value
          type: string
          description: The default value for the merge field if `null`.
        public:
          title: Merge Field Public Status
          type: boolean
          description: Whether the merge field is displayed on the signup form.
        display_order:
          title: Display Order
          type: integer
          description: The order that the merge field displays on the list signup
            form.
        options:
          $ref: '#/components/schemas/Merge Field Options_2'
        help_text:
          title: Merge Field Help Text
          type: string
          description: Extra text to help the subscriber fill out the form.
        list_id:
          title: List ID
          type: string
          description: The ID that identifies this merge field's audience'.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
      example:
        public: true
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        display_order: 6
        options:
          size: 5
          date_format: date_format
          choices:
          - First Choice
          - Second Choice
          - Third Choice
          default_country: 1
          phone_format: phone_format
        merge_id: 0
        default_value: default_value
        tag: tag
        type: text
        required: true
        help_text: help_text
    Weekly clicks and visits data_visits:
      type: object
      properties:
        date:
          title: Date
          type: string
          readOnly: true
          example: 2018-04-25
        val:
          title: Value
          type: integer
          readOnly: true
          example: 49
      example:
        date: 2018-04-25
        val: 49
    Collection of Merge Fields:
      title: Collection of Merge Fields
      type: object
      properties:
        merge_fields:
          title: Merge Fields
          type: array
          description: "An array of objects, each representing a merge field resource."
          items:
            $ref: '#/components/schemas/Merge Field_3'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "The [merge fields](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
      example:
        list_id: list_id
        _links:
        - null
        - null
        merge_fields:
        - public: true
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          display_order: 6
          options:
            size: 5
            date_format: date_format
            choices:
            - First Choice
            - Second Choice
            - Third Choice
            default_country: 1
            phone_format: phone_format
          merge_id: 0
          default_value: default_value
          tag: tag
          type: text
          required: true
          help_text: help_text
        - public: true
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          name: name
          display_order: 6
          options:
            size: 5
            date_format: date_format
            choices:
            - First Choice
            - Second Choice
            - Third Choice
            default_country: 1
            phone_format: phone_format
          merge_id: 0
          default_value: default_value
          tag: tag
          type: text
          required: true
          help_text: help_text
        total_items: 5
    Location:
      title: Location
      type: object
      properties:
        latitude:
          title: Latitude
          type: number
          description: The location latitude.
        longitude:
          title: Longitude
          type: number
          description: The location longitude.
      description: Subscriber location information.
      example: null
    Member Activity_2:
      title: Member Activity
      type: object
      properties:
        action:
          title: Action Type
          type: string
          description: The type of action recorded for the subscriber.
        timestamp:
          title: Timestamp
          type: string
          description: The date and time recorded for the action.
          format: date-time
        url:
          title: URL
          type: string
          description: "For clicks, the URL the subscriber clicked on."
        type:
          title: Campaign Type
          type: string
          description: The type of campaign that was sent.
        campaign_id:
          title: Campaign ID
          type: string
          description: The web-based ID for the campaign.
        title:
          title: Campaign Title
          type: string
          description: "If set, the campaign's title."
        parent_campaign:
          title: Parent Campaign ID
          type: string
          description: The ID of the parent campaign.
      description: Member activity events.
      example:
        parent_campaign: parent_campaign
        action: action
        type: type
        title: title
        url: url
        campaign_id: campaign_id
        timestamp: 2000-01-23T04:56:07.000+00:00
    AB Test Options:
      title: A/B Test Options
      required:
      - winner_criteria
      type: object
      properties:
        winner_criteria:
          title: Winning Criteria
          type: string
          description: "The combination that performs the best. This may be determined\
            \ automatically by click rate, open rate, or total revenue -- or you may\
            \ choose manually based on the reporting data you find the most valuable.\
            \ For Multivariate Campaigns testing send_time, winner_criteria is ignored.\
            \ For Multivariate Campaigns with 'manual' as the winner_criteria, the\
            \ winner must be chosen in the Mailchimp web application."
          enum:
          - opens
          - clicks
          - manual
          - total_revenue
        wait_time:
          title: Wait Time
          type: integer
          description: "The number of minutes to wait before choosing the winning\
            \ campaign. The value of wait_time must be greater than 0 and in whole\
            \ hours, specified in minutes."
        test_size:
          title: Test Size
          type: integer
          description: "The percentage of recipients to send the test combinations\
            \ to, must be a value between 10 and 100."
        subject_lines:
          title: Subject Lines
          type: array
          description: "The possible subject lines to test. If no subject lines are\
            \ provided, settings.subject_line will be used."
          items:
            type: string
        send_times:
          title: Send Times
          type: array
          description: "The possible send times to test. The times provided should\
            \ be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to\
            \ test, the test_size will be set to 100% and winner_criteria will be\
            \ ignored."
          items:
            type: string
            format: date-time
        from_names:
          title: From Names
          type: array
          description: "The possible from names. The number of from_names provided\
            \ must match the number of reply_to_addresses. If no from_names are provided,\
            \ settings.from_name will be used."
          items:
            type: string
        reply_to_addresses:
          title: Reply To Addresses
          type: array
          description: "The possible reply-to addresses. The number of reply_to_addresses\
            \ provided must match the number of from_names. If no reply_to_addresses\
            \ are provided, settings.reply_to will be used."
          items:
            type: string
      description: The settings specific to A/B test campaigns.
      example: null
    Batch Webhook_2:
      title: Batch Webhook
      required:
      - url
      type: object
      properties:
        url:
          title: URL
          type: string
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
      description: Update an existing Batch Webook.
    Batch Webhook_3:
      title: Batch Webhook
      type: object
      properties:
        id:
          title: Batch Webhook ID
          type: string
          description: A string that uniquely identifies this Batch Webhook.
          readOnly: true
        url:
          title: URL
          type: string
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A webhook configured for batch status updates.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
        url: http://yourdomain.com/webhook
    Ecommerce Stats:
      title: Ecommerce Stats
      type: object
      properties:
        total_revenue:
          title: Total Revenue
          type: number
          description: The total revenue the list member has brought in.
          readOnly: true
        number_of_orders:
          title: Total Number of Orders
          type: number
          description: The total number of orders placed by the list member.
          readOnly: true
        currency_code:
          title: Currency
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          readOnly: true
          example: USD
      description: Ecommerce stats for the list member if the list is attached to
        a store.
      readOnly: true
      example:
        total_revenue: 5.962133916683182
        number_of_orders: 5.637376656633329
        currency_code: USD
    Batch Webhook_1:
      title: Batch Webhook
      type: object
      properties:
        id:
          title: Batch Webhook ID
          type: string
          description: A string that uniquely identifies this Batch Webhook.
          readOnly: true
        url:
          title: URL
          type: string
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A webhook configured for batch status updates.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        id: id
        url: http://yourdomain.com/webhook
    Campaigns_results:
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign_4'
        snippet:
          title: Matching snippet
          type: string
      example:
        snippet: snippet
        campaign:
          archive_url: archive_url
          resendable: true
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            use_conversation: true
            authenticate: true
            to_name: to_name
            timewarp: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 5
            folder_id: folder_id
          variate_settings:
            send_times:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            combinations:
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            - subject_line: 7
              send_time: 9
              reply_to: 2
              recipients: 7
              id: id
              from_name: 3
              content_description: 4
            wait_time: 5
            subject_lines:
            - subject_lines
            - subject_lines
            contents:
            - contents
            - contents
            test_size: 2
            winning_combination_id: winning_combination_id
            reply_to_addresses:
            - reply_to_addresses
            - reply_to_addresses
            winner_criteria: opens
            winning_campaign_id: winning_campaign_id
            from_names:
            - from_names
            - from_names
          ab_split_opts:
            pick_winner: opens
            wait_time: 1
            wait_units: hours
            subject_b: subject_b
            subject_a: subject_a
            split_test: subject
            from_name_a: from_name_a
            from_name_b: from_name_b
            send_time_winner: send_time_winner
            reply_email_b: reply_email_b
            reply_email_a: reply_email_a
            send_time_a: 2000-01-23T04:56:07.000+00:00
            send_time_b: 2000-01-23T04:56:07.000+00:00
            split_size: 34
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          web_id: 0
          type: regular
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          send_time: 2000-01-23T04:56:07.000+00:00
          rss_opts:
            schedule:
              hour: 2
              weekly_send_day: sunday
              daily_send:
                sunday: true
                saturday: true
                tuesday: true
                wednesday: true
                thursday: true
                friday: true
                monday: true
              monthly_send_date: 3.1764016704468894
            last_sent: 2000-01-23T04:56:07.000+00:00
            constrain_rss_img: true
            feed_url: http://example.com/aeiou
            frequency: daily
          parent_campaign_id: parent_campaign_id
          content_type: template
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - {}
              - {}
            list_id: list_id
            segment_text: segment_text
            recipient_count: 1
            list_name: list_name
            list_is_active: true
          emails_sent: 6
          id: id
          delivery_status:
            emails_sent: 6
            can_cancel: true
            emails_canceled: 3
            enabled: true
            status: delivering
          long_archive_url: long_archive_url
          status: save
          report_summary:
            subscriber_clicks: 9
            click_rate: 9.369310271410669
            ecommerce:
              total_spent: 8.762042012749001
              total_revenue: 9.018348186070783
              total_orders: 6
            opens: 7
            clicks: 5
            unique_opens: 1
            open_rate: 4.965218492984954
    Capsule CRM Tracking:
      title: Capsule CRM Tracking
      type: object
      properties:
        notes:
          title: Capsule Note
          type: boolean
          description: Update contact notes for a campaign based on subscriber email
            addresses.
      description: Deprecated
      example:
        notes: true
    Interests:
      title: Interests
      type: object
      properties:
        interests:
          title: Interests
          type: array
          description: An array of this category's interests
          items:
            $ref: '#/components/schemas/Interest_3'
        list_id:
          title: List ID
          type: string
          description: The unique list id that the interests belong to.
        category_id:
          title: Interest Category ID
          type: string
          description: The id for the interest category.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of this category's interests
      example:
        list_id: list_id
        category_id: category_id
        _links:
        - null
        - null
        interests:
        - category_id: category_id
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          subscriber_count: subscriber_count
          name: name
          display_order: 0
          id: id
        - category_id: category_id
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          subscriber_count: subscriber_count
          name: name
          display_order: 0
          id: id
        total_items: 6
    Member Activity_1:
      title: Member Activity
      type: object
      properties:
        timestamp:
          title: Timestamp
          type: string
          description: The date and time recorded for the action in ISO 8601 format.
          format: date-time
      description: A summary of the interaction with the campaign.
      example:
        timestamp: 2000-01-23T04:56:07.000+00:00
    Campaign Reports:
      title: Campaign Reports
      type: object
      properties:
        feedback:
          title: Campaign Feedback
          type: array
          description: A collection of feedback items for a campaign.
          items:
            $ref: '#/components/schemas/Campaign Feedback_3'
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of the comment feedback for a specific campaign.
      example:
        feedback:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          parent_id: 6
          feedback_id: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          is_complete: true
          source: api
          message: message
          created_by: created_by
          block_id: 1
          campaign_id: campaign_id
        - updated_at: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          parent_id: 6
          feedback_id: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          is_complete: true
          source: api
          message: message
          created_by: created_by
          block_id: 1
          campaign_id: campaign_id
        _links:
        - null
        - null
        total_items: 5
        campaign_id: campaign_id
    Goal:
      title: Goal
      type: object
      properties:
        goal_id:
          title: Goal ID
          type: integer
          description: The id for a Goal event.
        event:
          title: Event Name
          type: string
          description: The name/type of Goal event triggered.
        last_visited_at:
          title: Last Visit Date
          type: string
          description: The date and time the user last triggered the Goal event in
            ISO 8601 format.
          format: date-time
        data:
          title: Additional Data
          type: string
          description: Any extra data passed with the Goal event.
      description: A single instance of a goal activity.
      example:
        goal_id: 0
        data: data
        last_visited_at: 2000-01-23T04:56:07.000+00:00
        event: event
    RSS Options_3:
      title: RSS Options
      type: object
      properties:
        feed_url:
          title: Feed URL
          type: string
          description: The URL for the RSS feed.
          format: uri
        frequency:
          title: Frequency
          type: string
          description: The frequency of the RSS Campaign.
          enum:
          - daily
          - weekly
          - monthly
        schedule:
          $ref: '#/components/schemas/Sending Schedule'
        last_sent:
          title: Last Sent
          type: string
          description: The date the campaign was last sent.
          format: date-time
          readOnly: true
        constrain_rss_img:
          title: Constrain RSS Images
          type: boolean
          description: Whether to add CSS to images in the RSS feed to constrain their
            width in campaigns.
      description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
        \ options for a campaign."
      example:
        schedule:
          hour: 2
          weekly_send_day: sunday
          daily_send:
            sunday: true
            saturday: true
            tuesday: true
            wednesday: true
            thursday: true
            friday: true
            monday: true
          monthly_send_date: 3.1764016704468894
        last_sent: 2000-01-23T04:56:07.000+00:00
        constrain_rss_img: true
        feed_url: http://example.com/aeiou
        frequency: daily
    RSS Options_1:
      title: RSS Options
      required:
      - feed_url
      - frequency
      type: object
      properties:
        feed_url:
          title: Feed URL
          type: string
          description: The URL for the RSS feed.
          format: uri
        frequency:
          title: Frequency
          type: string
          description: The frequency of the RSS Campaign.
          enum:
          - daily
          - weekly
          - monthly
        schedule:
          $ref: '#/components/schemas/Sending Schedule'
        constrain_rss_img:
          title: Constrain RSS Images
          type: boolean
          description: Whether to add CSS to images in the RSS feed to constrain their
            width in campaigns.
      description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
        \ options for a campaign."
      example: null
    RSS Options_2:
      title: RSS Options
      required:
      - feed_url
      - frequency
      type: object
      properties:
        feed_url:
          title: Feed URL
          type: string
          description: The URL for the RSS feed.
          format: uri
        frequency:
          title: Frequency
          type: string
          description: The frequency of the RSS Campaign.
          enum:
          - daily
          - weekly
          - monthly
        schedule:
          $ref: '#/components/schemas/Sending Schedule_1'
        last_sent:
          title: Last Sent
          type: string
          description: The date the campaign was last sent.
          format: date-time
          readOnly: true
        constrain_rss_img:
          title: Constrain RSS Images
          type: boolean
          description: Whether to add CSS to images in the RSS feed to constrain their
            width in campaigns.
      description: "[RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/)\
        \ options for a campaign."
      example:
        schedule:
          hour: 16
          weekly_send_day: sunday
          daily_send:
            sunday: true
            saturday: true
            tuesday: true
            wednesday: true
            thursday: true
            friday: true
            monday: true
          monthly_send_date: 28.834477156190985
        last_sent: 2000-01-23T04:56:07.000+00:00
        constrain_rss_img: true
        feed_url: http://example.com/aeiou
        frequency: daily
    Abuse Complaint:
      title: Abuse Complaint
      type: object
      properties:
        id:
          title: Abuse Report ID
          type: integer
          description: The id for the abuse report
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id for the abuse report
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id for the abuse report.
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        date:
          title: Date
          type: string
          description: Date for the abuse report
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Details of abuse complaints for a specific list. An abuse complaint
        occurs when your recipient clicks to 'report spam' in their email program.
      example:
        email_id: email_id
        date: date
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        id: 0
        vip: true
        campaign_id: campaign_id
    Outreach:
      title: Outreach
      type: object
      properties:
        id:
          title: Outreach ID
          type: string
          description: A unique identifier for the outreach. Can be an email campaign
            ID.
          example: 839488a60b
      description: "The outreach associated with this order. For example, an email\
        \ campaign or Facebook ad."
      example: null
    Ecommerce Order Line Item_4:
      title: E-commerce Order Line Item
      type: object
      properties:
        product_id:
          title: Order Line Item Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the order
            line item.
        product_variant_id:
          title: Order Line Item Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the order line item.
        quantity:
          title: Quantity
          type: integer
          description: The quantity of an order line item.
        price:
          title: Price
          type: number
          description: The price of an order line item.
        discount:
          title: Discount
          type: number
          description: The total discount amount applied to this line item.
      description: Information about a specific order line.
    Ecommerce Order Line Item_5:
      title: E-commerce Order Line Item
      type: object
      properties:
        id:
          title: Order Line Item Foreign ID
          type: string
          description: A unique identifier for an order line item.
          readOnly: true
        product_id:
          title: Order Line Item Product Foreign ID
          type: string
          description: A unique identifier for the product associated with an order
            line item.
        product_title:
          title: Order Line Item Product Title
          type: string
          description: The name of the product for an order line item.
          readOnly: true
        product_variant_id:
          title: Order Line Item Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            an order line item.
        product_variant_title:
          title: Order Line Item Product Variant Title
          type: string
          description: The name of the product variant for an order line item.
          readOnly: true
        image_url:
          title: Product Image URL
          type: string
          description: The image URL for a product.
          readOnly: true
        quantity:
          title: Quantity
          type: integer
          description: The order line item quantity.
        price:
          title: Price
          type: number
          description: The order line item price.
        discount:
          title: Discount
          type: number
          description: The total discount amount applied to a line item.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific order line.
      example:
        product_variant_title: product_variant_title
        quantity: 2
        _links:
        - null
        - null
        image_url: image_url
        price: 7.061401241503109
        product_id: product_id
        discount: 9.301444243932576
        id: id
        product_variant_id: product_variant_id
        product_title: product_title
    Collection of Tags:
      title: Collection of Tags
      type: object
      properties:
        tags:
          title: Tags
          type: array
          description: A list of tags assigned to the list member.
          items:
            $ref: '#/components/schemas/Collection of Tags_tags'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of tags assigned to a list member.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_items: 6
        tags:
        - date_added: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
        - date_added: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
    Ecommerce Order Line Item_2:
      title: E-commerce Order Line Item
      required:
      - id
      - price
      - product_id
      - product_variant_id
      - quantity
      type: object
      properties:
        id:
          title: Order Line Item Foreign ID
          type: string
          description: A unique identifier for the order line item.
        product_id:
          title: Order Line Item Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the order
            line item.
        product_variant_id:
          title: Order Line Item Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the order line item.
        quantity:
          title: Quantity
          type: integer
          description: The quantity of an order line item.
        price:
          title: Price
          type: number
          description: The price of an order line item.
        discount:
          title: Discount
          type: number
          description: The total discount amount applied to this line item.
      description: Information about a specific order line.
    Ecommerce Order Line Item_3:
      title: E-commerce Order Line Item
      type: object
      properties:
        id:
          title: Order Line Item Foreign ID
          type: string
          description: A unique identifier for an order line item.
          readOnly: true
        product_id:
          title: Order Line Item Product Foreign ID
          type: string
          description: A unique identifier for the product associated with an order
            line item.
        product_title:
          title: Order Line Item Product Title
          type: string
          description: The name of the product for an order line item.
          readOnly: true
        product_variant_id:
          title: Order Line Item Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            an order line item.
        product_variant_title:
          title: Order Line Item Product Variant Title
          type: string
          description: The name of the product variant for an order line item.
          readOnly: true
        image_url:
          title: Product Image URL
          type: string
          description: The image URL for a product.
          readOnly: true
        quantity:
          title: Quantity
          type: integer
          description: The order line item quantity.
        price:
          title: Price
          type: number
          description: The order line item price.
        discount:
          title: Discount
          type: number
          description: The total discount amount applied to a line item.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific order line.
      example:
        product_variant_title: product_variant_title
        quantity: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        image_url: image_url
        price: 6.027456183070403
        product_id: product_id
        discount: 1.4658129805029452
        id: id
        product_variant_id: product_variant_id
        product_title: product_title
    Operations:
      title: Operations
      required:
      - method
      - path
      type: object
      properties:
        method:
          title: HTTP Method
          type: string
          description: The HTTP method to use for the operation.
          example: POST
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
        path:
          title: Path
          type: string
          description: The relative path to use for the operation.
          example: /lists
        params:
          title: Query Parameters
          type: object
          properties: {}
          description: "Any request query parameters. Example parameters: {\"count\"\
            :10, \"offset\":0}"
          example: "{\"count\":10,\"offset\":0}"
        body:
          title: Body
          type: string
          description: A string containing the JSON body to use with the request.
          example: "{\"title\":\"Test\"}"
        operation_id:
          title: Operation ID
          type: string
          description: An optional client-supplied id returned with the operation
            results.
          example: my-id-123
      example: null
    inline_response_200_13_report_summary_extended_at:
      type: object
      properties:
        datetime:
          type: string
        timezone:
          type: string
      example:
        datetime: datetime
        timezone: timezone
    Automation Delay_1:
      title: Automation Delay
      type: object
      properties:
        amount:
          title: Delay Amount
          type: integer
          description: The delay amount for an Automation email.
          readOnly: true
        type:
          title: Delay Type
          type: string
          description: The type of delay for an Automation email.
          enum:
          - now
          - day
          - hour
          - week
        direction:
          title: Delay Direction
          type: string
          description: Whether the delay settings describe before or after the delay
            action of an Automation email.
          enum:
          - before
          - after
        action:
          title: Delay Action
          type: string
          description: The action that triggers the delay of an Automation email.
          enum:
          - previous_campaign_sent
          - previous_campaign_opened
          - previous_campaign_not_opened
          - previous_campaign_clicked_any
          - previous_campaign_not_clicked_any
          - previous_campaign_specific_clicked
          - ecomm_bought_any
          - ecomm_bought_product
          - ecomm_bought_category
          - ecomm_not_bought_any
          - ecomm_abandoned_cart
          - campaign_sent
          - opened_email
          - not_opened_email
          - clicked_email
          - not_clicked_email
          - campaign_specific_clicked
          - manual
          - signup
          - merge_changed
          - group_add
          - group_remove
          - mandrill_sent
          - mandrill_opened
          - mandrill_clicked
          - mandrill_any
          - api
          - goal
          - annual
          - birthday
          - date
          - date_added
          - tag_add
        action_description:
          title: Delay Action Description
          type: string
          description: The user-friendly description of the action that triggers an
            Automation email.
          readOnly: true
          example: subscribers purchase anything from your store
        full_description:
          title: Full Delay Description
          type: string
          description: The user-friendly description of the delay and trigger action
            settings for an Automation email.
          readOnly: true
          example: 1 day after subscribers purchase anything from your store
      description: The delay settings for an Automation email.
      example:
        amount: 6
        full_description: 1 day after subscribers purchase anything from your store
        action_description: subscribers purchase anything from your store
        action: previous_campaign_sent
        type: now
        direction: before
    List Members_5:
      title: List Members
      type: object
      properties:
        id:
          title: Email ID
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
        unique_email_id:
          title: Unique Email ID
          type: string
          description: An identifier for the address across all of Mailchimp.
          readOnly: true
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
        merge_fields:
          title: Member Merge Var
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: An individual merge var and value for a member.
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        stats:
          $ref: '#/components/schemas/Subscriber Stats'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
          readOnly: true
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          readOnly: true
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
          readOnly: true
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          readOnly: true
        member_rating:
          title: Member Rating
          type: integer
          description: "Star rating for this member, between 1 and 5."
          readOnly: true
        last_changed:
          title: Last Changed Date
          type: string
          description: The date and time the member's info was last changed in ISO
            8601 format.
          format: date-time
          readOnly: true
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        email_client:
          title: Email Client
          type: string
          description: The list member's email client.
          readOnly: true
        location:
          $ref: '#/components/schemas/Location_1'
        last_note:
          $ref: '#/components/schemas/Notes'
        tags_count:
          title: Tags Count
          type: integer
          description: The number of tags applied to this member.
          readOnly: true
        tags:
          title: Tags
          type: array
          description: The tags applied to this member.
          items:
            $ref: '#/components/schemas/List Members_1_tags'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      example:
        email_type: email_type
        list_id: list_id
        timestamp_opt: 2000-01-23T04:56:07.000+00:00
        last_note:
          note_id: 9
          note: note
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        timestamp_signup: 2000-01-23T04:56:07.000+00:00
        ip_signup: ip_signup
        member_rating: 1
        language: language
        tags:
        - name: name
          id: 2
        - name: name
          id: 2
        unique_email_id: unique_email_id
        email_address: email_address
        email_client: email_client
        stats:
          avg_click_rate: 6.027456183070403
          avg_open_rate: 0.8008281904610115
        tags_count: 3
        ip_opt: ip_opt
        location:
          country_code: country_code
          dstoff: 7
          timezone: timezone
          latitude: 5.962133916683182
          gmtoff: 2
          longitude: 5.637376656633329
        id: id
        interests:
          key: true
        vip: true
        status: subscribed
        last_changed: 2000-01-23T04:56:07.000+00:00
    List Members_4:
      title: List Members
      type: object
      properties:
        id:
          title: Email ID
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
        unique_email_id:
          title: Unique Email ID
          type: string
          description: An identifier for the address across all of Mailchimp.
          readOnly: true
        contact_id:
          title: Contact ID
          type: string
          description: "As Mailchimp evolves beyond email, you may eventually have\
            \ contacts without email addresses. While the `id` is the MD5 hash of\
            \ their email address, this `contact_id` is agnostic of contact’s inclusion\
            \ of an email address."
          readOnly: true
        full_name:
          title: Full Name
          type: string
          description: The contact's full name.
          readOnly: true
        web_id:
          title: Member Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this member\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`."
          readOnly: true
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          - archived
        unsubscribe_reason:
          title: Unsubscribe Reason
          type: string
          description: A subscriber's reason for unsubscribing.
        consents_to_one_to_one_messaging:
          title: Messaging Consent
          type: boolean
          description: Indicates whether a contact consents to 1:1 messaging.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        stats:
          $ref: '#/components/schemas/Subscriber Stats_1'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
          readOnly: true
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          readOnly: true
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
          readOnly: true
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscribe confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          readOnly: true
        member_rating:
          title: Member Rating
          type: integer
          description: "Star rating for this member, between 1 and 5."
          readOnly: true
        last_changed:
          title: Last Changed Date
          type: string
          description: The date and time the member's info was last changed in ISO
            8601 format.
          format: date-time
          readOnly: true
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        email_client:
          title: Email Client
          type: string
          description: The list member's email client.
          readOnly: true
        location:
          $ref: '#/components/schemas/Location_3'
        marketing_permissions:
          title: Marketing Permissions
          type: array
          description: The marketing permissions for the subscriber.
          items:
            $ref: '#/components/schemas/Marketing Permission_1'
        last_note:
          $ref: '#/components/schemas/Notes'
        source:
          title: Subscriber Source
          type: string
          description: The source from which the subscriber was added to this list.
          readOnly: true
        tags_count:
          title: Tags Count
          type: integer
          description: The number of tags applied to this member.
          readOnly: true
        tags:
          title: Tags
          type: array
          description: "Returns up to 50 tags applied to this member. To retrieve\
            \ all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/)."
          items:
            $ref: '#/components/schemas/List Members_1_tags'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      example:
        marketing_permissions:
        - marketing_permission_id: marketing_permission_id
          text: text
          enabled: true
        - marketing_permission_id: marketing_permission_id
          text: text
          enabled: true
        list_id: list_id
        last_note:
          note_id: 9
          note: note
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        ip_signup: ip_signup
        member_rating: 2
        language: language
        source: source
        contact_id: contact_id
        unsubscribe_reason: unsubscribe_reason
        email_client: email_client
        stats:
          ecommerce_data:
            total_revenue: 5.962133916683182
            number_of_orders: 5.637376656633329
            currency_code: USD
          avg_click_rate: 1.4658129805029452
          avg_open_rate: 6.027456183070403
        tags_count: 4
        ip_opt: ip_opt
        id: id
        vip: true
        email_type: email_type
        timestamp_opt: 2000-01-23T04:56:07.000+00:00
        timestamp_signup: 2000-01-23T04:56:07.000+00:00
        web_id: 0
        tags:
        - name: name
          id: 2
        - name: name
          id: 2
        unique_email_id: unique_email_id
        email_address: email_address
        full_name: full_name
        location:
          country_code: country_code
          dstoff: 2
          timezone: timezone
          latitude: 7.061401241503109
          gmtoff: 3
          region: region
          longitude: 9.301444243932576
        interests:
          key: true
        status: subscribed
        consents_to_one_to_one_messaging: true
        last_changed: 2000-01-23T04:56:07.000+00:00
    An option for Signup Form Styles:
      title: An option for Signup Form Styles
      type: object
      properties:
        property:
          title: Property
          type: string
          description: A string that identifies the property.
          example: background-color
        value:
          title: Value
          type: string
          description: A string that identifies value of the property.
          example: '#111111'
      description: An option for Signup Form Styles.
      example:
        property: background-color
        value: '#111111'
    List Members_1:
      title: List Members
      type: object
      properties:
        members:
          title: Members
          type: array
          description: "An array of objects, each representing a specific list member."
          items:
            $ref: '#/components/schemas/List Members_4'
        list_id:
          title: List ID
          type: string
          description: The list id.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "Manage members of a specific Mailchimp list, including currently\
        \ subscribed, unsubscribed, and bounced members."
      example:
        list_id: list_id
        _links:
        - null
        - null
        members:
        - marketing_permissions:
          - marketing_permission_id: marketing_permission_id
            text: text
            enabled: true
          - marketing_permission_id: marketing_permission_id
            text: text
            enabled: true
          list_id: list_id
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          ip_signup: ip_signup
          member_rating: 2
          language: language
          source: source
          contact_id: contact_id
          unsubscribe_reason: unsubscribe_reason
          email_client: email_client
          stats:
            ecommerce_data:
              total_revenue: 5.962133916683182
              number_of_orders: 5.637376656633329
              currency_code: USD
            avg_click_rate: 1.4658129805029452
            avg_open_rate: 6.027456183070403
          tags_count: 4
          ip_opt: ip_opt
          id: id
          vip: true
          email_type: email_type
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          web_id: 0
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          full_name: full_name
          location:
            country_code: country_code
            dstoff: 2
            timezone: timezone
            latitude: 7.061401241503109
            gmtoff: 3
            region: region
            longitude: 9.301444243932576
          interests:
            key: true
          status: subscribed
          consents_to_one_to_one_messaging: true
          last_changed: 2000-01-23T04:56:07.000+00:00
        - marketing_permissions:
          - marketing_permission_id: marketing_permission_id
            text: text
            enabled: true
          - marketing_permission_id: marketing_permission_id
            text: text
            enabled: true
          list_id: list_id
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          ip_signup: ip_signup
          member_rating: 2
          language: language
          source: source
          contact_id: contact_id
          unsubscribe_reason: unsubscribe_reason
          email_client: email_client
          stats:
            ecommerce_data:
              total_revenue: 5.962133916683182
              number_of_orders: 5.637376656633329
              currency_code: USD
            avg_click_rate: 1.4658129805029452
            avg_open_rate: 6.027456183070403
          tags_count: 4
          ip_opt: ip_opt
          id: id
          vip: true
          email_type: email_type
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          web_id: 0
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          full_name: full_name
          location:
            country_code: country_code
            dstoff: 2
            timezone: timezone
            latitude: 7.061401241503109
            gmtoff: 3
            region: region
            longitude: 9.301444243932576
          interests:
            key: true
          status: subscribed
          consents_to_one_to_one_messaging: true
          last_changed: 2000-01-23T04:56:07.000+00:00
        total_items: 7
    Ecommerce Order_1:
      title: E-commerce Order
      type: object
      properties:
        id:
          title: Order Foreign ID
          type: string
          description: A unique identifier for the order.
          readOnly: true
        customer:
          $ref: '#/components/schemas/Ecommerce Customer_6'
        store_id:
          title: Store Foreign ID
          type: string
          description: The unique identifier for the store.
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies the campaign associated with
            an order.
          example: 839488a60b
        landing_site:
          title: Landing Site
          type: string
          description: The URL for the page where the buyer landed when entering the
            shop.
          example: http://www.example.com?source=abc
        financial_status:
          title: Financial Status
          type: string
          description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        fulfillment_status:
          title: Fulfillment Status
          type: string
          description: "The fulfillment status for the order. Use this parameter to\
            \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        currency_code:
          title: Currency Code
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
        order_total:
          title: Order Total
          type: number
          description: The order total associated with an order.
        order_url:
          title: Order URL
          type: string
          description: The URL for the order.
        discount_total:
          title: Discount Total
          type: number
          description: The total amount of the discounts to be applied to the price
            of the order.
        tax_total:
          title: Tax Total
          type: number
          description: The tax total associated with an order.
        shipping_total:
          title: Shipping Total
          type: number
          description: The shipping total for the order.
        tracking_code:
          title: Tracking Code
          type: string
          description: The Mailchimp tracking code for the order. Uses the 'mc_tc'
            parameter in E-Commerce tracking URLs.
          enum:
          - prec
        processed_at_foreign:
          title: Foreign Processed Time
          type: string
          description: The date and time the order was processed in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        cancelled_at_foreign:
          title: Foreign Cancel Time
          type: string
          description: The date and time the order was cancelled in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the order was updated in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        shipping_address:
          $ref: '#/components/schemas/Shipping Address_1'
        billing_address:
          $ref: '#/components/schemas/Billing Address_1'
        promos:
          title: Promos
          type: array
          description: The promo codes applied on the order
          items:
            $ref: '#/components/schemas/Orders_1_promos'
        lines:
          title: Order Line Items
          type: array
          description: An array of the order's line items.
          items:
            $ref: '#/components/schemas/Ecommerce Order Line Item_5'
        outreach:
          $ref: '#/components/schemas/Outreach_1'
        tracking_number:
          title: Tracking number
          type: string
          description: The tracking number associated with the order.
        tracking_carrier:
          title: Tracking carrier
          type: string
          description: The tracking carrier associated with the order.
        tracking_url:
          title: Tracking URL
          type: string
          description: The tracking URL associated with the order.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific order.
      example:
        discount_total: 6.027456183070403
        fulfillment_status: fulfillment_status
        tax_total: 1.4658129805029452
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        processed_at_foreign: 2015-07-15T19:28:00Z
        billing_address:
          country: United States
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          country_code: US
          province: Georgia
          phone: "8675309"
          name: Freddie Chimpenheimer
          company: company
          postal_code: "30308"
          longitude: -75.68903
        currency_code: currency_code
        landing_site: http://www.example.com?source=abc
        order_url: order_url
        tracking_number: tracking_number
        id: id
        shipping_address:
          country: United States
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          country_code: US
          province: Georgia
          phone: "8675309"
          name: Freddie Chimpenheimer
          company: company
          postal_code: "30308"
          longitude: -75.68903
        updated_at_foreign: 2015-07-15T19:28:00Z
        lines:
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - null
          - null
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - null
          - null
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        promos:
        - code: code
          amount_discounted: 5.637376656633329
          type: fixed
        - code: code
          amount_discounted: 5.637376656633329
          type: fixed
        tracking_url: tracking_url
        campaign_id: 839488a60b
        cancelled_at_foreign: 2015-07-15T19:28:00Z
        store_id: store_id
        shipping_total: 5.962133916683182
        outreach:
          published_time: 2017-06-06T13:56:12Z
          name: Freddie's Jokes
          id: 839488a60b
          type: regular
        tracking_code: prec
        tracking_carrier: tracking_carrier
        financial_status: financial_status
        order_total: 0.8008281904610115
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
    Ecommerce Order_2:
      title: E-commerce Order
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Ecommerce Customer_1'
        campaign_id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies the campaign associated with
            an order.
          example: 839488a60b
        landing_site:
          title: Landing Site
          type: string
          description: The URL for the page where the buyer landed when entering the
            shop.
          example: http://www.example.com?source=abc
        financial_status:
          title: Financial Status
          type: string
          description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        fulfillment_status:
          title: Fulfillment Status
          type: string
          description: "The fulfillment status for the order. Use this parameter to\
            \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        currency_code:
          title: Currency Code
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
        order_total:
          title: Order Total
          type: number
          description: The order total associated with an order.
        order_url:
          title: Order URL
          type: string
          description: The URL for the order.
        discount_total:
          title: Discount Total
          type: number
          description: The total amount of the discounts to be applied to the price
            of the order.
        tax_total:
          title: Tax Total
          type: number
          description: The tax total associated with an order.
        shipping_total:
          title: Shipping Total
          type: number
          description: The shipping total for the order.
        tracking_code:
          title: Tracking Code
          type: string
          description: The Mailchimp tracking code for the order. Uses the 'mc_tc'
            parameter in E-Commerce tracking URLs.
          enum:
          - prec
        processed_at_foreign:
          title: Foreign Processed Time
          type: string
          description: The date and time the order was processed in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        cancelled_at_foreign:
          title: Foreign Cancel Time
          type: string
          description: "The date and time the order was cancelled in ISO 8601 format.\
            \ Note: passing a value for this parameter will cancel the order being\
            \ edited."
          format: date-time
          example: 2015-07-15T19:28:00Z
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the order was updated in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        shipping_address:
          $ref: '#/components/schemas/Shipping Address_1'
        billing_address:
          $ref: '#/components/schemas/Billing Address_1'
        promos:
          title: Promos
          type: array
          description: "The promo codes applied on the order. Note: Patch will completely\
            \ replace the value of promos with the new one provided."
          items:
            $ref: '#/components/schemas/ecommercestoresstore_idorders_promos'
        lines:
          title: Order Line Items
          type: array
          description: An array of the order's line items.
          items:
            $ref: '#/components/schemas/Ecommerce Order Line Item_1'
        outreach:
          $ref: '#/components/schemas/Outreach'
        tracking_number:
          title: Tracking number
          type: string
          description: The tracking number associated with the order.
        tracking_carrier:
          title: Tracking carrier
          type: string
          description: The tracking carrier associated with the order.
        tracking_url:
          title: Tracking URL
          type: string
          description: The tracking URL associated with the order.
      description: Information about a specific order.
    Industry Stats:
      title: Industry Stats
      type: object
      properties:
        type:
          title: Industry Type
          type: string
          description: "The type of business industry associated with your account.\
            \ For example: retail, education, etc."
        open_rate:
          title: Open Rate
          type: number
          description: The industry open rate.
        click_rate:
          title: Click Rate
          type: number
          description: The industry click rate.
        bounce_rate:
          title: Bounce Rate
          type: number
          description: The industry bounce rate.
        unopen_rate:
          title: Unopened Rate
          type: number
          description: The industry unopened rate.
        unsub_rate:
          title: Unsubscribe Rate
          type: number
          description: The industry unsubscribe rate.
        abuse_rate:
          title: Abuse Rate
          type: number
          description: The industry abuse rate.
      description: The average campaign statistics for your industry.
      example:
        unopen_rate: 9.369310271410669
        click_rate: 5.025004791520295
        bounce_rate: 9.965781217890562
        unsub_rate: 6.683562403749608
        type: type
        abuse_rate: 8.762042012749001
        open_rate: 4.965218492984954
    Ecommerce Order_3:
      title: E-commerce Order
      type: object
      properties:
        id:
          title: Order Foreign ID
          type: string
          description: A unique identifier for the order.
          readOnly: true
        customer:
          $ref: '#/components/schemas/Ecommerce Customer_6'
        store_id:
          title: Store Foreign ID
          type: string
          description: The unique identifier for the store.
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: A string that uniquely identifies the campaign associated with
            an order.
          example: 839488a60b
        landing_site:
          title: Landing Site
          type: string
          description: The URL for the page where the buyer landed when entering the
            shop.
          example: http://www.example.com?source=abc
        financial_status:
          title: Financial Status
          type: string
          description: "The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        fulfillment_status:
          title: Fulfillment Status
          type: string
          description: "The fulfillment status for the order. Use this parameter to\
            \ trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications)."
        currency_code:
          title: Currency Code
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
        order_total:
          title: Order Total
          type: number
          description: The order total associated with an order.
        order_url:
          title: Order URL
          type: string
          description: The URL for the order.
        discount_total:
          title: Discount Total
          type: number
          description: The total amount of the discounts to be applied to the price
            of the order.
        tax_total:
          title: Tax Total
          type: number
          description: The tax total associated with an order.
        shipping_total:
          title: Shipping Total
          type: number
          description: The shipping total for the order.
        tracking_code:
          title: Tracking Code
          type: string
          description: The Mailchimp tracking code for the order. Uses the 'mc_tc'
            parameter in E-Commerce tracking URLs.
          enum:
          - prec
        processed_at_foreign:
          title: Foreign Processed Time
          type: string
          description: The date and time the order was processed in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        cancelled_at_foreign:
          title: Foreign Cancel Time
          type: string
          description: The date and time the order was cancelled in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the order was updated in ISO 8601 format.
          format: date-time
          example: 2015-07-15T19:28:00Z
        shipping_address:
          $ref: '#/components/schemas/Shipping Address_1'
        billing_address:
          $ref: '#/components/schemas/Billing Address_1'
        promos:
          title: Promos
          type: array
          description: The promo codes applied on the order
          items:
            $ref: '#/components/schemas/Orders_1_promos'
        lines:
          title: Order Line Items
          type: array
          description: An array of the order's line items.
          items:
            $ref: '#/components/schemas/Ecommerce Order Line Item_5'
        outreach:
          $ref: '#/components/schemas/Outreach_1'
        tracking_number:
          title: Tracking number
          type: string
          description: The tracking number associated with the order.
        tracking_carrier:
          title: Tracking carrier
          type: string
          description: The tracking carrier associated with the order.
        tracking_url:
          title: Tracking URL
          type: string
          description: The tracking URL associated with the order.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific order.
      example:
        discount_total: 6.027456183070403
        fulfillment_status: fulfillment_status
        tax_total: 1.4658129805029452
        _links:
        - null
        - null
        processed_at_foreign: 2015-07-15T19:28:00Z
        billing_address:
          country: United States
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          country_code: US
          province: Georgia
          phone: "8675309"
          name: Freddie Chimpenheimer
          company: company
          postal_code: "30308"
          longitude: -75.68903
        currency_code: currency_code
        landing_site: http://www.example.com?source=abc
        order_url: order_url
        tracking_number: tracking_number
        id: id
        shipping_address:
          country: United States
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          country_code: US
          province: Georgia
          phone: "8675309"
          name: Freddie Chimpenheimer
          company: company
          postal_code: "30308"
          longitude: -75.68903
        updated_at_foreign: 2015-07-15T19:28:00Z
        lines:
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - null
          - null
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 2
          _links:
          - null
          - null
          image_url: image_url
          price: 7.061401241503109
          product_id: product_id
          discount: 9.301444243932576
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        promos:
        - code: code
          amount_discounted: 5.637376656633329
          type: fixed
        - code: code
          amount_discounted: 5.637376656633329
          type: fixed
        tracking_url: tracking_url
        campaign_id: 839488a60b
        cancelled_at_foreign: 2015-07-15T19:28:00Z
        store_id: store_id
        shipping_total: 5.962133916683182
        outreach:
          published_time: 2017-06-06T13:56:12Z
          name: Freddie's Jokes
          id: 839488a60b
          type: regular
        tracking_code: prec
        tracking_carrier: tracking_carrier
        financial_status: financial_status
        order_total: 0.8008281904610115
        customer:
          total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
    List Members_3:
      title: List Members
      type: object
      properties:
        id:
          title: Email ID
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        unique_email_id:
          title: Unique Email ID
          type: string
          description: An identifier for the address across all of Mailchimp.
          readOnly: true
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        stats:
          $ref: '#/components/schemas/Subscriber Stats'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
          readOnly: true
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          readOnly: true
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
          readOnly: true
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscriber confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          readOnly: true
        member_rating:
          title: Member Rating
          type: integer
          description: "Star rating for this member, between 1 and 5."
          readOnly: true
        last_changed:
          title: Last Changed Date
          type: string
          description: The date and time the member's info was last changed in ISO
            8601 format.
          format: date-time
          readOnly: true
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        email_client:
          title: Email Client
          type: string
          description: The list member's email client.
          readOnly: true
        location:
          $ref: '#/components/schemas/Location_1'
        last_note:
          $ref: '#/components/schemas/Notes'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      example:
        email_type: email_type
        list_id: list_id
        timestamp_opt: 2000-01-23T04:56:07.000+00:00
        last_note:
          note_id: 9
          note: note
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        timestamp_signup: 2000-01-23T04:56:07.000+00:00
        ip_signup: ip_signup
        member_rating: 0
        language: language
        unique_email_id: unique_email_id
        email_address: email_address
        email_client: email_client
        stats:
          avg_click_rate: 6.027456183070403
          avg_open_rate: 0.8008281904610115
        ip_opt: ip_opt
        location:
          country_code: country_code
          dstoff: 7
          timezone: timezone
          latitude: 5.962133916683182
          gmtoff: 2
          longitude: 5.637376656633329
        id: id
        interests:
          key: true
        vip: true
        status: subscribed
        last_changed: 2000-01-23T04:56:07.000+00:00
    List Members_2:
      title: List Members
      type: object
      properties:
        id:
          title: Email ID
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
        unique_email_id:
          title: Unique Email ID
          type: string
          description: An identifier for the address across all of Mailchimp.
          readOnly: true
        contact_id:
          title: Contact ID
          type: string
          description: "As Mailchimp evolves beyond email, you may eventually have\
            \ contacts without email addresses. While the `id` is the MD5 hash of\
            \ their email address, this `contact_id` is agnostic of contact’s inclusion\
            \ of an email address."
          readOnly: true
        full_name:
          title: Full Name
          type: string
          description: The contact's full name.
          readOnly: true
        web_id:
          title: Member Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this member\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`."
          readOnly: true
        email_type:
          title: Email Type
          type: string
          description: Type of email this member asked to get ('html' or 'text').
        status:
          title: Status
          type: string
          description: Subscriber's current status.
          enum:
          - subscribed
          - unsubscribed
          - cleaned
          - pending
          - transactional
          - archived
        unsubscribe_reason:
          title: Unsubscribe Reason
          type: string
          description: A subscriber's reason for unsubscribing.
        consents_to_one_to_one_messaging:
          title: Messaging Consent
          type: boolean
          description: Indicates whether a contact consents to 1:1 messaging.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        interests:
          title: Subscriber Interests
          type: object
          additionalProperties:
            title: Interest Value
            type: boolean
            description: "Keys are interest IDs, values are booleans that describe\
              \ whether the list member is in that group or not."
          description: The key of this object's properties is the ID of the interest
            in question.
        stats:
          $ref: '#/components/schemas/Subscriber Stats_1'
        ip_signup:
          title: Signup IP
          type: string
          description: IP address the subscriber signed up from.
          readOnly: true
        timestamp_signup:
          title: Signup Timestamp
          type: string
          description: The date and time the subscriber signed up for the list in
            ISO 8601 format.
          format: date-time
          readOnly: true
        ip_opt:
          title: Opt-in IP
          type: string
          description: The IP address the subscriber used to confirm their opt-in
            status.
          readOnly: true
        timestamp_opt:
          title: Opt-in Timestamp
          type: string
          description: The date and time the subscribe confirmed their opt-in status
            in ISO 8601 format.
          format: date-time
          readOnly: true
        member_rating:
          title: Member Rating
          type: integer
          description: "Star rating for this member, between 1 and 5."
          readOnly: true
        last_changed:
          title: Last Changed Date
          type: string
          description: The date and time the member's info was last changed in ISO
            8601 format.
          format: date-time
          readOnly: true
        language:
          title: Language
          type: string
          description: "If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/)."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
        email_client:
          title: Email Client
          type: string
          description: The list member's email client.
          readOnly: true
        location:
          $ref: '#/components/schemas/Location_3'
        marketing_permissions:
          title: Marketing Permissions
          type: array
          description: The marketing permissions for the subscriber.
          items:
            $ref: '#/components/schemas/Marketing Permission_1'
        last_note:
          $ref: '#/components/schemas/Notes'
        source:
          title: Subscriber Source
          type: string
          description: The source from which the subscriber was added to this list.
          readOnly: true
        tags_count:
          title: Tags Count
          type: integer
          description: The number of tags applied to this member.
          readOnly: true
        tags:
          title: Tags
          type: array
          description: "Returns up to 50 tags applied to this member. To retrieve\
            \ all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/)."
          items:
            $ref: '#/components/schemas/List Members_1_tags'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: "Individuals who are currently or have been previously subscribed\
        \ to this list, including members who have bounced or unsubscribed."
      example:
        marketing_permissions:
        - marketing_permission_id: marketing_permission_id
          text: text
          enabled: true
        - marketing_permission_id: marketing_permission_id
          text: text
          enabled: true
        list_id: list_id
        last_note:
          note_id: 9
          note: note
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        ip_signup: ip_signup
        member_rating: 6
        language: language
        source: source
        contact_id: contact_id
        unsubscribe_reason: unsubscribe_reason
        email_client: email_client
        stats:
          ecommerce_data:
            total_revenue: 5.962133916683182
            number_of_orders: 5.637376656633329
            currency_code: USD
          avg_click_rate: 1.4658129805029452
          avg_open_rate: 6.027456183070403
        tags_count: 1
        ip_opt: ip_opt
        id: id
        vip: true
        email_type: email_type
        timestamp_opt: 2000-01-23T04:56:07.000+00:00
        timestamp_signup: 2000-01-23T04:56:07.000+00:00
        web_id: 0
        tags:
        - name: name
          id: 2
        - name: name
          id: 2
        unique_email_id: unique_email_id
        email_address: email_address
        full_name: full_name
        location:
          country_code: country_code
          dstoff: 2
          timezone: timezone
          latitude: 7.061401241503109
          gmtoff: 3
          region: region
          longitude: 9.301444243932576
        interests:
          key: true
        status: subscribed
        consents_to_one_to_one_messaging: true
        last_changed: 2000-01-23T04:56:07.000+00:00
    SentTo:
      title: Sent-To
      type: object
      properties:
        sent_to:
          title: Sent To
          type: array
          description: "An array of objects, each representing a campaign recipient."
          items:
            $ref: '#/components/schemas/Sent To_1'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of subscribers who were sent a specific campaign.
      example:
        _links:
        - null
        - null
        sent_to:
        - email_id: email_id
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          open_count: 0
          list_is_active: true
          last_open: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          absplit_group: absplit_group
          gmt_offset: 6
          vip: true
          campaign_id: campaign_id
          status: status
        - email_id: email_id
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          open_count: 0
          list_is_active: true
          last_open: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          absplit_group: absplit_group
          gmt_offset: 6
          vip: true
          campaign_id: campaign_id
          status: status
        total_items: 1
        campaign_id: campaign_id
    inline_response_200_11_site:
      type: object
      properties:
        id:
          type: integer
          description: The ID of this connected site.
          example: 43
        name:
          type: string
          description: The name of the connected site
          example: My Connected Site
        url:
          type: string
          description: The URL for this connected site.
          example: www.example.com
      description: Connected Site
      example:
        name: My Connected Site
        id: 43
        url: www.example.com
    Members:
      title: Members
      type: object
      properties:
        exact_matches:
          $ref: '#/components/schemas/Exact Matches'
        full_search:
          $ref: '#/components/schemas/Partial Matches'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Members found for given search term
      example:
        full_search:
          members:
          - null
          - null
          total_items: 6
        exact_matches:
          members:
          - marketing_permissions:
            - marketing_permission_id: marketing_permission_id
              text: text
              enabled: true
            - marketing_permission_id: marketing_permission_id
              text: text
              enabled: true
            list_id: list_id
            last_note:
              note_id: 9
              note: note
              created_at: 2000-01-23T04:56:07.000+00:00
              created_by: created_by
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            merge_fields:
              key: {}
            ip_signup: ip_signup
            member_rating: 2
            language: language
            source: source
            contact_id: contact_id
            unsubscribe_reason: unsubscribe_reason
            email_client: email_client
            stats:
              ecommerce_data:
                total_revenue: 5.962133916683182
                number_of_orders: 5.637376656633329
                currency_code: USD
              avg_click_rate: 1.4658129805029452
              avg_open_rate: 6.027456183070403
            tags_count: 4
            ip_opt: ip_opt
            id: id
            vip: true
            email_type: email_type
            timestamp_opt: 2000-01-23T04:56:07.000+00:00
            timestamp_signup: 2000-01-23T04:56:07.000+00:00
            web_id: 0
            tags:
            - name: name
              id: 2
            - name: name
              id: 2
            unique_email_id: unique_email_id
            email_address: email_address
            full_name: full_name
            location:
              country_code: country_code
              dstoff: 2
              timezone: timezone
              latitude: 7.061401241503109
              gmtoff: 3
              region: region
              longitude: 9.301444243932576
            interests:
              key: true
            status: subscribed
            consents_to_one_to_one_messaging: true
            last_changed: 2000-01-23T04:56:07.000+00:00
          - marketing_permissions:
            - marketing_permission_id: marketing_permission_id
              text: text
              enabled: true
            - marketing_permission_id: marketing_permission_id
              text: text
              enabled: true
            list_id: list_id
            last_note:
              note_id: 9
              note: note
              created_at: 2000-01-23T04:56:07.000+00:00
              created_by: created_by
            _links:
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            - schema: schema
              targetSchema: targetSchema
              method: GET
              rel: rel
              href: href
            merge_fields:
              key: {}
            ip_signup: ip_signup
            member_rating: 2
            language: language
            source: source
            contact_id: contact_id
            unsubscribe_reason: unsubscribe_reason
            email_client: email_client
            stats:
              ecommerce_data:
                total_revenue: 5.962133916683182
                number_of_orders: 5.637376656633329
                currency_code: USD
              avg_click_rate: 1.4658129805029452
              avg_open_rate: 6.027456183070403
            tags_count: 4
            ip_opt: ip_opt
            id: id
            vip: true
            email_type: email_type
            timestamp_opt: 2000-01-23T04:56:07.000+00:00
            timestamp_signup: 2000-01-23T04:56:07.000+00:00
            web_id: 0
            tags:
            - name: name
              id: 2
            - name: name
              id: 2
            unique_email_id: unique_email_id
            email_address: email_address
            full_name: full_name
            location:
              country_code: country_code
              dstoff: 2
              timezone: timezone
              latitude: 7.061401241503109
              gmtoff: 3
              region: region
              longitude: 9.301444243932576
            interests:
              key: true
            status: subscribed
            consents_to_one_to_one_messaging: true
            last_changed: 2000-01-23T04:56:07.000+00:00
          total_items: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
    ECommerce Report:
      title: E-Commerce Report
      type: object
      properties:
        total_orders:
          title: Total Orders
          type: integer
          description: The total orders for a campaign.
          readOnly: true
        total_spent:
          title: Total Spent
          type: number
          description: The total spent for a campaign. Calculated as the sum of all
            order totals with no deductions.
          readOnly: true
        total_revenue:
          title: Total Revenue
          type: number
          description: The total revenue for a campaign. Calculated as the sum of
            all order totals minus shipping and tax totals.
          readOnly: true
        currency_code:
          title: Three letter currency code for this user
          type: string
          readOnly: true
          example: USD
      description: E-Commerce stats for a campaign.
      example:
        total_spent: 4.678947989005849
        total_revenue: 7.260521264802104
        total_orders: 1
        currency_code: USD
    Batch_1:
      title: Batch
      type: object
      properties:
        id:
          title: Batch ID
          type: string
          description: A string that uniquely identifies this batch request.
          readOnly: true
        status:
          title: Status
          type: string
          description: "The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation)\
            \ about the batch operation status."
          readOnly: true
          enum:
          - pending
          - preprocessing
          - started
          - finalizing
          - finished
        total_operations:
          title: Total Operations
          type: integer
          description: "The total number of operations to complete as part of this\
            \ batch request. For GET requests requiring pagination, each page counts\
            \ as a separate operation."
          readOnly: true
        finished_operations:
          title: Finished Operations
          type: integer
          description: The number of completed operations. This includes operations
            that returned an error.
          readOnly: true
        errored_operations:
          title: Error Operations
          type: integer
          description: The number of completed operations that returned an error.
          readOnly: true
        submitted_at:
          title: Submitted At
          type: string
          description: The date and time when the server received the batch request
            in ISO 8601 format.
          format: date-time
          readOnly: true
        completed_at:
          title: Completed At
          type: string
          description: The date and time when all operations in the batch request
            completed in ISO 8601 format.
          format: date-time
          readOnly: true
        response_body_url:
          title: Response Body URL
          type: string
          description: The URL of the gzipped archive of the results of all the operations.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The status of a batch request
      example:
        finished_operations: 6
        completed_at: 2000-01-23T04:56:07.000+00:00
        submitted_at: 2000-01-23T04:56:07.000+00:00
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_operations: 0
        errored_operations: 1
        id: id
        response_body_url: response_body_url
        status: pending
    Signup Form_2:
      title: Signup Form
      type: object
      properties:
        header:
          $ref: '#/components/schemas/Signup form header options'
        contents:
          title: Signup form body content
          type: array
          description: The signup form body content.
          items:
            $ref: '#/components/schemas/Collection of Content for List Signup Forms'
        styles:
          title: Signup Form element style
          type: array
          description: "An array of objects, each representing an element style for\
            \ the signup form."
          items:
            $ref: '#/components/schemas/Collection of Element style for List Signup
              Forms'
        signup_form_url:
          title: Signup form URL
          type: string
          description: Signup form URL.
        list_id:
          title: List ID
          type: string
          description: The signup form's list id.
          readOnly: true
          example: 4ca5becb8d
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: List signup form.
      example:
        list_id: 4ca5becb8d
        contents:
        - section: signup_message
          value: Signup message goes here
        - section: signup_message
          value: Signup message goes here
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        header:
          image_height: "200"
          image_link: gotothisimage.com
          image_align: center
          image_border_color: '#896d6d'
          image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
          image_border_style: solid
          image_alt: This is an image
          text: Header Text goes here
          image_width: "800"
          image_target: _blank
          image_border_width: "2"
        signup_form_url: signup_form_url
        styles:
        - options:
          - property: background-color
            value: '#111111'
          - property: background-color
            value: '#111111'
          selector: page_background
        - options:
          - property: background-color
            value: '#111111'
          - property: background-color
            value: '#111111'
          selector: page_background
    Signup Form_1:
      title: Signup Form
      type: object
      properties:
        header:
          $ref: '#/components/schemas/Signup form header options'
        contents:
          title: Signup form body content
          type: array
          description: The signup form body content.
          items:
            $ref: '#/components/schemas/Collection of Content for List Signup Forms'
        styles:
          title: Signup Form element style
          type: array
          description: "An array of objects, each representing an element style for\
            \ the signup form."
          items:
            $ref: '#/components/schemas/Collection of Element style for List Signup
              Forms'
        signup_form_url:
          title: Signup form URL
          type: string
          description: Signup form URL.
        list_id:
          title: List ID
          type: string
          description: The signup form's list id.
          readOnly: true
          example: 4ca5becb8d
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: List signup form.
      example:
        list_id: 4ca5becb8d
        contents:
        - section: signup_message
          value: Signup message goes here
        - section: signup_message
          value: Signup message goes here
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        header:
          image_height: "200"
          image_link: gotothisimage.com
          image_align: center
          image_border_color: '#896d6d'
          image_url: http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png
          image_border_style: solid
          image_alt: This is an image
          text: Header Text goes here
          image_width: "800"
          image_target: _blank
          image_border_width: "2"
        signup_form_url: signup_form_url
        styles:
        - options:
          - property: background-color
            value: '#111111'
          - property: background-color
            value: '#111111'
          selector: page_background
        - options:
          - property: background-color
            value: '#111111'
          - property: background-color
            value: '#111111'
          selector: page_background
    Ecommerce Customer_3:
      title: E-commerce Customer
      type: object
      properties:
        id:
          title: Customer Foreign ID
          type: string
          description: A unique identifier for the customer.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: The customer's email address.
          readOnly: true
        opt_in_status:
          title: Opt-in Status
          type: boolean
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        company:
          title: Company
          type: string
          description: The customer's company.
        first_name:
          title: First Name
          type: string
          description: The customer's first name.
        last_name:
          title: Last Name
          type: string
          description: The customer's last name.
        orders_count:
          title: Orders Count
          type: integer
          description: The customer's total order count.
          readOnly: true
          example: 4
        total_spent:
          title: Total Spent
          type: number
          description: The total amount the customer has spent.
          readOnly: true
          example: 100.0
        address:
          $ref: '#/components/schemas/Address_1'
        created_at:
          title: Creation Time
          type: string
          description: The date and time the customer was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the customer was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific customer.
      example:
        total_spent: 100.0
        orders_count: 4
        email_address: email_address
        address:
          country: United States
          country_code: US
          province: Georgia
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          province_code: GA
          postal_code: "30308"
        updated_at: 2015-07-15T19:28:00Z
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        last_name: last_name
        created_at: 2015-07-15T19:28:00Z
        opt_in_status: true
        company: company
        id: id
        first_name: first_name
    Subscriber List_3:
      title: Subscriber List
      type: object
      properties:
        id:
          title: List ID
          type: string
          description: A string that uniquely identifies this list.
          readOnly: true
        web_id:
          title: List Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this list\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`."
          readOnly: true
        name:
          title: List Name
          type: string
          description: The name of the list.
        contact:
          $ref: '#/components/schemas/List Contact_2'
        permission_reminder:
          title: Permission Reminder
          type: string
          description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
            \ for the list."
        use_archive_bar:
          title: Use Archive Bar
          type: boolean
          description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ in archives by default."
          default: false
        campaign_defaults:
          $ref: '#/components/schemas/Campaign Defaults_1'
        notify_on_subscribe:
          title: Notify on Subscribe
          type: string
          description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          default: "false"
        notify_on_unsubscribe:
          title: Notify on Unsubscribe
          type: string
          description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          default: "false"
        date_created:
          title: Creation Date
          type: string
          description: The date and time that this list was created in ISO 8601 format.
          format: date-time
          readOnly: true
        list_rating:
          title: List Rating
          type: integer
          description: An auto-generated activity score for the list (0-5).
          readOnly: true
        email_type_option:
          title: Email Type Option
          type: boolean
          description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
            \ When set to `true`, subscribers can choose whether they want to receive\
            \ HTML or plain-text emails. When set to `false`, subscribers will receive\
            \ HTML emails, with a plain-text alternative backup."
        subscribe_url_short:
          title: Subscribe URL Short
          type: string
          description: "Our [url shortened](https://mailchimp.com/help/share-your-signup-form/)\
            \ version of this list's subscribe form."
          readOnly: true
        subscribe_url_long:
          title: Subscribe URL Long
          type: string
          description: The full version of this list's subscribe form (host will vary).
          readOnly: true
        beamer_address:
          title: Beamer Address
          type: string
          description: "The list's [Email Beamer](https://mailchimp.com/help/use-email-beamer-to-create-a-campaign/)\
            \ address."
          readOnly: true
        visibility:
          title: Visibility
          type: string
          description: Legacy - visibility settings are no longer used
          enum:
          - pub
          - prv
        double_optin:
          title: Double Opt In
          type: boolean
          description: Whether or not to require the subscriber to confirm subscription
            via email.
          default: false
        has_welcome:
          title: Has Welcome
          type: boolean
          description: "Whether or not this list has a welcome automation connected.\
            \ Welcome Automations: welcomeSeries, singleWelcome, emailFollowup."
          example: false
          default: false
        marketing_permissions:
          title: Marketing Permissions
          type: boolean
          description: Whether or not the list has marketing permissions (eg. GDPR)
            enabled.
          default: false
        modules:
          title: Modules
          type: array
          description: Any list-specific modules installed for this list.
          readOnly: true
          items:
            type: string
        stats:
          $ref: '#/components/schemas/Statistics'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific list.
      example:
        notify_on_subscribe: "false"
        subscribe_url_long: subscribe_url_long
        marketing_permissions: false
        permission_reminder: permission_reminder
        use_archive_bar: false
        notify_on_unsubscribe: "false"
        visibility: pub
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        date_created: 2000-01-23T04:56:07.000+00:00
        campaign_defaults:
          from_email: from_email
          subject: subject
          language: language
          from_name: from_name
        web_id: 0
        modules:
        - modules
        - modules
        email_type_option: true
        beamer_address: beamer_address
        has_welcome: false
        stats:
          cleaned_count: 2
          unsubscribe_count_since_send: 9
          member_count_since_send: 7
          click_rate: 6.84685269835264
          cleaned_count_since_send: 3
          total_contacts: 5
          campaign_count: 2
          avg_unsub_rate: 1.2315135367772556
          last_sub_date: 2000-01-23T04:56:07.000+00:00
          unsubscribe_count: 5
          target_sub_rate: 1.0246457001441578
          campaign_last_sent: 2000-01-23T04:56:07.000+00:00
          avg_sub_rate: 7.386281948385884
          member_count: 1
          merge_field_count: 4
          open_rate: 1.4894159098541704
          last_unsub_date: 2000-01-23T04:56:07.000+00:00
        contact:
          zip: zip
          country: country
          address2: address2
          city: city
          phone: phone
          address1: address1
          company: company
          state: state
        name: name
        list_rating: 6
        double_optin: false
        id: id
        subscribe_url_short: subscribe_url_short
    Ecommerce Customer_4:
      title: E-commerce Customer
      required:
      - email_address
      - id
      - opt_in_status
      type: object
      properties:
        id:
          title: Customer Foreign ID
          maxLength: 50
          type: string
          description: A unique identifier for the customer. Limited to 50 characters.
        email_address:
          title: Email Address
          type: string
          description: The customer's email address.
        opt_in_status:
          title: Opt-in Status
          type: boolean
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        company:
          title: Company
          type: string
          description: The customer's company.
        first_name:
          title: First Name
          type: string
          description: The customer's first name.
        last_name:
          title: Last Name
          type: string
          description: The customer's last name.
        address:
          $ref: '#/components/schemas/Address_1'
      description: Information about a specific customer. Orders for existing customers
        should include only the `id` parameter in the `customer` object body.
    Subscriber List_1:
      title: Subscriber List
      type: object
      properties:
        id:
          title: List ID
          type: string
          description: A string that uniquely identifies this list.
          readOnly: true
        web_id:
          title: List Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this list\
            \ in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`."
          readOnly: true
        name:
          title: List Name
          type: string
          description: The name of the list.
        contact:
          $ref: '#/components/schemas/List Contact_2'
        permission_reminder:
          title: Permission Reminder
          type: string
          description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
            \ for the list."
        use_archive_bar:
          title: Use Archive Bar
          type: boolean
          description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ in archives by default."
          default: false
        campaign_defaults:
          $ref: '#/components/schemas/Campaign Defaults_1'
        notify_on_subscribe:
          title: Notify on Subscribe
          type: string
          description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          default: "false"
        notify_on_unsubscribe:
          title: Notify on Unsubscribe
          type: string
          description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          default: "false"
        date_created:
          title: Creation Date
          type: string
          description: The date and time that this list was created in ISO 8601 format.
          format: date-time
          readOnly: true
        list_rating:
          title: List Rating
          type: integer
          description: An auto-generated activity score for the list (0-5).
          readOnly: true
        email_type_option:
          title: Email Type Option
          type: boolean
          description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
            \ When set to `true`, subscribers can choose whether they want to receive\
            \ HTML or plain-text emails. When set to `false`, subscribers will receive\
            \ HTML emails, with a plain-text alternative backup."
        subscribe_url_short:
          title: Subscribe URL Short
          type: string
          description: "Our [url shortened](https://mailchimp.com/help/share-your-signup-form/)\
            \ version of this list's subscribe form."
          readOnly: true
        subscribe_url_long:
          title: Subscribe URL Long
          type: string
          description: The full version of this list's subscribe form (host will vary).
          readOnly: true
        beamer_address:
          title: Beamer Address
          type: string
          description: "The list's [Email Beamer](https://mailchimp.com/help/use-email-beamer-to-create-a-campaign/)\
            \ address."
          readOnly: true
        visibility:
          title: Visibility
          type: string
          description: Legacy - visibility settings are no longer used
          enum:
          - pub
          - prv
        double_optin:
          title: Double Opt In
          type: boolean
          description: Whether or not to require the subscriber to confirm subscription
            via email.
          default: false
        has_welcome:
          title: Has Welcome
          type: boolean
          description: "Whether or not this list has a welcome automation connected.\
            \ Welcome Automations: welcomeSeries, singleWelcome, emailFollowup."
          example: false
          default: false
        marketing_permissions:
          title: Marketing Permissions
          type: boolean
          description: Whether or not the list has marketing permissions (eg. GDPR)
            enabled.
          default: false
        modules:
          title: Modules
          type: array
          description: Any list-specific modules installed for this list.
          readOnly: true
          items:
            type: string
        stats:
          $ref: '#/components/schemas/Statistics'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific list.
      example:
        notify_on_subscribe: "false"
        subscribe_url_long: subscribe_url_long
        marketing_permissions: false
        permission_reminder: permission_reminder
        use_archive_bar: false
        notify_on_unsubscribe: "false"
        visibility: pub
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        date_created: 2000-01-23T04:56:07.000+00:00
        campaign_defaults:
          from_email: from_email
          subject: subject
          language: language
          from_name: from_name
        web_id: 0
        modules:
        - modules
        - modules
        email_type_option: true
        beamer_address: beamer_address
        has_welcome: false
        stats:
          cleaned_count: 2
          unsubscribe_count_since_send: 9
          member_count_since_send: 7
          click_rate: 6.84685269835264
          cleaned_count_since_send: 3
          total_contacts: 5
          campaign_count: 2
          avg_unsub_rate: 1.2315135367772556
          last_sub_date: 2000-01-23T04:56:07.000+00:00
          unsubscribe_count: 5
          target_sub_rate: 1.0246457001441578
          campaign_last_sent: 2000-01-23T04:56:07.000+00:00
          avg_sub_rate: 7.386281948385884
          member_count: 1
          merge_field_count: 4
          open_rate: 1.4894159098541704
          last_unsub_date: 2000-01-23T04:56:07.000+00:00
        contact:
          zip: zip
          country: country
          address2: address2
          city: city
          phone: phone
          address1: address1
          company: company
          state: state
        name: name
        list_rating: 6
        double_optin: false
        id: id
        subscribe_url_short: subscribe_url_short
    Abuse Complaints:
      title: Abuse Complaints
      type: object
      properties:
        abuse_reports:
          title: Abuse Reports
          type: array
          description: "An array of objects, each representing an abuse report resource."
          items:
            $ref: '#/components/schemas/Abuse Complaint_3'
        list_id:
          title: List ID
          type: string
          description: The list id for the abuse report.
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of abuse complaints for a specific list. An abuse
        complaint occurs when your recipient clicks to 'report spam' in their email
        program.
      example:
        list_id: list_id
        _links:
        - null
        - null
        total_items: 6
        abuse_reports:
        - email_id: email_id
          date: date
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          id: 0
          vip: true
          campaign_id: campaign_id
        - email_id: email_id
          date: date
          email_address: email_address
          list_id: list_id
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          id: 0
          vip: true
          campaign_id: campaign_id
    Ecommerce Customer_1:
      title: E-commerce Customer
      type: object
      properties:
        opt_in_status:
          title: Opt-in Status
          type: boolean
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        company:
          title: Company
          type: string
          description: The customer's company.
        first_name:
          title: First Name
          type: string
          description: The customer's first name.
        last_name:
          title: Last Name
          type: string
          description: The customer's last name.
        address:
          $ref: '#/components/schemas/Address_1'
      description: Information about a specific customer. Orders for existing customers
        should include only the `id` parameter in the `customer` object body.
      example: null
    Subscriber List_2:
      title: Subscriber List
      required:
      - campaign_defaults
      - contact
      - email_type_option
      - name
      - permission_reminder
      type: object
      properties:
        name:
          title: List Name
          type: string
          description: The name of the list.
        contact:
          $ref: '#/components/schemas/List Contact_1'
        permission_reminder:
          title: Permission Reminder
          type: string
          description: "The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/)\
            \ for the list."
        use_archive_bar:
          title: Use Archive Bar
          type: boolean
          description: "Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ in archives by default."
          default: false
        campaign_defaults:
          $ref: '#/components/schemas/Campaign Defaults'
        notify_on_subscribe:
          title: Notify on Subscribe
          type: string
          description: "The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          default: "false"
        notify_on_unsubscribe:
          title: Notify on Unsubscribe
          type: string
          description: "The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/)\
            \ to."
          default: "false"
        email_type_option:
          title: Email Type Option
          type: boolean
          description: "Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/).\
            \ When set to `true`, subscribers can choose whether they want to receive\
            \ HTML or plain-text emails. When set to `false`, subscribers will receive\
            \ HTML emails, with a plain-text alternative backup."
        double_optin:
          title: Double Opt In
          type: boolean
          description: Whether or not to require the subscriber to confirm subscription
            via email.
          default: false
        marketing_permissions:
          title: Marketing Permissions
          type: boolean
          description: Whether or not the list has marketing permissions (eg. GDPR)
            enabled.
          default: false
      description: Information about a specific list.
    Ecommerce Customer_2:
      title: E-commerce Customer
      required:
      - email_address
      - id
      - opt_in_status
      type: object
      properties:
        id:
          title: Customer Foreign ID
          maxLength: 50
          type: string
          description: A unique identifier for the customer. Limited to 50 characters.
        email_address:
          title: Email Address
          type: string
          description: The customer's email address.
        opt_in_status:
          title: Opt-in Status
          type: boolean
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        company:
          title: Company
          type: string
          description: The customer's company.
        first_name:
          title: First Name
          type: string
          description: The customer's first name.
        last_name:
          title: Last Name
          type: string
          description: The customer's last name.
        address:
          $ref: '#/components/schemas/Address_1'
      description: Information about a specific customer.
    Cart Lines:
      title: Cart Lines
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        cart_id:
          title: Cart ID
          type: string
          description: The cart id.
        lines:
          title: Ecommerce Cart Lines
          type: array
          description: "An array of objects, each representing a cart's line item."
          items:
            $ref: '#/components/schemas/Ecommerce Cart Line Item_5'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of a cart's line items.
      example:
        store_id: store_id
        cart_id: cart_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        lines:
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        - product_variant_title: product_variant_title
          quantity: 1
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          price: 5.962133916683182
          product_id: product_id
          id: id
          product_variant_id: product_variant_id
          product_title: product_title
        total_items: 0
    Ecommerce Customer_5:
      title: E-commerce Customer
      type: object
      properties:
        opt_in_status:
          title: Opt-in Status
          type: boolean
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        company:
          title: Company
          type: string
          description: The customer's company.
        first_name:
          title: First Name
          type: string
          description: The customer's first name.
        last_name:
          title: Last Name
          type: string
          description: The customer's last name.
        address:
          $ref: '#/components/schemas/Address_1'
      description: Information about a specific customer. Orders for existing customers
        should include only the `id` parameter in the `customer` object body.
    Ecommerce Customer_6:
      title: E-commerce Customer
      type: object
      properties:
        id:
          title: Customer Foreign ID
          type: string
          description: A unique identifier for the customer.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: The customer's email address.
          readOnly: true
        opt_in_status:
          title: Opt-in Status
          type: boolean
          description: "The customer's opt-in status. This value will never overwrite\
            \ the opt-in status of a pre-existing Mailchimp list member, but will\
            \ apply to list members that are added through the e-commerce API endpoints.\
            \ Customers who don't opt in to your Mailchimp list [will be added as\
            \ `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers)."
        company:
          title: Company
          type: string
          description: The customer's company.
        first_name:
          title: First Name
          type: string
          description: The customer's first name.
        last_name:
          title: Last Name
          type: string
          description: The customer's last name.
        orders_count:
          title: Orders Count
          type: integer
          description: The customer's total order count.
          readOnly: true
          example: 4
        total_spent:
          title: Total Spent
          type: number
          description: The total amount the customer has spent.
          readOnly: true
          example: 100.0
        address:
          $ref: '#/components/schemas/Address_1'
        created_at:
          title: Creation Time
          type: string
          description: The date and time the customer was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the customer was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific customer.
      example:
        total_spent: 100.0
        orders_count: 4
        email_address: email_address
        address:
          country: United States
          country_code: US
          province: Georgia
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          province_code: GA
          postal_code: "30308"
        updated_at: 2015-07-15T19:28:00Z
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        last_name: last_name
        created_at: 2015-07-15T19:28:00Z
        opt_in_status: true
        company: company
        id: id
        first_name: first_name
    Survey Report_1:
      title: Survey Report
      type: object
      properties:
        id:
          title: Survey ID
          type: string
          description: A string that uniquely identifies this survey.
          readOnly: true
          example: 040d2c2e1f0
        web_id:
          title: Survey Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this survey\
            \ report in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/surveys/results?survey_id={web_id}`."
          readOnly: true
          example: 165
        list_id:
          title: List ID
          type: string
          description: The ID of the list connected to this survey.
          readOnly: true
        list_name:
          title: List Name
          type: string
          description: The name of the list connected to this survey.
          readOnly: true
        title:
          title: Title
          type: string
          description: The title of the survey.
          readOnly: true
          example: New product ideas
        url:
          title: URL
          type: string
          description: The URL for the survey.
          readOnly: true
        status:
          title: Status
          type: string
          description: The survey's status.
          readOnly: true
          example: published
          enum:
          - published
          - unpublished
        published_at:
          title: Published At
          type: string
          description: The date and time the survey was published in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2017-08-04T11:09:01Z
        created_at:
          title: Created At
          type: string
          description: The date and time the survey was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2017-08-04T11:09:01Z
        updated_at:
          title: Updated At
          type: string
          description: The date and time the survey was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2017-08-04T11:09:01Z
        total_responses:
          title: Total Responses
          type: integer
          description: The total number of responses to this survey.
          readOnly: true
          example: 810
      description: The report for a survey.
      example:
        list_id: list_id
        updated_at: 2017-08-04T11:09:01Z
        created_at: 2017-08-04T11:09:01Z
        total_responses: 810
        id: 040d2c2e1f0
        web_id: 165
        list_name: list_name
        title: New product ideas
        published_at: 2017-08-04T11:09:01Z
        url: url
        status: published
    List_11:
      title: List
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id.
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        list_name:
          title: List Name
          type: string
          description: The name of the list.
          readOnly: true
        segment_text:
          title: Segment Text
          type: string
          description: "A description of the [segment](https://mailchimp.com/help/getting-started-with-groups/)\
            \ used for the campaign. Formatted as a string marked up with HTML."
          readOnly: true
        recipient_count:
          title: Recipient Count
          type: integer
          description: Count of the recipients on the associated list. Formatted as
            an integer.
          readOnly: true
        segment_opts:
          $ref: '#/components/schemas/Segment Options_1'
      description: List settings for the campaign.
      example:
        segment_opts:
          prebuilt_segment_id: subscribers-female
          match: any
          saved_segment_id: 5
          conditions:
          - {}
          - {}
        list_id: list_id
        segment_text: segment_text
        recipient_count: 5
        list_name: list_name
        list_is_active: true
    List_10:
      title: List
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id.
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        list_name:
          title: List Name
          type: string
          description: The name of the list.
          readOnly: true
        segment_text:
          title: Segment Text
          type: string
          description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
            \ used for the campaign. Formatted as a string marked up with HTML."
          readOnly: true
        recipient_count:
          title: Recipient Count
          type: integer
          description: Count of the recipients on the associated list. Formatted as
            an integer.
          readOnly: true
        segment_opts:
          $ref: '#/components/schemas/Segment Options_1'
      description: List settings for the outreach
      example:
        segment_opts:
          prebuilt_segment_id: subscribers-female
          match: any
          saved_segment_id: 5
          conditions:
          - {}
          - {}
        list_id: list_id
        segment_text: segment_text
        recipient_count: 5
        list_name: list_name
        list_is_active: true
    List_9:
      title: List
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id.
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        list_name:
          title: List Name
          type: string
          description: List Name.
        segment_opts:
          $ref: '#/components/schemas/Segment Options_2'
        store_id:
          title: Store ID
          type: string
          description: The id of the store.
          example: 1a2df69xxx
      description: List settings for the Automation.
      example:
        segment_opts:
          match: any
          saved_segment_id: 6
          conditions:
          - {}
          - {}
        store_id: 1a2df69xxx
        list_id: list_id
        list_name: list_name
        list_is_active: true
    Send Checklist_items:
      type: object
      properties:
        type:
          title: Type
          type: string
          description: The item type.
          enum:
          - success
          - warning
          - error
        id:
          title: ID
          type: integer
          description: The ID for the specific item.
        heading:
          title: Heading
          type: string
          description: The heading for the specific item.
        details:
          title: Details
          type: string
          description: Details about the specific feedback item.
      example:
        heading: heading
        details: details
        id: 0
        type: success
    List_6:
      title: List
      type: object
      properties:
        id:
          title: Segment ID
          type: integer
          description: The unique id for the segment.
          readOnly: true
        name:
          title: Segment Name
          type: string
          description: The name of the segment.
        member_count:
          title: Member Count
          type: integer
          description: The number of active subscribers currently included in the
            segment.
          readOnly: true
        type:
          title: Type
          type: string
          description: "The type of segment. Static segments are now known as tags.\
            \ Learn more about [tags](https://mailchimp.com/help/getting-started-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
          readOnly: true
          enum:
          - saved
          - static
          - fuzzy
        created_at:
          title: Date Created
          type: string
          description: The date and time the segment was created in ISO 8601 format.
          format: date-time
          readOnly: true
        updated_at:
          title: Date Updated
          type: string
          description: The date and time the segment was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
        options:
          $ref: '#/components/schemas/Conditions_2'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific segment.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        options:
          match: any
          conditions:
          - {}
          - {}
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        member_count: 6
        type: saved
    List_5:
      title: List
      required:
      - name
      type: object
      properties:
        name:
          title: Segment Name
          type: string
          description: The name of the segment.
        static_segment:
          title: Static Segment
          type: array
          description: An array of emails to be used for a static segment. Any emails
            provided that are not present on the list will be ignored. Passing an
            empty array for an existing static segment will reset that segment and
            remove all members. This field cannot be provided with the `options` field.
          items:
            type: string
        options:
          $ref: '#/components/schemas/Conditions_1'
      description: Information about a specific list segment.
    List_8:
      title: List
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id.
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        list_name:
          title: List Name
          type: string
          description: The name of the list.
          readOnly: true
        segment_text:
          title: Segment Text
          type: string
          description: "A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/)\
            \ used for the campaign. Formatted as a string marked up with HTML."
          readOnly: true
        recipient_count:
          title: Recipient Count
          type: integer
          description: Count of the recipients on the associated list. Formatted as
            an integer.
          readOnly: true
        segment_opts:
          $ref: '#/components/schemas/Segment Options_1'
      description: List settings for the campaign.
      example:
        segment_opts:
          prebuilt_segment_id: subscribers-female
          match: any
          saved_segment_id: 5
          conditions:
          - {}
          - {}
        list_id: list_id
        segment_text: segment_text
        recipient_count: 1
        list_name: list_name
        list_is_active: true
    List_7:
      title: List
      required:
      - list_id
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id.
        list_name:
          title: List Name
          type: string
          description: The name of the list.
          readOnly: true
        segment_text:
          title: Segment Text
          type: string
          description: "A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/)\
            \ used for the campaign. Formatted as a string marked up with HTML."
          readOnly: true
        recipient_count:
          title: Recipient Count
          type: integer
          description: Count of the recipients on the associated list. Formatted as
            an integer.
          readOnly: true
        segment_opts:
          $ref: '#/components/schemas/Segment Options_1'
      description: List settings for the campaign.
      example:
        segment_opts:
          prebuilt_segment_id: subscribers-female
          match: any
          saved_segment_id: 5
          conditions:
          - {}
          - {}
        list_id: list_id
        segment_text: segment_text
        recipient_count: 1
        list_name: list_name
    List_2:
      title: List
      required:
      - list_id
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id.
        segment_opts:
          $ref: '#/components/schemas/Segment Options_1'
      description: List settings for the campaign.
      example: null
    List_1:
      title: List
      required:
      - list_id
      type: object
      properties:
        list_id:
          title: List ID
          type: string
          description: The unique list id.
        segment_opts:
          $ref: '#/components/schemas/Segment Options'
      description: List settings for the campaign.
      example: null
    Campaign Content_1:
      title: Campaign Content
      type: object
      properties:
        plain_text:
          title: Plain Text
          type: string
          description: "The plain-text portion of the campaign. If left unspecified,\
            \ we'll generate this automatically."
        html:
          title: Campaign HTML
          type: string
          description: The raw HTML for the campaign.
        url:
          title: Campaign URL
          type: string
          description: "When importing a campaign, the URL where the HTML lives."
        template:
          $ref: '#/components/schemas/Template Content'
        archive:
          $ref: '#/components/schemas/Upload Archive'
        variate_contents:
          title: Variate Contents
          type: array
          description: "Content options for [Multivariate Campaigns](https://mailchimp.com/help/about-multivariate-campaigns/).\
            \ Each content option must provide HTML content and may optionally provide\
            \ plain text. For campaigns not testing content, only one object should\
            \ be provided."
          items:
            $ref: '#/components/schemas/campaignscampaign_idcontent_variate_contents'
      description: The HTML and plain-text content for a campaign
    List_4:
      title: List
      type: object
      properties:
        id:
          title: Segment ID
          type: integer
          description: The unique id for the segment.
          readOnly: true
        name:
          title: Segment Name
          type: string
          description: The name of the segment.
        member_count:
          title: Member Count
          type: integer
          description: The number of active subscribers currently included in the
            segment.
          readOnly: true
        type:
          title: Type
          type: string
          description: "The type of segment. Static segments are now known as tags.\
            \ Learn more about [tags](https://mailchimp.com/help/getting-started-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
          readOnly: true
          enum:
          - saved
          - static
          - fuzzy
        created_at:
          title: Date Created
          type: string
          description: The date and time the segment was created in ISO 8601 format.
          format: date-time
          readOnly: true
        updated_at:
          title: Date Updated
          type: string
          description: The date and time the segment was last updated in ISO 8601
            format.
          format: date-time
          readOnly: true
        options:
          $ref: '#/components/schemas/Conditions_2'
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific segment.
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        options:
          match: any
          conditions:
          - {}
          - {}
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        member_count: 6
        type: saved
    List_3:
      title: List
      required:
      - name
      type: object
      properties:
        name:
          title: Segment Name
          type: string
          description: The name of the segment.
        static_segment:
          title: Static Segment
          type: array
          description: An array of emails to be used for a static segment. Any emails
            provided that are not present on the list will be ignored. Passing an
            empty array will create a static segment without any subscribers. This
            field cannot be provided with the options field.
          items:
            type: string
        options:
          $ref: '#/components/schemas/Conditions'
      description: Information about a specific list segment.
    Ecommerce Order Line Item_1:
      title: E-commerce Order Line Item
      type: object
      properties:
        product_id:
          title: Order Line Item Product Foreign ID
          type: string
          description: A unique identifier for the product associated with the order
            line item.
        product_variant_id:
          title: Order Line Item Product Variant Foreign ID
          type: string
          description: A unique identifier for the product variant associated with
            the order line item.
        quantity:
          title: Quantity
          type: integer
          description: The quantity of an order line item.
        price:
          title: Price
          type: number
          description: The price of an order line item.
        discount:
          title: Discount
          type: number
          description: The total discount amount applied to this line item.
      description: Information about a specific order line.
      example: null
    Industry Stats_1:
      title: Industry Stats
      type: object
      properties:
        open_rate:
          title: Open Rate
          type: number
          description: The average unique open rate for all campaigns in the account's
            specified industry.
          readOnly: true
        bounce_rate:
          title: Bounce Rate
          type: number
          description: The average bounce rate for all campaigns in the account's
            specified industry.
          readOnly: true
        click_rate:
          title: Click Rate
          type: number
          description: The average unique click rate for all campaigns in the account's
            specified industry.
          readOnly: true
      description: "The [average campaign statistics](https://mailchimp.com/resources/research/email-marketing-benchmarks/?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)\
        \ for all campaigns in the account's specified industry."
      readOnly: true
      example:
        click_rate: 5.962133916683182
        bounce_rate: 1.4658129805029452
        open_rate: 6.027456183070403
    Template Folder:
      title: Template Folder
      required:
      - name
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: The name of the folder.
      description: A folder used to organize templates.
    Campaign Advice Report:
      title: Campaign Advice Report
      type: object
      properties:
        advice:
          title: Campaign Advice
          type: array
          description: "An array of objects, each representing a point of campaign\
            \ feedback."
          items:
            $ref: '#/components/schemas/Campaign Advice'
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of feedback based on a campaign's statistics.
      example:
        _links:
        - null
        - null
        advice:
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          type: negative
          message: message
        - _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          type: negative
          message: message
        total_items: 0
        campaign_id: campaign_id
    Connected Site:
      title: Connected Site
      required:
      - domain
      - foreign_id
      type: object
      properties:
        foreign_id:
          title: Connected Site Foreign ID
          type: string
          description: The unique identifier for the site.
          example: MC001
        domain:
          title: Domain
          type: string
          description: The connected site domain.
          example: example.com
      description: Information about a specific connected site.
    Batch Webhook:
      title: Batch Webhook
      required:
      - url
      type: object
      properties:
        url:
          title: URL
          type: string
          description: A valid URL for the Webhook.
          example: http://yourdomain.com/webhook
      description: Add a new Batch Webook.
    Campaign Settings_2:
      title: Campaign Settings
      required:
      - from_name
      - reply_to
      - subject_line
      type: object
      properties:
        subject_line:
          title: Campaign Subject Line
          type: string
          description: The subject line for the campaign.
        preview_text:
          title: Campaign Preview Text
          type: string
          description: The preview text for the campaign.
        title:
          title: Campaign Title
          type: string
          description: The title of the campaign.
        from_name:
          title: From Name
          type: string
          description: The 'from' name on the campaign (not an email address).
        reply_to:
          title: Reply To Address
          type: string
          description: The reply-to email address for the campaign.
        use_conversation:
          title: Conversation
          type: boolean
          description: Use Mailchimp Conversation feature to manage out-of-office
            replies.
        to_name:
          title: To Name
          type: string
          description: "The campaign's custom 'To' name. Typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        folder_id:
          title: Folder ID
          type: string
          description: "If the campaign is listed in a folder, the id for that folder."
        authenticate:
          title: Authentication
          type: boolean
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
        auto_footer:
          title: Auto-Footer
          type: boolean
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
        inline_css:
          title: Inline CSS
          type: boolean
          description: Automatically inline the CSS included with the campaign content.
        auto_tweet:
          title: Auto-Tweet
          type: boolean
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
        auto_fb_post:
          title: Auto Post to Facebook
          type: array
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
        fb_comments:
          title: Facebook Comments
          type: boolean
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
        template_id:
          title: Template ID
          type: integer
          description: The id of the template to use.
      description: "The settings for your campaign, including subject, from name,\
        \ reply-to address, and more."
      example: null
    Collection of Content for List Signup Forms:
      title: Collection of Content for List Signup Forms
      type: object
      properties:
        section:
          title: Content Section Name
          type: string
          description: The content section name.
          example: signup_message
          enum:
          - signup_message
          - unsub_message
          - signup_thank_you_title
        value:
          title: Content Section Value
          type: string
          description: The content section text.
          example: Signup message goes here
      description: Collection of Content for List Signup Forms.
      example:
        section: signup_message
        value: Signup message goes here
    Campaign Settings_3:
      title: Campaign Settings
      type: object
      properties:
        subject_line:
          title: Campaign Subject Line
          type: string
          description: The subject line for the campaign.
        preview_text:
          title: Campaign Preview Text
          type: string
          description: The preview text for the campaign.
        title:
          title: Campaign Title
          type: string
          description: The title of the campaign.
        from_name:
          title: From Name
          type: string
          description: The 'from' name on the campaign (not an email address).
        reply_to:
          title: Reply To Address
          type: string
          description: The reply-to email address for the campaign.
        use_conversation:
          title: Conversation
          type: boolean
          description: Use Mailchimp Conversation feature to manage replies.
        to_name:
          title: To Name
          type: string
          description: "The campaign's custom 'To' name. Typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        folder_id:
          title: Folder ID
          type: string
          description: "If the campaign is listed in a folder, the id for that folder."
        authenticate:
          title: Authentication
          type: boolean
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
        auto_footer:
          title: Auto-Footer
          type: boolean
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
        inline_css:
          title: Inline CSS
          type: boolean
          description: Automatically inline the CSS included with the campaign content.
        auto_tweet:
          title: Auto-Tweet
          type: boolean
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
        auto_fb_post:
          title: Auto Post to Facebook
          type: array
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
        fb_comments:
          title: Facebook Comments
          type: boolean
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
        timewarp:
          title: Timewarp Send
          type: boolean
          description: "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
          readOnly: true
        template_id:
          title: Template ID
          type: integer
          description: The id for the template used in this campaign.
          readOnly: true
        drag_and_drop:
          title: Drag And Drop Campaign
          type: boolean
          description: Whether the campaign uses the drag-and-drop editor.
          readOnly: true
      description: "The settings for your campaign, including subject, from name,\
        \ reply-to address, and more."
      example:
        auto_footer: true
        subject_line: subject_line
        preview_text: preview_text
        use_conversation: true
        authenticate: true
        to_name: to_name
        timewarp: true
        title: title
        from_name: from_name
        auto_tweet: true
        auto_fb_post:
        - auto_fb_post
        - auto_fb_post
        fb_comments: true
        drag_and_drop: true
        reply_to: reply_to
        inline_css: true
        template_id: 5
        folder_id: folder_id
    Campaign Settings_1:
      title: Campaign Settings
      type: object
      properties:
        subject_line:
          title: Campaign Subject Line
          type: string
          description: The subject line for the campaign.
        preview_text:
          title: Campaign Preview Text
          type: string
          description: The preview text for the campaign.
        title:
          title: Campaign Title
          type: string
          description: The title of the campaign.
        from_name:
          title: From Name
          type: string
          description: The 'from' name on the campaign (not an email address).
        reply_to:
          title: Reply To Address
          type: string
          description: "The reply-to email address for the campaign. Note: while this\
            \ field is not required for campaign creation, it is required for sending."
        use_conversation:
          title: Conversation
          type: boolean
          description: Use Mailchimp Conversation feature to manage out-of-office
            replies.
        to_name:
          title: To Name
          type: string
          description: "The campaign's custom 'To' name. Typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        folder_id:
          title: Folder ID
          type: string
          description: "If the campaign is listed in a folder, the id for that folder."
        authenticate:
          title: Authentication
          type: boolean
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
        auto_footer:
          title: Auto-Footer
          type: boolean
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
        inline_css:
          title: Inline CSS
          type: boolean
          description: Automatically inline the CSS included with the campaign content.
        auto_tweet:
          title: Auto-Tweet
          type: boolean
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
        auto_fb_post:
          title: Auto Post to Facebook
          type: array
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
        fb_comments:
          title: Facebook Comments
          type: boolean
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
        template_id:
          title: Template ID
          type: integer
          description: The id of the template to use.
      description: "The settings for your campaign, including subject, from name,\
        \ reply-to address, and more."
      example: null
    Segment Options_2:
      title: Segment Options
      type: object
      properties:
        saved_segment_id:
          title: Saved Segment ID
          type: integer
          description: The id for an existing saved segment.
        match:
          title: Match Type
          type: string
          description: Segment match type.
          enum:
          - any
          - all
        conditions:
          title: Segment Type
          type: array
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
      description: An object representing all segmentation options.
      example:
        match: any
        saved_segment_id: 6
        conditions:
        - {}
        - {}
    Tag:
      title: Tag
      type: object
      properties:
        tag_id:
          title: Tag ID
          type: integer
          description: The unique id for the tag.
          readOnly: true
        tag_name:
          title: Tag Name
          type: string
          description: The name of the tag.
          readOnly: true
      example:
        tag_name: tag_name
        tag_id: 3
    Sources_1:
      title: Sources
      type: object
      properties:
        user:
          title: User
          type: boolean
          description: Whether the webhook is triggered by subscriber-initiated actions.
          example: true
        admin:
          title: Admin
          type: boolean
          description: Whether the webhook is triggered by admin-initiated actions
            in the web interface.
          example: true
        api:
          title: API
          type: boolean
          description: Whether the webhook is triggered by actions initiated via the
            API.
          example: true
      description: The possible sources of any events that can trigger the webhook
        and whether they are enabled.
      readOnly: true
      example:
        admin: true
        api: true
        user: true
    Campaign Advice:
      title: Campaign Advice
      type: object
      properties:
        type:
          title: Advice Type
          type: string
          description: The sentiment type for a feedback message.
          readOnly: true
          enum:
          - negative
          - positive
          - neutral
        message:
          title: Advice Message
          type: string
          description: The advice message.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Campaign feedback details.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        type: negative
        message: message
    Segment Options_1:
      title: Segment Options
      type: object
      properties:
        saved_segment_id:
          title: Saved Segment ID
          type: integer
          description: The id for an existing saved segment.
        prebuilt_segment_id:
          title: Prebuilt Segment Id
          type: string
          description: "The prebuilt segment id, if a prebuilt segment has been designated\
            \ for this campaign."
          example: subscribers-female
        match:
          title: Match Type
          type: string
          description: Segment match type.
          enum:
          - any
          - all
        conditions:
          title: Segment Type
          type: array
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
      description: "An object representing all segmentation options. This object should\
        \ contain a `saved_segment_id` to use an existing segment, or you can create\
        \ a new segment by including both `match` and `conditions` options."
      example:
        prebuilt_segment_id: subscribers-female
        match: any
        saved_segment_id: 5
        conditions:
        - {}
        - {}
    Campaign Settings_4:
      title: Campaign Settings
      type: object
      properties:
        subject_line:
          title: Campaign Subject Line
          type: string
          description: The subject line for the campaign.
        preview_text:
          title: Campaign Preview Text
          type: string
          description: The preview text for the campaign.
        title:
          title: Campaign Title
          type: string
          description: The title of the campaign.
        from_name:
          title: From Name
          type: string
          description: The 'from' name on the campaign (not an email address).
        reply_to:
          title: Reply To Address
          type: string
          description: The reply-to email address for the campaign.
        use_conversation:
          title: Conversation
          type: boolean
          description: Use Mailchimp Conversation feature to manage out-of-office
            replies.
        to_name:
          title: To Name
          type: string
          description: "The campaign's custom 'To' name. Typically the first name\
            \ [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)."
        folder_id:
          title: Folder ID
          type: string
          description: "If the campaign is listed in a folder, the id for that folder."
        authenticate:
          title: Authentication
          type: boolean
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
        auto_footer:
          title: Auto-Footer
          type: boolean
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
        inline_css:
          title: Inline CSS
          type: boolean
          description: Automatically inline the CSS included with the campaign content.
        auto_tweet:
          title: Auto-Tweet
          type: boolean
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
        auto_fb_post:
          title: Auto Post to Facebook
          type: array
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
        fb_comments:
          title: Facebook Comments
          type: boolean
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
        timewarp:
          title: Timewarp Send
          type: boolean
          description: "Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/)."
          readOnly: true
        template_id:
          title: Template ID
          type: integer
          description: The id for the template used in this campaign.
        drag_and_drop:
          title: Drag And Drop Campaign
          type: boolean
          description: Whether the campaign uses the drag-and-drop editor.
          readOnly: true
      description: "The settings for your campaign, including subject, from name,\
        \ reply-to address, and more."
      example:
        auto_footer: true
        subject_line: subject_line
        preview_text: preview_text
        use_conversation: true
        authenticate: true
        to_name: to_name
        timewarp: true
        title: title
        from_name: from_name
        auto_tweet: true
        auto_fb_post:
        - auto_fb_post
        - auto_fb_post
        fb_comments: true
        drag_and_drop: true
        reply_to: reply_to
        inline_css: true
        template_id: 5
        folder_id: folder_id
    inline_response_200_11_report_summary:
      type: object
      properties:
        opens:
          type: integer
        unique_opens:
          type: integer
        open_rate:
          type: number
        clicks:
          type: integer
        subscriber_clicks:
          type: integer
        click_rate:
          type: number
        visits:
          type: integer
        unique_visits:
          type: integer
        conversion_rate:
          type: number
        subscribes:
          type: integer
        ecommerce:
          $ref: '#/components/schemas/inline_response_200_11_report_summary_ecommerce'
        impressions:
          type: number
        reach:
          type: integer
        engagements:
          type: integer
        total_sent:
          type: integer
      example:
        unique_visits: 7
        subscribes: 1
        reach: 1
        click_rate: 2.027123023002322
        total_sent: 5
        impressions: 7.457744773683766
        unique_opens: 2
        subscriber_clicks: 3
        visits: 4
        ecommerce:
          average_order_revenue: 6.84685269835264
          total_revenue: 1.4894159098541704
          currency_code: currency_code
        opens: 5
        clicks: 9
        engagements: 4
        conversion_rate: 1.2315135367772556
        open_rate: 7.061401241503109
    Campaign Settings_5:
      title: Campaign Settings
      type: object
      properties:
        subject_line:
          title: Campaign Subject Line
          type: string
          description: The subject line for the campaign.
        preview_text:
          title: Campaign Preview Text
          type: string
          description: The preview text for the campaign.
        title:
          title: Campaign Title
          type: string
          description: The title of the campaign.
        from_name:
          title: From Name
          type: string
          description: The 'from' name on the campaign (not an email address).
        reply_to:
          title: Reply To Address
          type: string
          description: The reply-to email address for the campaign.
        authenticate:
          title: Authentication
          type: boolean
          description: "Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/)\
            \ the campaign. Defaults to `true`."
        auto_footer:
          title: Auto-Footer
          type: boolean
          description: "Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/)\
            \ to the campaign."
        inline_css:
          title: Inline CSS
          type: boolean
          description: Automatically inline the CSS included with the campaign content.
        auto_tweet:
          title: Auto-Tweet
          type: boolean
          description: "Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/)\
            \ page when the campaign is sent."
        auto_fb_post:
          title: Auto Post to Facebook
          type: array
          description: "An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/)\
            \ page ids to auto-post to."
          items:
            type: string
        fb_comments:
          title: Facebook Comments
          type: boolean
          description: Allows Facebook comments on the campaign (also force-enables
            the Campaign Archive toolbar). Defaults to `true`.
        template_id:
          title: Template ID
          type: integer
          description: The id for the template used in this campaign.
        drag_and_drop:
          title: Drag And Drop Campaign
          type: boolean
          description: Whether the campaign uses the drag-and-drop editor.
          readOnly: true
      description: "Settings for the campaign including the email subject, from name,\
        \ and from email address."
      example:
        auto_footer: true
        subject_line: subject_line
        preview_text: preview_text
        authenticate: true
        title: title
        from_name: from_name
        auto_tweet: true
        auto_fb_post:
        - auto_fb_post
        - auto_fb_post
        fb_comments: true
        drag_and_drop: true
        reply_to: reply_to
        inline_css: true
        template_id: 2
    Merge Field:
      title: Merge Field
      required:
      - name
      - type
      type: object
      properties:
        tag:
          title: Merge Tag
          type: string
          description: "The merge tag used for Mailchimp campaigns and [adding contact\
            \ information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts)."
        name:
          title: Merge Field Name
          type: string
          description: The name of the merge field (audience field).
        type:
          title: Merge Field Type
          type: string
          description: "The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for the merge field."
          enum:
          - text
          - number
          - address
          - phone
          - date
          - url
          - imageurl
          - radio
          - dropdown
          - birthday
          - zip
        required:
          title: Required
          type: boolean
          description: Whether the merge field is required to import a contact.
        default_value:
          title: Default Value
          type: string
          description: The default value for the merge field if `null`.
        public:
          title: Merge Field Public Status
          type: boolean
          description: Whether the merge field is displayed on the signup form.
        display_order:
          title: Display Order
          type: integer
          description: The order that the merge field displays on the list signup
            form.
        options:
          $ref: '#/components/schemas/Merge Field Options'
        help_text:
          title: Merge Field Help Text
          type: string
          description: Extra text to help the subscriber fill out the form.
      description: "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for an audience."
    actions_test_body:
      required:
      - send_type
      - test_emails
      type: object
      properties:
        test_emails:
          title: Test Emails
          type: array
          description: An array of email addresses to send the test email to.
          items:
            type: string
        send_type:
          title: Type of email to test
          type: string
          description: Choose the type of test email to send.
          enum:
          - html
          - plaintext
    Open Activity:
      title: Open Activity
      type: object
      properties:
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        contact_status:
          title: Member Status
          type: string
          description: "The status of the member, namely if they are subscribed, unsubscribed,\
            \ deleted, non-subscribed, transactional, pending, or need reconfirmation."
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        opens_count:
          title: Opens count
          type: integer
          description: The total number of times the this campaign was opened by the
            list member.
          readOnly: true
        opens:
          title: Time series data of opens activity
          type: array
          description: "An array of timestamps for each time a list member opened\
            \ the campaign. If a list member opens an email multiple times, this will\
            \ return a separate timestamp for each open event."
          items:
            $ref: '#/components/schemas/Member Activity_1'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of a member's opens activity in a specific campaign.
      example:
        email_id: email_id
        email_address: email_address
        list_id: list_id
        opens_count: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        opens:
        - timestamp: 2000-01-23T04:56:07.000+00:00
        - timestamp: 2000-01-23T04:56:07.000+00:00
        contact_status: contact_status
        list_is_active: true
        vip: true
        campaign_id: campaign_id
    Ecommerce Product Image_5:
      title: E-commerce Product Image
      type: object
      properties:
        id:
          title: Image Foreign ID
          type: string
          description: A unique identifier for the product image.
        url:
          title: URL
          type: string
          description: The URL for a product image.
        variant_ids:
          title: Product Variants
          type: array
          description: The list of product variants using the image.
          items:
            type: string
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific product image.
      example:
        _links:
        - null
        - null
        variant_ids:
        - variant_ids
        - variant_ids
        id: id
        url: url
    Template Content_1:
      title: Template Content
      required:
      - id
      type: object
      properties:
        id:
          title: Template ID
          type: integer
          description: The id of the template to use.
        sections:
          title: Template Sections
          type: object
          properties: {}
          description: "Content for the sections of the template. Each key should\
            \ be the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/)\
            \ name from the template."
      description: Use this template to generate the HTML content for the campaign.
      example: null
    inline_response_200_13_report_summary_ecommerce:
      type: object
      properties:
        total_revenue:
          type: number
        currency_code:
          type: string
      example:
        total_revenue: 2.027123023002322
        currency_code: currency_code
    campaignscampaign_idcontent_variate_contents:
      required:
      - content_label
      type: object
      properties:
        content_label:
          title: Content Label
          type: string
          description: The label used to identify the content option.
        plain_text:
          title: Plain Text
          type: string
          description: "The plain-text portion of the campaign. If left unspecified,\
            \ we'll generate this automatically."
        html:
          title: Campaign HTML
          type: string
          description: The raw HTML for the campaign.
        url:
          title: Campaign URL
          type: string
          description: "When importing a campaign, the URL for the HTML."
        template:
          $ref: '#/components/schemas/Template Content_1'
        archive:
          $ref: '#/components/schemas/Upload Archive'
      example: null
    Billing Address:
      title: Billing Address
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The name associated with the billing address.
          example: Freddie Chimpenheimer
        address1:
          title: Address Field 1
          type: string
          description: The billing address for the order.
          example: 675 Ponce de Leon Ave NE
        address2:
          title: Address Field 2
          type: string
          description: An additional field for the billing address.
          example: Suite 5000
        city:
          title: 'City '
          type: string
          description: The city in the billing address.
          example: Atlanta
        province:
          title: Province
          type: string
          description: The state or normalized province in the billing address.
          example: Georgia
        province_code:
          title: Province Code
          type: string
          description: The two-letter code for the province in the billing address.
          example: GA
        postal_code:
          title: Postal Code
          type: string
          description: The postal or zip code in the billing address.
          example: "30308"
        country:
          title: Country Code
          type: string
          description: The country in the billing address.
          example: United States
        country_code:
          title: Country Code
          type: string
          description: The two-letter code for the country in the billing address.
          example: US
        longitude:
          title: Longitude
          type: number
          description: The longitude for the billing address location.
          example: -75.68903
        latitude:
          title: Latitude
          type: number
          description: The latitude for the billing address location.
          example: 45.427408
        phone:
          title: Phone Number
          type: string
          description: The phone number for the billing address
          example: "8675309"
        company:
          title: Company
          type: string
          description: The company associated with the billing address.
      description: The billing address for the order.
      example: null
    inline_response_200_3_apps:
      type: object
      properties:
        id:
          title: Client ID
          type: integer
          description: The ID for the application.
        name:
          title: Application Name
          type: string
          description: The name of the application.
        description:
          title: Application Description
          type: string
          description: A short description of the application.
        users:
          title: Application Users
          type: array
          description: An array of usernames for users who have linked the app.
          items:
            type: string
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An authorized app.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        name: name
        description: description
        id: 0
        users:
        - users
        - users
    Domain Performance:
      title: Domain Performance
      type: object
      properties:
        domains:
          title: Lists
          type: array
          description: The top 5 email domains based on total delivered emails.
          readOnly: true
          items:
            $ref: '#/components/schemas/Email Domain'
        total_sent:
          title: Total Sent
          type: integer
          description: The total number of emails sent for the campaign.
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Statistics for the top-performing email domains in a campaign.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        total_sent: 7
        domains:
        - opens_pct: 3.616076749251911
          emails_pct: 7.061401241503109
          domain: domain
          emails_sent: 0
          unsubs: 5
          opens: 1
          clicks: 5
          delivered: 2
          unsubs_pct: 4.145608029883936
          bounces: 6
          clicks_pct: 2.027123023002322
          bounces_pct: 9.301444243932576
        - opens_pct: 3.616076749251911
          emails_pct: 7.061401241503109
          domain: domain
          emails_sent: 0
          unsubs: 5
          opens: 1
          clicks: 5
          delivered: 2
          unsubs_pct: 4.145608029883936
          bounces: 6
          clicks_pct: 2.027123023002322
          bounces_pct: 9.301444243932576
        total_items: 1
        campaign_id: campaign_id
    Script:
      title: Script
      type: object
      properties:
        url:
          title: Script URL
          type: string
          description: The URL used for any integrations that offer built-in support
            for connected sites.
          readOnly: true
          example: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
        fragment:
          title: Script Fragment
          type: string
          description: A pre-built script that you can copy-and-paste into your site
            to integrate it with Mailchimp.
          readOnly: true
          example: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
            script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
            );</script>"
      description: The script used to connect your site with Mailchimp.
      readOnly: true
      example:
        fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
          script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
          );</script>"
        url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
    Automation Campaign Settings:
      title: Automation Campaign Settings
      type: object
      properties:
        from_name:
          title: From Name
          type: string
          description: The 'from' name for the Automation (not an email address).
        reply_to:
          title: Reply To Address
          type: string
          description: The reply-to email address for the Automation.
      description: The settings for the Automation workflow.
      example: null
    Shipping Address_1:
      title: Shipping Address
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The name associated with an order's shipping address.
          example: Freddie Chimpenheimer
        address1:
          title: Address Field 1
          type: string
          description: The shipping address for the order.
          example: 675 Ponce de Leon Ave NE
        address2:
          title: Address Field 2
          type: string
          description: An additional field for the shipping address.
          example: Suite 5000
        city:
          title: 'City '
          type: string
          description: The city in the order's shipping address.
          example: Atlanta
        province:
          title: Province
          type: string
          description: The state or normalized province in the order's shipping address.
          example: Georgia
        province_code:
          title: Province Code
          type: string
          description: The two-letter code for the province or state the order's shipping
            address is located in.
          example: GA
        postal_code:
          title: Postal Code
          type: string
          description: The postal or zip code in the order's shipping address.
          example: "30308"
        country:
          title: Country Code
          type: string
          description: The country in the order's shipping address.
          example: United States
        country_code:
          title: Country Code
          type: string
          description: The two-letter code for the country in the shipping address.
          example: US
        longitude:
          title: Longitude
          type: number
          description: The longitude for the shipping address location.
          example: -75.68903
        latitude:
          title: Latitude
          type: number
          description: The latitude for the shipping address location.
          example: 45.427408
        phone:
          title: Phone Number
          type: string
          description: The phone number for the order's shipping address
          example: "8675309"
        company:
          title: Company
          type: string
          description: The company associated with an order's shipping address.
      description: The shipping address for the order.
      example:
        country: United States
        address2: Suite 5000
        city: Atlanta
        address1: 675 Ponce de Leon Ave NE
        latitude: 45.427408
        province_code: GA
        country_code: US
        province: Georgia
        phone: "8675309"
        name: Freddie Chimpenheimer
        company: company
        postal_code: "30308"
        longitude: -75.68903
    Account Contact:
      title: Account Contact
      type: object
      properties:
        company:
          title: Company
          type: string
          description: The company name for the account.
          readOnly: true
        addr1:
          title: Address Line 1
          type: string
          description: The street address for the account contact.
          readOnly: true
        addr2:
          title: Address Line 2
          type: string
          description: The street address for the account contact.
          readOnly: true
        city:
          title: City
          type: string
          description: The city for the account contact.
          readOnly: true
        state:
          title: State
          type: string
          description: The state for the account contact.
          readOnly: true
        zip:
          title: Zip Code
          type: string
          description: The zip code for the account contact.
          readOnly: true
        country:
          title: Country
          type: string
          description: The country for the account contact.
          readOnly: true
      description: Information about the account contact.
      readOnly: true
      example:
        zip: zip
        country: country
        addr2: addr2
        addr1: addr1
        city: city
        company: company
        state: state
    Customers:
      title: Customers
      type: object
      properties:
        store_id:
          title: Store ID
          type: string
          description: The store id.
        customers:
          title: Customers
          type: array
          description: "An array of objects, each representing a customer of a store."
          items:
            $ref: '#/components/schemas/Ecommerce Customer_6'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A collection of the store's customers.
      example:
        store_id: store_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        customers:
        - total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
        - total_spent: 100.0
          orders_count: 4
          email_address: email_address
          address:
            country: United States
            country_code: US
            province: Georgia
            address2: Suite 5000
            city: Atlanta
            address1: 675 Ponce de Leon Ave NE
            province_code: GA
            postal_code: "30308"
          updated_at: 2015-07-15T19:28:00Z
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          last_name: last_name
          created_at: 2015-07-15T19:28:00Z
          opt_in_status: true
          company: company
          id: id
          first_name: first_name
        total_items: 0
    Ecommerce Store:
      title: E-commerce Store
      required:
      - currency_code
      - id
      - list_id
      - name
      type: object
      properties:
        id:
          title: Store Foreign ID
          type: string
          description: The unique identifier for the store.
          example: example_store
        list_id:
          title: List ID
          type: string
          description: The unique identifier for the list associated with the store.
            The `list_id` for a specific store cannot change.
          example: 1a2df69511
        name:
          title: Store Name
          type: string
          description: The name of the store.
          example: Freddie's Cat Hat Emporium
        platform:
          title: Platform
          type: string
          description: The e-commerce platform of the store.
        domain:
          title: Domain
          type: string
          description: The store domain. This parameter is required for Connected
            Sites and Google Ads.
          example: example.com
        is_syncing:
          title: Is Syncing
          type: boolean
          description: "Whether to disable automations because the store is currently\
            \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
        email_address:
          title: Email Address
          type: string
          description: The email address for the store.
          example: freddie@mailchimp.com
        currency_code:
          title: Currency
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          example: USD
        money_format:
          title: Money Format
          type: string
          description: "The currency format for the store. For example: `$`, `£`,\
            \ etc."
          example: $
        primary_locale:
          title: Primary Locale
          type: string
          description: "The primary locale for the store. For example: `en`, `de`,\
            \ etc."
          example: fr
        timezone:
          title: Timezone
          type: string
          description: The timezone for the store.
          example: Eastern
        phone:
          title: Phone
          type: string
          description: The store phone number.
          example: 404-444-4444
        address:
          $ref: '#/components/schemas/Address'
      description: An individual store in an account.
    Ecommerce Product Image_2:
      title: E-commerce Product Image
      required:
      - id
      - url
      type: object
      properties:
        id:
          title: Image Foreign ID
          type: string
          description: A unique identifier for the product image.
        url:
          title: URL
          type: string
          description: The URL for a product image.
        variant_ids:
          title: Product Variants
          type: array
          description: The list of product variants using the image.
          items:
            type: string
      description: Information about a specific product image.
    Member Tags:
      title: Member Tags
      required:
      - tags
      type: object
      properties:
        tags:
          title: Tags
          type: array
          description: A list of tags assigned to the list member.
          items:
            $ref: '#/components/schemas/Member Tag'
        is_syncing:
          title: Is Syncing
          type: boolean
          description: "When is_syncing is true, automations based on the tags in\
            \ the request will not fire"
      description: A list of tags assigned to a list member.
    Ecommerce Product Image_1:
      title: E-commerce Product Image
      type: object
      properties:
        id:
          title: Image Foreign ID
          type: string
          description: A unique identifier for the product image.
        url:
          title: URL
          type: string
          description: The URL for a product image.
        variant_ids:
          title: Product Variants
          type: array
          description: The list of product variants using the image.
          items:
            type: string
      description: Information about a specific product image.
      example: null
    Campaign Report Summary_3:
      title: Campaign Report Summary
      type: object
      properties:
        opens:
          title: Automation Opens
          type: integer
          description: The total number of opens for a campaign.
          readOnly: true
        unique_opens:
          title: Unique Opens
          type: integer
          description: The number of unique opens.
          readOnly: true
        open_rate:
          title: Open Rate
          type: number
          description: The number of unique opens divided by the total number of successful
            deliveries.
          readOnly: true
        clicks:
          title: Total Clicks
          type: integer
          description: The total number of clicks for an campaign.
          readOnly: true
        subscriber_clicks:
          title: Unique Subscriber Clicks
          type: integer
          description: The number of unique clicks.
          readOnly: true
        click_rate:
          title: Click Rate
          type: number
          description: The number of unique clicks divided by the total number of
            successful deliveries.
          readOnly: true
      description: "For sent campaigns, a summary of opens and clicks."
      example:
        subscriber_clicks: 4
        click_rate: 7.386281948385884
        opens: 7
        clicks: 2
        unique_opens: 9
        open_rate: 3.616076749251911
    Ecommerce Product Image_4:
      title: E-commerce Product Image
      type: object
      properties:
        id:
          title: Image Foreign ID
          type: string
          description: A unique identifier for the product image.
        url:
          title: URL
          type: string
          description: The URL for a product image.
        variant_ids:
          title: Product Variants
          type: array
          description: The list of product variants using the image.
          items:
            type: string
      description: Information about a specific product image.
    Campaign Report Summary_2:
      title: Campaign Report Summary
      type: object
      properties:
        opens:
          title: Automation Opens
          type: integer
          description: The total number of opens for a campaign.
          readOnly: true
        unique_opens:
          title: Unique Opens
          type: integer
          description: The number of unique opens.
          readOnly: true
        open_rate:
          title: Open Rate
          type: number
          description: The number of unique opens divided by the total number of successful
            deliveries.
          readOnly: true
        clicks:
          title: Total Clicks
          type: integer
          description: The total number of clicks for an campaign.
          readOnly: true
        subscriber_clicks:
          title: Unique Subscriber Clicks
          type: integer
          description: The number of unique clicks.
          readOnly: true
        click_rate:
          title: Click Rate
          type: number
          description: "The number of unique clicks, divided by the total number of\
            \ successful deliveries."
          readOnly: true
      description: A summary of opens and clicks for sent campaigns.
      example:
        subscriber_clicks: 9
        click_rate: 3.616076749251911
        opens: 5
        clicks: 7
        unique_opens: 5
        open_rate: 2.3021358869347655
    Send Checklist:
      title: Send Checklist
      type: object
      properties:
        is_ready:
          title: Ready?
          type: boolean
          description: Whether the campaign is ready to send.
        items:
          title: Items
          type: array
          description: A list of feedback items to review before sending your campaign.
          items:
            $ref: '#/components/schemas/Send Checklist_items'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: The send checklist for the campaign.
      example:
        is_ready: true
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        items:
        - heading: heading
          details: details
          id: 0
          type: success
        - heading: heading
          details: details
          id: 0
          type: success
    Ecommerce Product Image_3:
      title: E-commerce Product Image
      type: object
      properties:
        id:
          title: Image Foreign ID
          type: string
          description: A unique identifier for the product image.
        url:
          title: URL
          type: string
          description: The URL for a product image.
        variant_ids:
          title: Product Variants
          type: array
          description: The list of product variants using the image.
          items:
            type: string
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Information about a specific product image.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        variant_ids:
        - variant_ids
        - variant_ids
        id: id
        url: url
    Campaign Report Summary_1:
      title: Campaign Report Summary
      type: object
      properties:
        opens:
          title: Automation Opens
          type: integer
          description: The total number of opens for a campaign.
          readOnly: true
        unique_opens:
          title: Unique Opens
          type: integer
          description: The number of unique opens.
          readOnly: true
        open_rate:
          title: Open Rate
          type: number
          description: The number of unique opens divided by the total number of successful
            deliveries.
          readOnly: true
        clicks:
          title: Total Clicks
          type: integer
          description: The total number of clicks for an campaign.
          readOnly: true
        subscriber_clicks:
          title: Unique Subscriber Clicks
          type: integer
          description: The number of unique clicks.
          readOnly: true
        click_rate:
          title: Click Rate
          type: number
          description: The number of unique clicks divided by the total number of
            successful deliveries.
          readOnly: true
        ecommerce:
          $ref: '#/components/schemas/ECommerce Report_1'
      description: "For sent campaigns, a summary of opens, clicks, and e-commerce\
        \ data."
      example:
        subscriber_clicks: 9
        click_rate: 9.369310271410669
        ecommerce:
          total_spent: 8.762042012749001
          total_revenue: 9.018348186070783
          total_orders: 6
        opens: 7
        clicks: 5
        unique_opens: 1
        open_rate: 4.965218492984954
    Ecommerce Store_1:
      title: E-commerce Store
      type: object
      properties:
        id:
          title: Store Foreign ID
          type: string
          description: The unique identifier for the store.
          readOnly: true
          example: example_store
        list_id:
          title: List ID
          type: string
          description: The unique identifier for the list that's associated with the
            store. The `list_id` for a specific store can't change.
          readOnly: true
          example: 1a2df69511
        name:
          title: Store Name
          type: string
          description: The name of the store.
          example: Freddie's Cat Hat Emporium
        platform:
          title: Platform
          type: string
          description: The e-commerce platform of the store.
        domain:
          title: Domain
          type: string
          description: The store domain.  The store domain must be unique within a
            user account.
          example: example.com
        is_syncing:
          title: Is Syncing
          type: boolean
          description: "Whether to disable automations because the store is currently\
            \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
        email_address:
          title: Email Address
          type: string
          description: The email address for the store.
          example: freddie@mailchimp.com
        currency_code:
          title: Currency
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          example: USD
        money_format:
          title: Money Format
          type: string
          description: "The currency format for the store. For example: `$`, `£`,\
            \ etc."
          example: $
        primary_locale:
          title: Primary Locale
          type: string
          description: "The primary locale for the store. For example: `en`, `de`,\
            \ etc."
          example: fr
        timezone:
          title: Timezone
          type: string
          description: The timezone for the store.
          example: Eastern
        phone:
          title: Phone
          type: string
          description: The store phone number.
          example: 404-444-4444
        address:
          $ref: '#/components/schemas/Address'
        connected_site:
          $ref: '#/components/schemas/Connected Site_2'
        automations:
          $ref: '#/components/schemas/Automations'
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list connected to the store, namely if it's\
            \ deleted or disabled."
          readOnly: true
        created_at:
          title: Creation Time
          type: string
          description: The date and time the store was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the store was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An individual store in an account.
      example:
        is_syncing: true
        automations:
          abandoned_browse:
            is_supported: false
            id: 355a72bfc3
            status: sending
          abandoned_cart:
            is_supported: false
            id: 355a72bfc3
            status: sending
        address:
          country: United States
          country_code: US
          province: Georgia
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          postal_code: "30308"
          longitude: -75.68903
        list_id: 1a2df69511
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        timezone: Eastern
        primary_locale: fr
        created_at: 2015-07-15T19:28:00Z
        list_is_active: true
        platform: platform
        currency_code: USD
        money_format: $
        connected_site:
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via\
            \ API"
        email_address: freddie@mailchimp.com
        updated_at: 2015-07-15T19:28:00Z
        phone: 404-444-4444
        domain: example.com
        name: Freddie's Cat Hat Emporium
        id: example_store
    Ecommerce Store_2:
      title: E-commerce Store
      type: object
      properties:
        name:
          title: Store Name
          type: string
          description: The name of the store.
          example: Freddie's Cat Hat Emporium
        platform:
          title: Platform
          type: string
          description: The e-commerce platform of the store.
        domain:
          title: Domain
          type: string
          description: The store domain.
          example: example.com
        is_syncing:
          title: Is Syncing
          type: boolean
          description: "Whether to disable automations because the store is currently\
            \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
        email_address:
          title: Email Address
          type: string
          description: The email address for the store.
          example: freddie@mailchimp.com
        currency_code:
          title: Currency
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          example: USD
        money_format:
          title: Money Format
          type: string
          description: "The currency format for the store. For example: `$`, `£`,\
            \ etc."
          example: $
        primary_locale:
          title: Primary Locale
          type: string
          description: "The primary locale for the store. For example: `en`, `de`,\
            \ etc."
          example: fr
        timezone:
          title: Timezone
          type: string
          description: The timezone for the store.
          example: Eastern
        phone:
          title: Phone
          type: string
          description: The store phone number.
          example: 404-444-4444
        address:
          $ref: '#/components/schemas/Address'
      description: An individual store in an account.
    Opens:
      title: Opens
      type: object
      properties:
        opens_total:
          title: Total Opens
          type: integer
          description: The total number of opens for a campaign.
        unique_opens:
          title: Unique Opens
          type: integer
          description: The total number of unique opens.
        open_rate:
          title: Open Rate
          type: number
          description: The number of unique opens divided by the total number of successful
            deliveries.
        last_open:
          title: Last Open
          type: string
          description: The date and time of the last recorded open in ISO 8601 format.
          format: date-time
      description: An object describing the open activity for the campaign.
      example:
        opens_total: 3
        last_open: 2000-01-23T04:56:07.000+00:00
        unique_opens: 2
        open_rate: 4.145608029883936
    Ecommerce Store_3:
      title: E-commerce Store
      type: object
      properties:
        id:
          title: Store Foreign ID
          type: string
          description: The unique identifier for the store.
          readOnly: true
          example: example_store
        list_id:
          title: List ID
          type: string
          description: The unique identifier for the list that's associated with the
            store. The `list_id` for a specific store can't change.
          readOnly: true
          example: 1a2df69511
        name:
          title: Store Name
          type: string
          description: The name of the store.
          example: Freddie's Cat Hat Emporium
        platform:
          title: Platform
          type: string
          description: The e-commerce platform of the store.
        domain:
          title: Domain
          type: string
          description: The store domain.  The store domain must be unique within a
            user account.
          example: example.com
        is_syncing:
          title: Is Syncing
          type: boolean
          description: "Whether to disable automations because the store is currently\
            \ [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations)."
        email_address:
          title: Email Address
          type: string
          description: The email address for the store.
          example: freddie@mailchimp.com
        currency_code:
          title: Currency
          type: string
          description: The three-letter ISO 4217 code for the currency that the store
            accepts.
          example: USD
        money_format:
          title: Money Format
          type: string
          description: "The currency format for the store. For example: `$`, `£`,\
            \ etc."
          example: $
        primary_locale:
          title: Primary Locale
          type: string
          description: "The primary locale for the store. For example: `en`, `de`,\
            \ etc."
          example: fr
        timezone:
          title: Timezone
          type: string
          description: The timezone for the store.
          example: Eastern
        phone:
          title: Phone
          type: string
          description: The store phone number.
          example: 404-444-4444
        address:
          $ref: '#/components/schemas/Address'
        connected_site:
          $ref: '#/components/schemas/Connected Site_2'
        automations:
          $ref: '#/components/schemas/Automations'
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list connected to the store, namely if it's\
            \ deleted or disabled."
          readOnly: true
        created_at:
          title: Creation Time
          type: string
          description: The date and time the store was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        updated_at:
          title: Update Time
          type: string
          description: The date and time the store was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2015-07-15T19:28:00Z
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An individual store in an account.
      example:
        is_syncing: true
        automations:
          abandoned_browse:
            is_supported: false
            id: 355a72bfc3
            status: sending
          abandoned_cart:
            is_supported: false
            id: 355a72bfc3
            status: sending
        address:
          country: United States
          country_code: US
          province: Georgia
          address2: Suite 5000
          city: Atlanta
          address1: 675 Ponce de Leon Ave NE
          latitude: 45.427408
          province_code: GA
          postal_code: "30308"
          longitude: -75.68903
        list_id: 1a2df69511
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        timezone: Eastern
        primary_locale: fr
        created_at: 2015-07-15T19:28:00Z
        list_is_active: true
        platform: platform
        currency_code: USD
        money_format: $
        connected_site:
          site_script:
            fragment: "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"\
              script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\"\
              );</script>"
            url: "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
          site_foreign_id: "a180c384d7db88b if created in-app, MC001 if created via\
            \ API"
        email_address: freddie@mailchimp.com
        updated_at: 2015-07-15T19:28:00Z
        phone: 404-444-4444
        domain: example.com
        name: Freddie's Cat Hat Emporium
        id: example_store
    Click Detail Member_1:
      title: Click Detail Member
      type: object
      properties:
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        clicks:
          title: Total Clicks
          type: integer
          description: The total number of times the subscriber clicked on the link.
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The campaign id.
          readOnly: true
        url_id:
          title: URL ID
          type: string
          description: The id for the tracked URL in the campaign.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The list id.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        contact_status:
          title: Member Status
          type: string
          description: "The status of the member, namely if they are subscribed, unsubscribed,\
            \ deleted, non-subscribed, transactional, pending, or need reconfirmation."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A subscriber who clicked a specific URL in a specific campaign.
      example:
        email_id: email_id
        email_address: email_address
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        clicks: 0
        contact_status: contact_status
        url_id: url_id
        vip: true
        list_is_active: true
        campaign_id: campaign_id
    Conversation_1:
      title: Conversation
      type: object
      properties:
        id:
          title: ID
          type: string
          description: A string that uniquely identifies this conversation.
          readOnly: true
        message_count:
          title: Message Count
          type: integer
          description: The total number of messages in this conversation.
          readOnly: true
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique identifier of the campaign for this conversation.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique identifier of the list for this conversation.
          readOnly: true
        unread_messages:
          title: Unread Messages
          type: integer
          description: The number of unread messages in this conversation.
          readOnly: true
        from_label:
          title: From Label
          type: string
          description: A label representing the sender of this message.
          readOnly: true
        from_email:
          title: From Email
          type: string
          description: A label representing the email of the sender of this message.
          readOnly: true
        subject:
          title: Subject
          type: string
          description: The subject of the message.
          readOnly: true
        last_message:
          $ref: '#/components/schemas/Last Message'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Details about an individual conversation. Conversation tracking
        is a feature available to paid accounts that lets you view replies to your
        campaigns in your Mailchimp account.
      example:
        from_email: from_email
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        subject: subject
        unread_messages: 6
        last_message:
          from_email: from_email
          read: true
          subject: subject
          message: message
          from_label: from_label
          timestamp: 2000-01-23T04:56:07.000+00:00
        id: id
        message_count: 0
        from_label: from_label
        campaign_id: campaign_id
    Campaign Delivery Status:
      title: Campaign Delivery Status
      type: object
      properties:
        enabled:
          title: Delivery Status Enabled
          type: boolean
          description: Whether Campaign Delivery Status is enabled for this account
            and campaign.
          readOnly: true
        can_cancel:
          title: Campaign Cancelable
          type: boolean
          description: Whether a campaign send can be canceled.
          readOnly: true
        status:
          title: Campaign Delivery Status
          type: string
          description: The current state of a campaign delivery.
          readOnly: true
          enum:
          - delivering
          - delivered
          - canceling
          - canceled
        emails_sent:
          title: Emails Sent
          type: integer
          description: The total number of emails confirmed sent for this campaign
            so far.
          readOnly: true
        emails_canceled:
          title: Emails Canceled
          type: integer
          description: The total number of emails canceled for this campaign.
          readOnly: true
      description: Updates on campaigns in the process of sending.
      example:
        emails_sent: 6
        can_cancel: true
        emails_canceled: 3
        enabled: true
        status: delivering
    Last Message:
      title: Last Message
      type: object
      properties:
        from_label:
          title: From Label
          type: string
          description: A label representing the sender of this message.
          readOnly: true
        from_email:
          title: From Email
          type: string
          description: A label representing the email of the sender of this message.
          readOnly: true
        subject:
          title: Subject
          type: string
          description: The subject of this message.
          readOnly: true
        message:
          title: Message
          type: string
          description: The plain-text content of the message.
          readOnly: true
        read:
          title: Read
          type: boolean
          description: Whether this message has been marked as read.
        timestamp:
          title: Timestamp
          type: string
          description: The date and time the message was either sent or received in
            ISO 8601 format.
          format: date-time
          readOnly: true
      description: The most recent message in the conversation.
      example:
        from_email: from_email
        read: true
        subject: subject
        message: message
        from_label: from_label
        timestamp: 2000-01-23T04:56:07.000+00:00
    Subscriber in Automation Queue:
      title: Subscriber in Automation Queue
      required:
      - email_address
      type: object
      properties:
        email_address:
          title: Email Address
          type: string
          description: The list member's email address.
      description: Information about subscribers in an Automation email queue.
    Automation Trigger_1:
      title: Automation Trigger
      required:
      - workflow_type
      type: object
      properties:
        workflow_type:
          title: Workflow Type
          type: string
          description: The type of Automation workflow.
          enum:
          - abandonedBrowse
          - abandonedCart
          - api
          - bestCustomers
          - categoryFollowup
          - dateAdded
          - emailFollowup
          - emailSeries
          - groupAdd
          - groupRemove
          - mandrill
          - productFollowup
          - purchaseFollowup
          - recurringEvent
          - specialEvent
          - visitUrl
          - welcomeSeries
        workflow_title:
          title: Workflow Title
          type: string
          description: The title of the workflow type.
          readOnly: true
        runtime:
          $ref: '#/components/schemas/Automation Workflow Runtime Settings'
        workflow_emails_count:
          title: Workflow Emails Count
          type: integer
          description: The number of emails in the Automation workflow.
          readOnly: true
      description: Available triggers for Automation workflows.
      example:
        runtime:
          hours:
            type: send_asap
          days:
          - sunday
          - sunday
        workflow_emails_count: 1
        workflow_type: abandonedBrowse
        workflow_title: workflow_title
    ChimpChatter:
      title: ChimpChatter
      type: object
      properties:
        title:
          title: Title
          type: string
          readOnly: true
          example: 1 new subscriber to Your New Campaign!
        message:
          title: Message
          type: string
          readOnly: true
          example: People are telling their friends about your campaign!
        type:
          title: Type
          type: string
          description: The type of activity
          readOnly: true
          example: campaigns:forward-to-friend
          enum:
          - lists:new-subscriber
          - lists:unsubscribes
          - lists:profile-updates
          - campaigns:facebook-likes
          - campaigns:forward-to-friend
          - lists:imports
        update_time:
          title: Update Time
          type: string
          description: The date and time this activity was updated.
          format: date-time
          readOnly: true
          example: 2017-08-04T11:09:01Z
        url:
          title: URL
          type: string
          description: URL to a report that includes this activity
          readOnly: true
          example: http://dev.mailchimp.com/reports/summary?id=1
        list_id:
          title: List ID
          type: string
          description: "If it exists, list ID for the associated list"
          readOnly: true
          example: 2017-08-04T11:09:01+00:00
        campaign_id:
          title: Campaign ID
          type: string
          description: "If it exists, campaign ID for the associated campaign"
          readOnly: true
          example: 2017-08-04T11:09:01+00:00
      description: A Chimp Chatter message
      example:
        update_time: 2017-08-04T11:09:01Z
        list_id: 2017-08-04T11:09:01+00:00
        title: 1 new subscriber to Your New Campaign!
        message: People are telling their friends about your campaign!
        type: campaigns:forward-to-friend
        url: http://dev.mailchimp.com/reports/summary?id=1
        campaign_id: 2017-08-04T11:09:01+00:00
    inline_response_200:
      type: object
      properties:
        chimp_chatter:
          type: array
          description: An array of Chimp Chatter messages. There's a maximum of 200
            messages present for an account.
          readOnly: true
          items:
            $ref: '#/components/schemas/ChimpChatter'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An array of Chimp Chatter messages. There's a maximum of 200 messages
        present for an account.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        chimp_chatter:
        - update_time: 2017-08-04T11:09:01Z
          list_id: 2017-08-04T11:09:01+00:00
          title: 1 new subscriber to Your New Campaign!
          message: People are telling their friends about your campaign!
          type: campaigns:forward-to-friend
          url: http://dev.mailchimp.com/reports/summary?id=1
          campaign_id: 2017-08-04T11:09:01+00:00
        - update_time: 2017-08-04T11:09:01Z
          list_id: 2017-08-04T11:09:01+00:00
          title: 1 new subscriber to Your New Campaign!
          message: People are telling their friends about your campaign!
          type: campaigns:forward-to-friend
          url: http://dev.mailchimp.com/reports/summary?id=1
          campaign_id: 2017-08-04T11:09:01+00:00
        total_items: 0
    Automation Emails:
      title: Automation Emails
      type: object
      properties:
        emails:
          title: Emails
          type: array
          description: "An array of objects, each representing an email in an Automation\
            \ workflow."
          items:
            $ref: '#/components/schemas/Automation Workflow Email_1'
        total_items:
          title: Item Count
          type: integer
          description: The total number of items matching the query regardless of
            pagination.
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of the emails in an Automation workflow.
      example:
        emails:
        - archive_url: archive_url
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            authenticate: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 2
          workflow_id: workflow_id
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          trigger_settings:
            runtime:
              hours:
                type: send_asap
              days:
              - sunday
              - sunday
            workflow_emails_count: 1
            workflow_type: abandonedBrowse
            workflow_title: workflow_title
          web_id: 33345484
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          start_time: 2000-01-23T04:56:07.000+00:00
          delay:
            amount: 6
            full_description: 1 day after subscribers purchase anything from your
              store
            action_description: subscribers purchase anything from your store
            action: previous_campaign_sent
            type: now
            direction: before
          send_time: 2000-01-23T04:56:07.000+00:00
          content_type: content_type
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - {}
              - {}
            list_id: list_id
            segment_text: segment_text
            recipient_count: 5
            list_name: list_name
            list_is_active: true
          emails_sent: 1
          id: id
          position: 0
          has_logo_merge_tag: true
          status: save
          report_summary:
            subscriber_clicks: 4
            click_rate: 7.386281948385884
            opens: 7
            clicks: 2
            unique_opens: 9
            open_rate: 3.616076749251911
        - archive_url: archive_url
          settings:
            auto_footer: true
            subject_line: subject_line
            preview_text: preview_text
            authenticate: true
            title: title
            from_name: from_name
            auto_tweet: true
            auto_fb_post:
            - auto_fb_post
            - auto_fb_post
            fb_comments: true
            drag_and_drop: true
            reply_to: reply_to
            inline_css: true
            template_id: 2
          workflow_id: workflow_id
          create_time: 2000-01-23T04:56:07.000+00:00
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          trigger_settings:
            runtime:
              hours:
                type: send_asap
              days:
              - sunday
              - sunday
            workflow_emails_count: 1
            workflow_type: abandonedBrowse
            workflow_title: workflow_title
          web_id: 33345484
          tracking:
            salesforce:
              notes: true
              campaign: true
            goal_tracking: true
            capsule:
              notes: true
            clicktale: clicktale
            text_clicks: true
            ecomm360: true
            opens: true
            google_analytics: google_analytics
            html_clicks: true
          needs_block_refresh: true
          start_time: 2000-01-23T04:56:07.000+00:00
          delay:
            amount: 6
            full_description: 1 day after subscribers purchase anything from your
              store
            action_description: subscribers purchase anything from your store
            action: previous_campaign_sent
            type: now
            direction: before
          send_time: 2000-01-23T04:56:07.000+00:00
          content_type: content_type
          social_card:
            image_url: image_url
            description: description
            title: title
          recipients:
            segment_opts:
              prebuilt_segment_id: subscribers-female
              match: any
              saved_segment_id: 5
              conditions:
              - {}
              - {}
            list_id: list_id
            segment_text: segment_text
            recipient_count: 5
            list_name: list_name
            list_is_active: true
          emails_sent: 1
          id: id
          position: 0
          has_logo_merge_tag: true
          status: save
          report_summary:
            subscriber_clicks: 4
            click_rate: 7.386281948385884
            opens: 7
            clicks: 2
            unique_opens: 9
            open_rate: 3.616076749251911
        _links:
        - null
        - null
        total_items: 1
    Member Tag:
      title: Member Tag
      required:
      - name
      - status
      type: object
      properties:
        name:
          title: Tag Name
          type: string
          description: The name of the tag.
        status:
          title: Status
          type: string
          description: "The status for the tag on the member, pass in active to add\
            \ a tag or inactive to remove it."
          enum:
          - inactive
          - active
      description: Add or remove tags on a member by declaring a tag either active
        or inactive on a member.
      example: null
    Segment Options:
      title: Segment Options
      type: object
      properties:
        saved_segment_id:
          title: Saved Segment ID
          type: integer
          description: The id for an existing saved segment.
        match:
          title: Match Type
          type: string
          description: Segment match type.
          enum:
          - any
          - all
        conditions:
          title: Segment Type
          type: array
          description: "Segment match conditions. There are multiple possible types,\
            \ see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas)."
          items:
            type: object
            x-oneOf:
            - type: object
              title: Aim Segment
              description: Segment by interaction with a specific campaign.
              properties:
                condition_type:
                  type: string
                  x-value: Aim
                  enum:
                  - Aim
                field:
                  type: string
                  enum:
                  - aim
                  title: Segment Field
                  description: Segment by interaction with a specific campaign.
                  example: aim
                op:
                  type: string
                  enum:
                  - open
                  - click
                  - sent
                  - noopen
                  - noclick
                  - nosent
                  title: Segment Operator
                  description: "The status of the member with regard to their campaign\
                    \ interaction. One of the following: opened, clicked, was sent,\
                    \ didn't open, didn't click, or was not sent."
                  example: open
                value:
                  type: string
                  title: Segment Data
                  description: Either the web id value for a specific campaign or
                    'any' to account for subscribers who have/have not interacted
                    with any campaigns.
                  example: any
            - type: object
              title: Automation Segment
              description: Segment by interaction with an Automation workflow.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Automation
                  enum:
                  - Automation
                field:
                  type: string
                  enum:
                  - automation
                  title: Segment Field
                  description: Segment by interaction with an Automation workflow.
                  example: automation
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the automation\
                    \ workflow. One of the following: has started the workflow, has\
                    \ completed the workflow, has not started the workflow, or has\
                    \ not completed the workflow."
                  example: started
                value:
                  type: string
                  title: Segment Data
                  description: The web id for the automation workflow to segment against.
                  example: "2135217"
            - type: object
              title: Poll Activity Segment
              description: Segment by poll activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: CampaignPoll
                  enum:
                  - CampaignPoll
                field:
                  type: string
                  enum:
                  - poll
                  title: Segment Field
                  description: Segment by poll activity.
                  example: poll
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members have/have not interacted with a specific poll
                    in a Mailchimp email.
                  example: member
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the poll.
                  example: 409
            - type: object
              title: Conversation Segment
              description: Segment by interaction with a campaign via Conversations.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Conversation
                  enum:
                  - Conversation
                field:
                  type: string
                  enum:
                  - conversation
                  title: Segment Field
                  description: Segment by interaction with a campaign via Conversations.
                  example: conversation
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: "The status of a member's interaction with a conversation.\
                    \ One of the following: has replied or has not replied."
                  example: member
                value:
                  type: string
                  title: Segment Data
                  description: The web id value for a specific campaign or 'any' to
                    account for subscribers who have/have not interacted with any
                    campaigns.
                  example: any
            - type: object
              title: Date Segment
              description: Segment by a specific date field.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Date
                  enum:
                  - Date
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  - info_changed
                  - ecomm_date
                  title: Segment Field
                  description: "The type of date field to segment on: The opt-in time\
                    \ for a signup, the date the subscriber was last updated, or the\
                    \ date of their last ecomm purchase."
                  example: timestamp_opt
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  - not
                  - blank
                  - blank_not
                  - within
                  - notwithin
                  title: Segment Operator
                  description: "When the event took place:  Before, after, is a specific\
                    \ date, is not a specific date, is blank, or is not blank."
                  example: greater
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
                  example: date
                extra:
                  type: string
                  title: Segment Extra Value
                  description: "When segmenting on 'date' or 'campaign', the date\
                    \ for the segment formatted as YYYY-MM-DD or the web id for the\
                    \ campaign."
                  example: 2015-01-30
            - type: object
              title: Email Client Segment
              description: Segment by use of a particular email client.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EmailClient
                  enum:
                  - EmailClient
                field:
                  type: string
                  enum:
                  - email_client
                  title: Segment Field
                  description: Segment by use of a particular email client.
                  example: email_client
                op:
                  type: string
                  enum:
                  - client_is
                  - client_not
                  title: Segment Operator
                  description: "The operation to determine whether we select clients\
                    \ that match the value, or clients that do not match the value."
                  example: client_is
                value:
                  type: string
                  title: Segment Data
                  description: The name of the email client.
                  example: Gmail
            - type: object
              title: Language Segment
              description: Segment by language.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: Language
                  enum:
                  - Language
                field:
                  type: string
                  enum:
                  - language
                  title: Segment Field
                  description: Segmenting based off of a subscriber's language.
                  example: language
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Whether the member's language is or is not set to a
                    specific language.
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: A two-letter language identifier.
                  example: en
            - type: object
              title: Member Rating Segment
              description: Segment by member rating.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: MemberRating
                  enum:
                  - MemberRating
                field:
                  type: string
                  enum:
                  - rating
                  title: Segment Field
                  description: Segment by member rating.
                  example: rating
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have have a rating that is/not exactly
                    a given number or members who have a rating greater/less than
                    a given number.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The star rating number to segment against.
                  example: 4
            - type: object
              title: Signup Source Segment
              description: Segment by signup source.
              required:
              - field
              - condition_type
              - op
              properties:
                condition_type:
                  type: string
                  enum:
                  - SignupSource
                  x-value: SignupSource
                  title: Type
                field:
                  type: string
                  enum:
                  - source
                  title: Segment Field
                  example: source
                op:
                  type: string
                  enum:
                  - source_is
                  - source_not
                  title: Segment Operator
                  description: Whether the member's signup source was/was not a particular
                    value.
                  example: source_is
                value:
                  type: string
                  title: Segment Data
                  description: The signup source.
                  example: List Import
            - type: object
              title: Survey Monkey Segment
              description: Segment by interaction with a SurveyMonkey survey.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SurveyMonkey
                  enum:
                  - SurveyMonkey
                field:
                  type: string
                  enum:
                  - survey_monkey
                  title: Segment Field
                  description: Segment by interaction with a SurveyMonkey survey.
                  example: survey_monkey
                op:
                  type: string
                  enum:
                  - started
                  - completed
                  - not_started
                  - not_completed
                  title: Segment Operator
                  description: "The status of the member with regard to the survey.One\
                    \ of the following: has started the survey, has completed the\
                    \ survey, has not started the survey, or has not completed the\
                    \ survey."
                  example: started
                value:
                  type: string
                  title: Survey ID
                  description: The unique ID of the survey monkey survey.
                  example: "32179586"
            - type: object
              title: VIP Segment
              description: Segment by VIP status.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: VIP
                  enum:
                  - VIP
                field:
                  type: string
                  enum:
                  - gmonkey
                  title: Segment Field
                  description: Segment by VIP status.
                  example: gmonkey
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Whether the member is or is not marked as VIP.
                  example: member
            - type: object
              title: Interests Segment
              description: Segment by an interest group merge field.
              properties:
                condition_type:
                  type: string
                  x-value: Interests
                  enum:
                  - Interests
                field:
                  type: string
                  title: Segment Field
                  description: Segmenting based on interest group information. This
                    should start with 'interests-' followed by the grouping id. Ex.
                    'interests-123'.
                  example: interests-123
                op:
                  type: string
                  enum:
                  - interestcontains
                  - interestcontainsall
                  - interestnotcontains
                  title: Segment Operator
                  description: "Whether the member is a part of one, all, or none\
                    \ of the groups."
                  example: interestcontains
                value:
                  type: array
                  title: Segment Value
                  description: "An array containing strings, each representing a group\
                    \ id."
                  items:
                    type: string
                    example:
                    - "44401"
                    - "44405"
                    - "44409"
            - type: object
              title: Ecommerce Category Segment
              description: Segment by purchases in specific items or categories.
              properties:
                condition_type:
                  type: string
                  x-value: EcommCategory
                  enum:
                  - EcommCategory
                field:
                  type: string
                  enum:
                  - ecomm_cat
                  - ecomm_prod
                  title: Segment Field
                  description: Segment by purchases in specific items or categories.
                  example: ecomm_cat
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "A member who has purchased from a category/specific\
                    \ item that is/is not a specific name, where the category/item\
                    \ name contains/doesn't contain a specific phrase or string, or\
                    \ a category/item name that starts/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Data
                  description: The ecommerce category/item information.
                  example: Product
            - type: object
              title: Ecommerce Number Segment
              description: "Segment by average spent total, number of orders, total\
                \ number of products purchased, or average number of products per\
                \ order."
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: EcommNumber
                  enum:
                  - EcommNumber
                field:
                  type: string
                  enum:
                  - ecomm_spent_avg
                  - ecomm_orders
                  - ecomm_prod_all
                  - ecomm_avg_ord
                  title: Segment Field
                  description: "Segment by average spent total, number of orders,\
                    \ total number of products purchased, or average number of products\
                    \ per order."
                  example: ecomm_orders
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than the segment value."
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: "Members who have spent exactly, have not spent exactly,\
                    \ spent more, or spent less than this amount."
                  example: 42
            - type: object
              title: Ecommerce Purchased Segment
              description: Segment by whether someone has purchased anything.
              properties:
                condition_type:
                  type: string
                  x-value: EcommPurchased
                  enum:
                  - EcommPurchased
                field:
                  type: string
                  enum:
                  - ecomm_purchased
                  title: Segment Field
                  description: Segment by whether someone has purchased anything.
                  example: ecomm_purchased
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who have have ('member') or have not ('notmember')
                    purchased.
                  example: member
            - type: object
              title: Ecommerce Spent Segment
              description: Segment by amount spent on a single order or across all
                orders.
              properties:
                condition_type:
                  type: string
                  x-value: EcommSpent
                  enum:
                  - EcommSpent
                field:
                  type: string
                  enum:
                  - ecomm_spent_one
                  - ecomm_spent_all
                  title: Segment Field
                  description: Segment by amount spent on a single order or across
                    all orders.
                  example: ecomm_spent_one
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have spent 'more' or 'less' than then specified
                    value.
                  example: greater
                value:
                  type: integer
                  title: Segment Data
                  description: The total amount a member spent.
                  example: 42
            - type: object
              title: Ecommerce Purchased Store Segment
              description: Segment by purchases from a specific store.
              properties:
                condition_type:
                  type: string
                  x-value: EcommStore
                  enum:
                  - EcommStore
                field:
                  type: string
                  enum:
                  - ecomm_store
                  title: Segment Field
                  description: Segment by purchases from a specific store.
                  example: ecomm_store
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who have or have not purchased from a specific
                    store.
                  example: is
                value:
                  type: string
                  title: Segment Operator
                  description: The store id to segment against.
                  example: "289"
            - type: object
              title: Goal Activity Segment
              description: Segment by Goal activity.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalActivity
                  enum:
                  - GoalActivity
                field:
                  type: string
                  enum:
                  - goal
                  title: Segment Field
                  description: Segment by Goal activity.
                  example: goal
                op:
                  type: string
                  enum:
                  - is
                  - goal_not
                  - contains
                  - goal_notcontain
                  - starts
                  - ends
                  title: Segment Operator
                  description: "Whether the website URL is/not exactly, contains/doesn't\
                    \ contain, starts with/ends with a string."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The URL to check Goal activity against.
            - type: object
              title: Goal Timestamp Segment
              description: Segment by most recent interaction with a website.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: GoalTimestamp
                  enum:
                  - GoalTimestamp
                field:
                  type: string
                  enum:
                  - goal_last_visited
                  title: Segment Field
                  description: Segment by most recent interaction with a website.
                  example: goal_last_visited
                op:
                  type: string
                  enum:
                  - greater
                  - less
                  - is
                  title: Segment Operator
                  description: "Whether the website activity happened after, before,\
                    \ or at a given timestamp."
                  example: greater
                value:
                  type: string
                  title: Segment Value
                  description: The date to check Goal activity against.
                  example: 2015-07-20 19:45:21
            - type: object
              title: Similar Subscribers Segment Member Segment
              description: Segment by similar subscribers.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: FuzzySegment
                  enum:
                  - FuzzySegment
                field:
                  type: string
                  enum:
                  - fuzzy_segment
                  title: Segment Field
                  description: Segment by similar subscribers.
                  example: fuzzy_segment
                op:
                  type: string
                  enum:
                  - fuzzy_is
                  - fuzzy_not
                  title: Segment Operator
                  description: Members who are/are not apart of a 'similar subscribers'
                    segment.
                  example: fuzzy_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the 'similar subscribers' segment.
                  example: 48433
            - type: object
              title: Static Segment Member Segment
              description: Segment by a given static segment.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: StaticSegment
                  enum:
                  - StaticSegment
                field:
                  type: string
                  enum:
                  - static_segment
                  title: Segment Field
                  description: Segment by a given static segment.
                  example: static_segment
                op:
                  type: string
                  enum:
                  - static_is
                  - static_not
                  title: Segment Operator
                  description: Members who are/are not apart of a static segment.
                  example: static_is
                value:
                  type: number
                  title: Segment Operator
                  description: The id for the static segment.
                  example: 48433
            - type: object
              title: Location-Based Segment
              description: Segment by a specific country or US state.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoCountryState
                  enum:
                  - IPGeoCountryState
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeocountry
                  - ipgeonotcountry
                  - ipgeostate
                  - ipgeonotstate
                  title: Segment Operator
                  description: Segment members who are within a specific country or
                    US state.
                  example: ipgeocountry
                value:
                  type: string
                  title: Segment Data
                  description: The two-letter country code or US state abbreviation.
                  example: US
            - type: object
              title: Geolocation Segment
              description: Segment by a specific geographic region.
              required:
              - field
              - op
              - value
              - addr
              - lat
              - lng
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoIn
                  enum:
                  - IPGeoIn
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoin
                  - ipgeonotin
                  title: Segment Operator
                  description: Segment members who are within a specific geographic
                    region.
                  example: ipgeoin
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 42
                addr:
                  type: string
                  title: Segment Location Address
                  description: The address of the target location.
                  example: "Atlanta, GA, USA"
                lat:
                  type: string
                  title: Segment Location Latitude
                  description: The latitude of the target location.
                  example: "33.7489954"
                lng:
                  type: string
                  title: Segment Location Longitude
                  description: The longitude of the target location.
                  example: "-84.3879824"
            - type: object
              title: US Zip Code Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoInZip
                  enum:
                  - IPGeoInZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoinzip
                  title: Segment Operator
                  description: Segment members who are within a specific US zip code.
                  example: ipgeoinzip
                value:
                  type: integer
                  title: Segment Data
                  description: The radius of the target location.
                  example: 25
                extra:
                  type: integer
                  title: Extra Data
                  description: The zip code to segment against.
                  example: 30318
            - type: object
              title: Unknown Location-Based Segment
              description: Segment members whose location information is unknown.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoUnknown
                  enum:
                  - IPGeoUnknown
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeounknown
                  title: Segment Operator
                  description: Segment members for which location information is unknown.
                  example: ipgeounknown
            - type: object
              title: Zip Code Location-Based Segment
              description: Segment by a specific US ZIP code.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: IPGeoZip
                  enum:
                  - IPGeoZip
                field:
                  type: string
                  enum:
                  - ipgeo
                  title: Segment Field
                  description: Segmenting subscribers who are within a specific location.
                  example: ipgeo
                op:
                  type: string
                  enum:
                  - ipgeoiszip
                  - ipgeonotzip
                  title: Segment Operator
                  description: Segment members who are/are not within a specific US
                    zip code.
                  example: ipgeonotzip
                value:
                  type: integer
                  title: Segment Data
                  description: The 5-digit zip code.
                  example: 30318
            - type: object
              title: Social Profiles Age Segment
              description: Segment by age ranges in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialAge
                  enum:
                  - SocialAge
                field:
                  type: string
                  enum:
                  - social_age
                  title: Segment Field
                  description: Segment by age ranges in Social Profiles data.
                  example: social_age
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-54
                  - 55+
                  title: Segment Operator
                  description: The age range to segment.
                  example: 35-54
            - type: object
              title: Social Profiles Gender Segment
              description: Segment by listed gender in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialGender
                  enum:
                  - SocialGender
                field:
                  type: string
                  enum:
                  - social_gender
                  title: Segment Field
                  description: Segment by listed gender in Social Profiles data.
                  example: social_gender
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The Social Profiles gender to segment.
                  example: female
            - type: object
              title: Social Profiles Influence Segment
              description: Segment by influence rating in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialInfluence
                  enum:
                  - SocialInfluence
                field:
                  type: string
                  enum:
                  - social_influence
                  title: Segment Field
                  description: Segment by influence rating in Social Profiles data.
                  example: social_influence
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - greater
                  - less
                  title: Segment Operator
                  description: Members who have a rating that is/not or greater/less
                    than the rating provided.
                  example: greater
                value:
                  type: number
                  title: Segment Operator
                  description: The Social Profiles influence rating to segment.
                  example: 2
            - type: object
              title: Social Profiles Social Network Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkMember
                  enum:
                  - SocialNetworkMember
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - member
                  - notmember
                  title: Segment Operator
                  description: Members who are/not on a given social network.
                  example: member
                value:
                  type: string
                  enum:
                  - twitter
                  - facebook
                  - linkedin
                  - flickr
                  - foursquare
                  - lastfm
                  - myspace
                  - quora
                  - vimeo
                  - yelp
                  - youtube
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter
            - type: object
              title: Social Profiles Social Network Follow Segment
              description: Segment by social network in Social Profiles data.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: SocialNetworkFollow
                  enum:
                  - SocialNetworkFollow
                field:
                  type: string
                  enum:
                  - social_network
                  title: Segment Field
                  description: Segment by social network in Social Profiles data.
                  example: social_network
                op:
                  type: string
                  enum:
                  - follow
                  - notfollow
                  title: Segment Operator
                  description: Members who are/not following a linked account on a
                    given social network.
                  example: follow
                value:
                  type: string
                  enum:
                  - twitter_follow
                  title: Segment Operator
                  description: The social network to segment against.
                  example: twitter_follow
            - type: object
              title: Address Merge Field Segment
              description: Segment by an address-type merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: AddressMerge
                  enum:
                  - AddressMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address-type merge field to segment.
                  example: MMERGE3
                op:
                  type: string
                  enum:
                  - contains
                  - notcontain
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's address merge field contains/does
                    not contain a value or is/is not blank.
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Atlanta
            - type: object
              title: Address/Zip Merge Field Segment
              description: Segment by an address-type merge field within a given distance.
              required:
              - field
              - op
              - value
              - extra
              properties:
                condition_type:
                  type: string
                  x-value: ZipMerge
                  enum:
                  - ZipMerge
                field:
                  type: string
                  title: Segment Field
                  description: An address or zip-type merge field to segment.
                  example: MMERGE2
                op:
                  type: string
                  enum:
                  - geoin
                  title: Segment Operator
                  description: Whether the member's address merge field is within
                    a given distance from a city or zip.
                  example: geoin
                value:
                  type: string
                  title: Segment Value
                  description: The distance from the city/zip.
                  example: "25"
                extra:
                  type: string
                  title: Segment Extra
                  description: The city or the zip being used to segment against.
                  example: "30318"
            - type: object
              title: Birthday Merge Field Segment
              description: Segment by a contact's birthday.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: BirthdayMerge
                  enum:
                  - BirthdayMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE4
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: Whether the member's birthday merge information is/is
                    not a certain date or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against (mm/dd).
                  example: 01/30
            - type: object
              title: Date Merge Field Segment
              description: Segment by a given date merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: DateMerge
                  enum:
                  - DateMerge
                field:
                  type: string
                  title: Segment Field
                  description: A date merge field to segment.
                  example: MMERGE5
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - less
                  - blank
                  - blank_not
                  - greater
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ is greater/less than a value or is/is not blank."
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: A date to segment against.
                  example: 01/30/2015
            - type: object
              title: Dropdown/Radio Merge Field Segment
              description: An individual segment condition
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: SelectMerge
                  enum:
                  - SelectMerge
                field:
                  type: string
                  title: Segment Field
                  description: A merge field to segment.
                  example: MMERGE6
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - blank
                  - blank_not
                  - notcontain
                  - contains
                  title: Segment Operator
                  description: Whether the member's merge information is/is not a
                    value or is/is not blank.
                  example: is
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text merge field with.
                  example: Second Choice
            - type: object
              title: Text or Number Merge Field Segment
              description: Segment by a given text or number merge field.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: TextMerge
                  enum:
                  - TextMerge
                field:
                  type: string
                  title: Segment Field
                  description: A text or number merge field to segment.
                  example: MMERGE7
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  - blank
                  - blank_not
                  title: Segment Operator
                  description: "Whether the member's merge information is/is not,\
                    \ contains/does not contain, starts/ends with, or is greater/less\
                    \ than a value"
                  example: contains
                value:
                  type: string
                  title: Segment Value
                  description: The value to segment a text or number merge field with.
                  example: Freddie's Jokes
            - type: object
              title: Email Segment
              description: Segment by email address.
              required:
              - field
              - op
              properties:
                condition_type:
                  type: string
                  x-value: EmailAddress
                  enum:
                  - EmailAddress
                field:
                  type: string
                  enum:
                  - merge0
                  - EMAIL
                  title: Segment Field
                  description: Segmenting based off of a subscriber's email address.
                  example: EMAIL
                op:
                  type: string
                  enum:
                  - is
                  - not
                  - contains
                  - notcontain
                  - starts
                  - ends
                  - greater
                  - less
                  title: Segment Operator
                  description: "Whether the email address is/not exactly, contains/doesn't\
                    \ contain, starts/ends with a string."
                value:
                  type: string
                  title: Segment Value
                  description: The value to compare the email against.
                  example: urist.mcvankab@freddiesjokes.com
            - type: object
              title: Predicted Gender Segment
              description: Segment by predicted gender.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedGender
                  enum:
                  - PredictedGender
                field:
                  type: string
                  enum:
                  - predicted_gender
                  title: Segment Field
                  description: Segment by predicted gender.
                op:
                  type: string
                  enum:
                  - is
                  - not
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - male
                  - female
                  title: Segment Operator
                  description: The predicted gender to segment.
                  example: female
            - type: object
              title: Predicted Age Segment
              description: Segment by predicted age.
              required:
              - field
              - op
              - value
              properties:
                condition_type:
                  type: string
                  x-value: PredictedAge
                  enum:
                  - PredictedAge
                field:
                  type: string
                  enum:
                  - predicted_age_range
                  title: Segment Field
                  description: Segment by predicted age.
                op:
                  type: string
                  enum:
                  - is
                  title: Segment Operator
                  description: Members who are/not the exact criteria listed.
                  example: is
                value:
                  type: string
                  enum:
                  - 18-24
                  - 25-34
                  - 35-44
                  - 45-54
                  - 55-64
                  - 65+
                  title: Segment Operator
                  description: The predicted age to segment.
                  example: female
            - type: object
              title: New Subscribers Prebuilt Segment
              description: Segment by when people subscribed.
              properties:
                condition_type:
                  type: string
                  x-value: NewSubscribers
                  enum:
                  - NewSubscribers
                field:
                  type: string
                  enum:
                  - timestamp_opt
                  title: Segment Field
                  description: Segment by when people subscribed.
                op:
                  type: string
                  enum:
                  - date_within
                  title: Segment Operator
                  description: "Whe the event took place, namely within a time frame."
                value:
                  type: string
                  title: Segment Data
                  description: "What type of data to segment on: a specific date,\
                    \ a specific campaign, or the last campaign sent."
            x-discriminator:
              type: string
              propertyName: condition_type
      description: "An object representing all segmentation options. This object should\
        \ contain a `saved_segment_id` to use an existing segment, or you can create\
        \ a new segment by including both `match` and `conditions` options."
      example: null
    Merge Field Options_1:
      title: Merge Field Options
      type: object
      properties:
        default_country:
          title: Default Country
          type: integer
          description: "In an address field, the default country code if none supplied."
        phone_format:
          title: Phone Type
          type: string
          description: "In a phone field, the phone number type: US or International."
        date_format:
          title: Date Type
          type: string
          description: "In a date or birthday field, the format of the date."
        choices:
          title: Choices
          type: array
          description: "In a radio or dropdown non-group field, the available options\
            \ for members to pick from."
          example:
          - First Choice
          - Second Choice
          - Third Choice
          items:
            type: string
      description: Extra options for some merge field types.
      example: null
    Batch update List members:
      title: Batch update List members
      type: object
      properties:
        new_members:
          title: New members
          type: array
          description: "An array of objects, each representing a new member that was\
            \ added to the list."
          items:
            $ref: '#/components/schemas/List Members_5'
        updated_members:
          title: Updated Members
          type: array
          description: "An array of objects, each representing an existing list member\
            \ whose subscription status was updated."
          items:
            $ref: '#/components/schemas/List Members_5'
        errors:
          title: Errors
          type: array
          description: "An array of objects, each representing an email address that\
            \ could not be added to the list or updated and an error message providing\
            \ more details."
          items:
            $ref: '#/components/schemas/Batch update List members_errors'
        total_created:
          title: Item Count
          type: integer
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
        total_updated:
          title: Item Count
          type: integer
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
        error_count:
          title: Item Count
          type: integer
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Batch update list members.
      example:
        _links:
        - null
        - null
        new_members:
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        updated_members:
        - null
        - null
        total_created: 42
        error_count: 42
        errors:
        - email_address: email_address
          error_code: ERROR_CONTACT_EXISTS
          error: error
        - email_address: email_address
          error_code: ERROR_CONTACT_EXISTS
          error: error
        total_updated: 42
    Open Activity_1:
      title: Open Activity
      type: object
      properties:
        campaign_id:
          title: Campaign ID
          type: string
          description: The unique id for the campaign.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
          readOnly: true
        list_is_active:
          title: List Status
          type: boolean
          description: "The status of the list used, namely if it's deleted or disabled."
          readOnly: true
        contact_status:
          title: Member Status
          type: string
          description: "The status of the member, namely if they are subscribed, unsubscribed,\
            \ deleted, non-subscribed, transactional, pending, or need reconfirmation."
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        email_address:
          title: Email Address
          type: string
          description: Email address for a subscriber.
          readOnly: true
        merge_fields:
          title: Merge Fields
          type: object
          additionalProperties:
            type: object
            description: This object's keys are merge tags (like FNAME). It's values
              are the values to be added to the merge field.
          description: "A dictionary of merge fields where the keys are the merge\
            \ tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure)\
            \ for more about the structure."
        vip:
          title: VIP
          type: boolean
          description: "[VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/)\
            \ for subscriber."
          readOnly: true
        opens_count:
          title: Opens count
          type: integer
          description: The total number of times the this campaign was opened by the
            list member.
          readOnly: true
        opens:
          title: Time series data of opens activity
          type: array
          description: "An array of timestamps for each time a list member opened\
            \ the campaign. If a list member opens an email multiple times, this will\
            \ return a separate timestamp for each open event."
          items:
            $ref: '#/components/schemas/Member Activity_1'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A list of a member's opens activity in a specific campaign.
      example:
        email_id: email_id
        email_address: email_address
        list_id: list_id
        opens_count: 0
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        merge_fields:
          key: {}
        opens:
        - timestamp: 2000-01-23T04:56:07.000+00:00
        - timestamp: 2000-01-23T04:56:07.000+00:00
        contact_status: contact_status
        list_is_active: true
        vip: true
        campaign_id: campaign_id
    Merge Field Options_2:
      title: Merge Field Options
      type: object
      properties:
        default_country:
          title: Default Country
          type: integer
          description: "In an address field, the default country code if none supplied."
        phone_format:
          title: Phone Type
          type: string
          description: "In a phone field, the phone number type: US or International."
        date_format:
          title: Date Type
          type: string
          description: "In a date or birthday field, the format of the date."
        choices:
          title: Choices
          type: array
          description: "In a radio or dropdown non-group field, the available options\
            \ for contacts to pick from."
          example:
          - First Choice
          - Second Choice
          - Third Choice
          items:
            type: string
        size:
          title: Text Field Size
          type: integer
          description: "In a text field, the default length of the text field."
          readOnly: true
      description: Extra options for some merge field types.
      example:
        size: 5
        date_format: date_format
        choices:
        - First Choice
        - Second Choice
        - Third Choice
        default_country: 1
        phone_format: phone_format
    inline_response_200_11_budget:
      type: object
      properties:
        duration:
          type: integer
          description: Duration of the ad in seconds
          example: 86400
        total_amount:
          type: number
          description: Total budget of the ad
          example: 500.0
        currency_code:
          type: string
          description: Currency code
          example: USD
      example:
        duration: 86400
        total_amount: 500.0
        currency_code: USD
    Batch addremove List members tofrom static segment:
      title: Batch add/remove List members to/from static segment
      type: object
      properties:
        members_added:
          title: Members Added
          type: array
          description: "An array of objects, each representing a new member that was\
            \ added to the static segment."
          items:
            $ref: '#/components/schemas/List Members_5'
        members_removed:
          title: Members Removed
          type: array
          description: "An array of objects, each representing an existing list member\
            \ that got deleted from the static segment."
          items:
            $ref: '#/components/schemas/List Members_5'
        errors:
          title: Errors
          type: array
          description: "An array of objects, each representing an array of email addresses\
            \ that could not be added to the segment or removed and an error message\
            \ providing more details."
          items:
            $ref: '#/components/schemas/Batch addremove List members tofrom static
              segment_errors'
        total_added:
          title: Item Count
          type: integer
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
        total_removed:
          title: Item Count
          type: integer
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
        error_count:
          title: Item Count
          type: integer
          description: "The total number of items matching the query, irrespective\
            \ of pagination."
          example: 42
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Batch add/remove List members to/from static segment
      example:
        members_removed:
        - null
        - null
        total_added: 42
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        members_added:
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        - email_type: email_type
          list_id: list_id
          timestamp_opt: 2000-01-23T04:56:07.000+00:00
          last_note:
            note_id: 9
            note: note
            created_at: 2000-01-23T04:56:07.000+00:00
            created_by: created_by
          _links:
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          - schema: schema
            targetSchema: targetSchema
            method: GET
            rel: rel
            href: href
          merge_fields:
            key: {}
          timestamp_signup: 2000-01-23T04:56:07.000+00:00
          ip_signup: ip_signup
          member_rating: 1
          language: language
          tags:
          - name: name
            id: 2
          - name: name
            id: 2
          unique_email_id: unique_email_id
          email_address: email_address
          email_client: email_client
          stats:
            avg_click_rate: 6.027456183070403
            avg_open_rate: 0.8008281904610115
          tags_count: 3
          ip_opt: ip_opt
          location:
            country_code: country_code
            dstoff: 7
            timezone: timezone
            latitude: 5.962133916683182
            gmtoff: 2
            longitude: 5.637376656633329
          id: id
          interests:
            key: true
          vip: true
          status: subscribed
          last_changed: 2000-01-23T04:56:07.000+00:00
        total_removed: 42
        error_count: 42
        errors:
        - email_addresses:
          - email_addresses
          - email_addresses
          error: error
        - email_addresses:
          - email_addresses
          - email_addresses
          error: error
    Ecommerce Promo Rule:
      title: E-commerce Promo Rule
      required:
      - amount
      - description
      - id
      - target
      - type
      type: object
      properties:
        id:
          title: Promo Rule Foreign ID
          type: string
          description: "A unique identifier for the promo rule. If Ecommerce platform\
            \ does not support promo rule, use promo code id as promo rule id. Restricted\
            \ to UTF-8 characters with max length 50."
        title:
          title: Title
          type: string
          description: The title that will show up in promotion campaign. Restricted
            to UTF-8 characters with max length of 100 bytes.
          example: 50% off Total Order
        description:
          title: Description
          type: string
          description: The description of a promotion restricted to UTF-8 characters
            with max length 255.
          example: Save BIG during our summer sale!
        starts_at:
          title: Promo Start Time
          type: string
          description: The date and time when the promotion is in effect in ISO 8601
            format.
          format: date-time
        ends_at:
          title: End Time
          type: string
          description: The date and time when the promotion ends. Must be after starts_at
            and in ISO 8601 format.
          format: Promo date-time
        amount:
          title: Amount
          type: number
          description: "The amount of the promo code discount. If 'type' is 'fixed',\
            \ the amount is treated as a monetary value. If 'type' is 'percentage',\
            \ amount must be a decimal value between 0.0 and 1.0, inclusive."
          format: float
          example: 0.5
        type:
          title: Type
          type: string
          description: Type of discount. For free shipping set type to fixed.
          enum:
          - fixed
          - percentage
        target:
          title: Target
          type: string
          description: The target that the discount applies to.
          enum:
          - per_item
          - total
          - shipping
        enabled:
          title: Enabled
          type: boolean
          description: Whether the promo rule is currently enabled.
          example: true
        created_at_foreign:
          title: Foreign Create Time
          type: string
          description: The date and time the promotion was created in ISO 8601 format.
          format: date-time
        updated_at_foreign:
          title: Foreign Update Time
          type: string
          description: The date and time the promotion was updated in ISO 8601 format.
          format: date-time
      description: Information about an Ecommerce Store's specific Promo Rule.
    Salesforce CRM Tracking:
      title: Salesforce CRM Tracking
      type: object
      properties:
        campaign:
          title: Salesforce Campaign
          type: boolean
          description: Create a campaign in a connected Salesforce account.
        notes:
          title: Salesforce Note
          type: boolean
          description: Update contact notes for a campaign based on subscriber email
            addresses.
      description: Deprecated
      example:
        notes: true
        campaign: true
    inline_response_200_1_exports:
      type: object
      properties:
        export_id:
          title: Export ID
          type: integer
          description: The ID for the export.
        started:
          title: Start Time
          type: string
          description: Start time for the export.
          format: date-time
        finished:
          title: Finish Time
          type: string
          description: "If finished, the finish time for the export."
          format: date-time
        size_in_bytes:
          title: Export Size
          type: integer
          description: The size of the uncompressed export in bytes.
        download_url:
          title: Download URL
          type: string
          description: "If the export is finished, the download URL for an export.\
            \ URLs are only valid for 90 days after the export completes."
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: An account export.
      example:
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        size_in_bytes: 6
        download_url: download_url
        started: 2000-01-23T04:56:07.000+00:00
        finished: 2000-01-23T04:56:07.000+00:00
        export_id: 0
    Campaign Folder:
      title: Campaign Folder
      required:
      - name
      type: object
      properties:
        name:
          title: Folder Name
          type: string
          description: Name to associate with the folder.
      description: A folder used to organize campaigns.
    Contact:
      title: Contact
      type: object
      properties:
        email_id:
          title: Email ID
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        contact_id:
          title: Contact ID
          type: string
          description: The ID of this contact.
          readOnly: true
        status:
          title: Contact Status
          type: string
          description: The contact's current status.
          readOnly: true
          enum:
          - Subscribed
          - Unsubscribed
          - Non-Subscribed
          - Cleaned
          - Archived
        email:
          title: Contact Email
          type: string
          description: The contact's email address.
          readOnly: true
        full_name:
          title: Full Name
          type: string
          description: The contact's full name.
          readOnly: true
        consents_to_one_to_one_messaging:
          title: Messaging Consent
          type: boolean
          description: Indicates whether a contact consents to 1:1 messaging.
          readOnly: true
        avatar_url:
          title: Avatar URL
          type: string
          description: URL for the contact's avatar or profile image.
          readOnly: true
      description: Information about the contact.
      readOnly: true
      example:
        email_id: email_id
        full_name: full_name
        avatar_url: avatar_url
        contact_id: contact_id
        email: email
        status: Subscribed
        consents_to_one_to_one_messaging: true
    Landing Page_1:
      title: Landing Page
      type: object
      properties:
        id:
          title: Landing Page ID
          type: string
          description: A string that uniquely identifies this landing page.
          readOnly: true
          example: 030092c2e1f0
        name:
          title: Landing Page Name
          type: string
          description: The name of this landing page.
        title:
          title: Landing Page title
          type: string
          description: The title of this landing page seen in the browser's title
            bar.
        description:
          title: Landing Page description
          type: string
          description: The description of this landing page.
        template_id:
          title: Landing Page template_id
          type: integer
          description: The template_id of this landing page.
          readOnly: true
        status:
          title: Landing Page status
          type: string
          description: The status of this landing page.
          readOnly: true
          enum:
          - published
          - unpublished
          - draft
        list_id:
          title: Landing Page list id
          type: string
          description: The list's ID associated with this landing page.
          example: fde02ad86b
        store_id:
          title: Store ID
          type: string
          description: The ID of the store associated with this landing page.
        web_id:
          title: Landing Page Web ID
          type: integer
          description: The ID used in the Mailchimp web application.
        created_by_source:
          title: Created By Source
          type: string
          description: Created by mobile or web
          readOnly: true
        url:
          title: Published url
          type: string
          description: The url of the published landing page.
          readOnly: true
        created_at:
          title: Created At
          type: string
          description: The time this landing page was created.
          format: date-time
          readOnly: true
        published_at:
          title: Published at
          type: string
          description: The time this landing page was published.
          format: date-time
          readOnly: true
        unpublished_at:
          title: Unpublished at
          type: string
          description: The time this landing page was unpublished.
          format: date-time
          readOnly: true
        updated_at:
          title: Updated_at
          type: string
          description: The time this landing page was updated at.
          format: date-time
          readOnly: true
        tracking:
          $ref: '#/components/schemas/Tracking Settings'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual landing page's settings and content.
      example:
        store_id: store_id
        created_by_source: created_by_source
        list_id: fde02ad86b
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        web_id: 6
        title: title
        tracking:
          track_with_mailchimp: true
          enable_restricted_data_processing: true
        url: url
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        template_id: 0
        id: 030092c2e1f0
        published_at: 2000-01-23T04:56:07.000+00:00
        status: published
        unpublished_at: 2000-01-23T04:56:07.000+00:00
    Response:
      title: Response
      type: object
      properties:
        question_id:
          title: Question ID
          type: string
          description: The unique ID for this question.
        question_type:
          title: Question Type
          type: string
          description: The type of question this is.
          enum:
          - pickOne
          - pickMany
          - range
          - text
          - email
        query:
          title: Question Query
          type: string
          description: The survey question.
        answer:
          title: Answer
          type: string
          description: The answer to this survey question.
      description: A single question and the response to that question.
      example:
        answer: answer
        question_type: pickOne
        query: query
        question_id: question_id
    Landing Page_2:
      title: Landing Page
      type: object
      properties:
        name:
          title: Landing Page Name
          type: string
          description: The name of this landing page.
        title:
          title: Landing Page title
          type: string
          description: The title of this landing page seen in the browser's title
            bar.
        description:
          title: Landing Page description
          type: string
          description: The description of this landing page.
        store_id:
          title: Store ID
          type: string
          description: The ID of the store associated with this landing page.
        list_id:
          title: Landing Page list id
          type: string
          description: The list's ID associated with this landing page.
        tracking:
          $ref: '#/components/schemas/Tracking Settings'
      description: A summary of an individual page's properties.
    Automation Tracking Options:
      title: Automation Tracking Options
      type: object
      properties:
        opens:
          title: Opens
          type: boolean
          description: "Whether to [track opens](https://mailchimp.com/help/about-open-tracking/).\
            \ Defaults to `true`."
        html_clicks:
          title: HTML Click Tracking
          type: boolean
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the HTML version of the Automation. Defaults to `true`."
        text_clicks:
          title: Plain-Text Click Tracking
          type: boolean
          description: "Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/)\
            \ in the plain-text version of the Automation. Defaults to `true`."
        goal_tracking:
          title: Mailchimp Goal Tracking
          type: boolean
          description: Deprecated
        ecomm360:
          title: E-commerce Tracking
          type: boolean
          description: Whether to enable e-commerce tracking.
        google_analytics:
          title: Google Analytics Tracking
          type: string
          description: "The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/)\
            \ tracking (max of 50 bytes)."
        clicktale:
          title: ClickTale Analytics Tracking
          type: string
          description: "The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/)\
            \ tracking (max of 50 bytes)."
        salesforce:
          $ref: '#/components/schemas/Salesforce CRM Tracking_1'
        capsule:
          $ref: '#/components/schemas/Capsule CRM Tracking_1'
      description: The tracking options for the Automation.
      example:
        salesforce:
          notes: true
          campaign: true
        goal_tracking: true
        capsule:
          notes: true
        clicktale: clicktale
        text_clicks: true
        ecomm360: true
        opens: true
        google_analytics: google_analytics
        html_clicks: true
    Landing Page_3:
      title: Landing Page
      type: object
      properties:
        id:
          title: Landing Page ID
          type: string
          description: A string that uniquely identifies this landing page.
          readOnly: true
          example: 030092c2e1f0
        name:
          title: Landing Page Name
          type: string
          description: The name of this landing page.
        title:
          title: Landing Page title
          type: string
          description: The title of this landing page seen in the browser's title
            bar.
        description:
          title: Landing Page description
          type: string
          description: The description of this landing page.
        template_id:
          title: Landing Page template_id
          type: integer
          description: The template_id of this landing page.
          readOnly: true
        status:
          title: Landing Page status
          type: string
          description: The status of this landing page.
          readOnly: true
          enum:
          - published
          - unpublished
          - draft
        list_id:
          title: Landing Page list id
          type: string
          description: The list's ID associated with this landing page.
          example: fde02ad86b
        store_id:
          title: Store ID
          type: string
          description: The ID of the store associated with this landing page.
        web_id:
          title: Landing Page Web ID
          type: integer
          description: The ID used in the Mailchimp web application.
        created_by_source:
          title: Created By Source
          type: string
          description: Created by mobile or web
          readOnly: true
        url:
          title: Published url
          type: string
          description: The url of the published landing page.
          readOnly: true
        created_at:
          title: Created At
          type: string
          description: The time this landing page was created.
          format: date-time
          readOnly: true
        published_at:
          title: Published at
          type: string
          description: The time this landing page was published.
          format: date-time
          readOnly: true
        unpublished_at:
          title: Unpublished at
          type: string
          description: The time this landing page was unpublished.
          format: date-time
          readOnly: true
        updated_at:
          title: Updated_at
          type: string
          description: The time this landing page was updated at.
          format: date-time
          readOnly: true
        tracking:
          $ref: '#/components/schemas/Tracking Settings'
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A summary of an individual landing page's settings and content.
      example:
        store_id: store_id
        created_by_source: created_by_source
        list_id: fde02ad86b
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        web_id: 6
        title: title
        tracking:
          track_with_mailchimp: true
          enable_restricted_data_processing: true
        url: url
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        template_id: 0
        id: 030092c2e1f0
        published_at: 2000-01-23T04:56:07.000+00:00
        status: published
        unpublished_at: 2000-01-23T04:56:07.000+00:00
    Interest_1:
      title: Interest
      type: object
      properties:
        category_id:
          title: Interest Category ID
          type: string
          description: The id for the interest category.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The ID for the list that this interest belongs to.
          readOnly: true
        id:
          title: Interest ID
          type: string
          description: The ID for the interest.
          readOnly: true
        name:
          title: Interest Name
          type: string
          description: The name of the interest. This can be shown publicly on a subscription
            form.
        subscriber_count:
          title: Subscriber Count
          type: string
          description: The number of subscribers associated with this interest.
          readOnly: true
        display_order:
          title: Display Order
          type: integer
          description: The display order for interests.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Assign subscribers to interests to group them together. Interests
        are referred to as 'group names' in the Mailchimp application.
      example:
        category_id: category_id
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        subscriber_count: subscriber_count
        name: name
        display_order: 0
        id: id
    Interest_2:
      title: Interest
      required:
      - name
      type: object
      properties:
        name:
          title: Interest Name
          type: string
          description: The name of the interest. This can be shown publicly on a subscription
            form.
        display_order:
          title: Display Order
          type: integer
          description: The display order for interests.
      description: Assign subscribers to interests to group them together. Interests
        are referred to as 'group names' in the Mailchimp application.
    Interest_3:
      title: Interest
      type: object
      properties:
        category_id:
          title: Interest Category ID
          type: string
          description: The id for the interest category.
          readOnly: true
        list_id:
          title: List ID
          type: string
          description: The ID for the list that this interest belongs to.
          readOnly: true
        id:
          title: Interest ID
          type: string
          description: The ID for the interest.
          readOnly: true
        name:
          title: Interest Name
          type: string
          description: The name of the interest. This can be shown publicly on a subscription
            form.
        subscriber_count:
          title: Subscriber Count
          type: string
          description: The number of subscribers associated with this interest.
          readOnly: true
        display_order:
          title: Display Order
          type: integer
          description: The display order for interests.
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: Assign subscribers to interests to group them together. Interests
        are referred to as 'group names' in the Mailchimp application.
      example:
        category_id: category_id
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        subscriber_count: subscriber_count
        name: name
        display_order: 0
        id: id
    Member Notes_1:
      title: Member Notes
      type: object
      properties:
        id:
          title: Note ID
          type: integer
          description: The note id.
          readOnly: true
        created_at:
          title: Created Time
          type: string
          description: The date and time the note was created in ISO 8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Author
          type: string
          description: The author of the note.
          readOnly: true
        updated_at:
          title: Updated Time
          type: string
          description: The date and time the note was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
        note:
          title: Note
          type: string
          description: The content of the note.
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        contact_id:
          title: Contact ID
          type: string
          description: "As Mailchimp evolves beyond email, you may eventually have\
            \ contacts without email addresses. While the `email_id` is the MD5 hash\
            \ of their email address, this `contact_id` is agnostic of contact’s inclusion\
            \ of an email address."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A specific note for a specific member.
      example:
        email_id: email_id
        note: note
        updated_at: 2000-01-23T04:56:07.000+00:00
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        contact_id: contact_id
        created_by: created_by
    inline_response_200_11_audience_email_source:
      type: object
      properties:
        name:
          type: string
          description: Email source name
        type:
          type: string
          description: Type of the email source
        is_segment:
          type: boolean
          description: Is the source reference a segment
        segment_type:
          type: string
          description: Segment type if this source is tied to a segment
        list_name:
          type: string
          description: Associated list name to the source
      example:
        name: name
        segment_type: segment_type
        list_name: list_name
        type: type
        is_segment: true
    Survey Report:
      title: Survey Report
      type: object
      properties:
        id:
          title: Survey ID
          type: string
          description: A string that uniquely identifies this survey.
          readOnly: true
          example: 040d2c2e1f0
        web_id:
          title: Survey Web ID
          type: integer
          description: "The ID used in the Mailchimp web application. View this survey\
            \ report in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/surveys/results?survey_id={web_id}`."
          readOnly: true
          example: 165
        list_id:
          title: List ID
          type: string
          description: The ID of the list connected to this survey.
          readOnly: true
        list_name:
          title: List Name
          type: string
          description: The name of the list connected to this survey.
          readOnly: true
        title:
          title: Title
          type: string
          description: The title of the survey.
          readOnly: true
          example: New product ideas
        url:
          title: URL
          type: string
          description: The URL for the survey.
          readOnly: true
        status:
          title: Status
          type: string
          description: The survey's status.
          readOnly: true
          example: published
          enum:
          - published
          - unpublished
        published_at:
          title: Published At
          type: string
          description: The date and time the survey was published in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2017-08-04T11:09:01Z
        created_at:
          title: Created At
          type: string
          description: The date and time the survey was created in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2017-08-04T11:09:01Z
        updated_at:
          title: Updated At
          type: string
          description: The date and time the survey was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
          example: 2017-08-04T11:09:01Z
        total_responses:
          title: Total Responses
          type: integer
          description: The total number of responses to this survey.
          readOnly: true
          example: 810
      description: The report for a survey.
      example:
        list_id: list_id
        updated_at: 2017-08-04T11:09:01Z
        created_at: 2017-08-04T11:09:01Z
        total_responses: 810
        id: 040d2c2e1f0
        web_id: 165
        list_name: list_name
        title: New product ideas
        published_at: 2017-08-04T11:09:01Z
        url: url
        status: published
    Member Notes_3:
      title: Member Notes
      type: object
      properties:
        id:
          title: Note ID
          type: integer
          description: The note id.
          readOnly: true
        created_at:
          title: Created Time
          type: string
          description: The date and time the note was created in ISO 8601 format.
          format: date-time
          readOnly: true
        created_by:
          title: Author
          type: string
          description: The author of the note.
          readOnly: true
        updated_at:
          title: Updated Time
          type: string
          description: The date and time the note was last updated in ISO 8601 format.
          format: date-time
          readOnly: true
        note:
          title: Note
          type: string
          description: The content of the note.
        list_id:
          title: List ID
          type: string
          description: The unique id for the list.
          readOnly: true
        email_id:
          title: Email Hash
          type: string
          description: The MD5 hash of the lowercase version of the list member's
            email address.
          readOnly: true
        contact_id:
          title: Contact ID
          type: string
          description: "As Mailchimp evolves beyond email, you may eventually have\
            \ contacts without email addresses. While the `email_id` is the MD5 hash\
            \ of their email address, this `contact_id` is agnostic of contact’s inclusion\
            \ of an email address."
          readOnly: true
        _links:
          title: Links
          type: array
          description: A list of link types and descriptions for the API schema documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource Link'
      description: A specific note for a specific member.
      example:
        email_id: email_id
        note: note
        updated_at: 2000-01-23T04:56:07.000+00:00
        list_id: list_id
        _links:
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        - schema: schema
          targetSchema: targetSchema
          method: GET
          rel: rel
          href: href
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        contact_id: contact_id
        created_by: created_by
    Member Notes_2:
      title: Member Notes
      type: object
      properties:
        note:
          title: Note
          type: string
          description: "The content of the note. Note length is limited to 1,000 characters."
      description: A specific note for a specific member.
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
x-doc-structure:
  resources:
    root:
      title: API Root
      description: The API root resource links to all other resources available in
        the API. Calling the root directory also returns details about the Mailchimp
        user account.
      paths:
      - /
      subResources: []
    chimp-chatter:
      title: Chimp Chatter Activity
      description: Get the latest Chimp Chatter activity from your account.
      paths:
      - /activity-feed/chimp-chatter
    authorized-apps:
      title: Authorized Apps
      description: "Manage registered, connected apps for your Mailchimp account with\
        \ the Authorized Apps endpoints."
      paths:
      - /authorized-apps
      - "/authorized-apps/{app_id}"
    automation:
      title: Automations
      description: "Mailchimp's classic automations feature lets you build a series\
        \ of emails that send to subscribers when triggered by a specific date, activity,\
        \ or event. Use the API to manage Automation workflows, emails, and queues.\
        \ Does not include Customer Journeys."
      paths:
      - /automations
      - "/automations/{workflow_id}"
      - "/automations/{workflow_id}/actions/start-all-emails"
      - "/automations/{workflow_id}/actions/pause-all-emails"
      - "/automations/{workflow_id}/actions/archive"
      subResources:
      - automation-email
      - automation-removed-subscribers
    automation-email:
      title: Emails
      description: Manage individual emails in a classic automation workflow.
      paths:
      - "/automations/{workflow_id}/emails"
      - "/automations/{workflow_id}/emails/{workflow_email_id}"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/actions/pause"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/actions/start"
      subResources:
      - automation-email-queue
    automation-email-queue:
      title: Queue
      description: Manage list member queues for classic automation emails.
      paths:
      - "/automations/{workflow_id}/emails/{workflow_email_id}/queue"
      - "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}"
      subResources: []
    automation-removed-subscribers:
      title: Removed Subscribers
      description: Remove subscribers from a classic automation workflow.
      paths:
      - "/automations/{workflow_id}/removed-subscribers"
      - "/automations/{workflow_id}/removed-subscribers/{subscriber_hash}"
      subResources: []
    batch-operations:
      title: Batch Operations
      description: Use batch operations to complete multiple operations with a single
        call.
      paths:
      - /batches
      - "/batches/{batch_id}"
    batch-webhooks:
      title: Batch Webhooks
      description: 'Manage webhooks for batch operations. '
      paths:
      - /batch-webhooks
      - "/batch-webhooks/{batch_webhook_id}"
    account-exports:
      title: Account Exports
      description: Generate a new export or download a finished export.
      paths:
      - /account-exports
      - "/account-exports/{export_id}"
    campaigns:
      title: Campaigns
      description: Campaigns are how you send emails to your Mailchimp list. Use the
        Campaigns API calls to manage campaigns in your Mailchimp account.
      paths:
      - /campaigns
      - "/campaigns/{campaign_id}"
      - "/campaigns/{campaign_id}/actions/cancel-send"
      - "/campaigns/{campaign_id}/actions/send"
      - "/campaigns/{campaign_id}/actions/schedule"
      - "/campaigns/{campaign_id}/actions/unschedule"
      - "/campaigns/{campaign_id}/actions/pause"
      - "/campaigns/{campaign_id}/actions/resume"
      - "/campaigns/{campaign_id}/actions/replicate"
      - "/campaigns/{campaign_id}/actions/test"
      - "/campaigns/{campaign_id}/actions/create-resend"
      subResources:
      - campaign-feedback
      - campaign-checklist
      - campaign-content
    campaign-feedback:
      title: Feedback
      description: "Post comments, reply to team feedback, and send test emails while\
        \ you're working together on a Mailchimp campaign."
      paths:
      - "/campaigns/{campaign_id}/feedback"
      - "/campaigns/{campaign_id}/feedback/{feedback_id}"
    campaign-checklist:
      title: Send Checklist
      description: "Review the send checklist for your campaign, and resolve any issues\
        \ before sending."
      paths:
      - "/campaigns/{campaign_id}/send-checklist"
    campaign-content:
      title: Content
      description: "Manage the HTML, plain-text, and template content for your Mailchimp\
        \ campaigns."
      paths:
      - "/campaigns/{campaign_id}/content"
    connected-sites:
      title: Connected Sites
      description: Manage sites you've connected to your Mailchimp account.
      paths:
      - /connected-sites
      - "/connected-sites/{connected_site_id}"
      - "/connected-sites/{connected_site_id}/actions/verify-script-installation"
    conversations:
      title: Conversations
      description: Conversation tracking lets you view subscribers' replies to your
        campaigns in your Mailchimp account.
      paths:
      - /conversations
      - "/conversations/{conversation_id}"
      subResources:
      - conversation-messages
    conversation-messages:
      title: Messages
      description: Manage messages in a specific campaign conversation.
      paths:
      - "/conversations/{conversation_id}/messages"
      - "/conversations/{conversation_id}/messages/{message_id}"
    customer-journeys-journeys-steps-actions:
      title: Customer Journeys
      description: Manage Customer Journey automated workflows
      paths:
      - "/customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger"
      subResources: []
    file-manager:
      title: File Manager
      description: "Manage files for your Mailchimp account. The File Manager is a\
        \ place to store images, documents, and other files you include or link to\
        \ in your campaigns, templates, or signup forms."
      paths: []
      subResources:
      - file-manager-folders
      - file-manager-files
    file-manager-folders:
      title: File Manager Folders
      description: Manage specific folders in the File Manager for your Mailchimp
        account.
      paths:
      - /file-manager/folders
      - "/file-manager/folders/{folder_id}"
    file-manager-files:
      title: File Manager Files
      description: Manage specific files in the File Manager for your Mailchimp account.
      paths:
      - /file-manager/files
      - "/file-manager/files/{file_id}"
    landing-pages:
      title: Landing Pages
      description: "Manage your Landing Pages, including publishing and unpublishing."
      paths:
      - /landing-pages
      - "/landing-pages/{page_id}"
      - "/landing-pages/{page_id}/actions/publish"
      - "/landing-pages/{page_id}/actions/unpublish"
      subResources:
      - landing-pages_content
    landing-pages_content:
      title: Content
      description: The HTML content for your Mailchimp landing pages.
      paths:
      - "/landing-pages/{page_id}/content"
    lists:
      title: Lists/Audiences
      description: "Your Mailchimp list, also known as your audience, is where you\
        \ store and manage all of your contacts."
      paths:
      - /lists
      - "/lists/{list_id}"
      subResources:
      - interest-categories
      - list-segments
      - abuse-reports
      - list-activity
      - list-clients
      - list-growth-history
      - list-imports
      - list-members
      - list-merges
      - list-webhooks
      - list-signup-forms
      - list-locations
      - lists-tags-search
      - prebuilt-segments
      - list-preview-segment
      - list-surveys
    list-members:
      title: Members
      description: "Manage members of a specific Mailchimp list, including currently\
        \ subscribed, unsubscribed, and bounced members."
      paths:
      - "/lists/{list_id}/members"
      - "/lists/{list_id}/members/{subscriber_hash}"
      - "/lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent"
      subResources:
      - list-member-activity
      - list-member-activity-feed
      - list-member-goal
      - list-member-notes
      - list-member-tags
      - list-member-events
    list-merges:
      title: Merge Fields
      description: "Manage merge fields for an audience. See [Merge Field documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/)\
        \ for more."
      paths:
      - "/lists/{list_id}/merge-fields"
      - "/lists/{list_id}/merge-fields/{merge_id}"
      subResources: []
    abuse-reports:
      title: Abuse Reports
      description: Manage abuse complaints for a specific list. An abuse complaint
        occurs when your recipient reports an email as spam in their mail program.
      paths:
      - "/lists/{list_id}/abuse-reports"
      - "/lists/{list_id}/abuse-reports/{report_id}"
    list-activity:
      title: Activity
      description: "Get recent daily, aggregated activity stats for your list. For\
        \ example, view unsubscribes, signups, total emails sent, opens, clicks, and\
        \ more, for up to 180 days."
      paths:
      - "/lists/{list_id}/activity"
    list-clients:
      title: Clients
      description: Get information about the most popular email clients for subscribers
        in a specific Mailchimp list.
      paths:
      - "/lists/{list_id}/clients"
    list-growth-history:
      title: Growth History
      description: View a summary of the month-by-month growth activity for a specific
        list.
      paths:
      - "/lists/{list_id}/growth-history"
      - "/lists/{list_id}/growth-history/{month}"
    list-webhooks:
      title: Webhooks
      description: Manage webhooks for a specific Mailchimp list.
      paths:
      - "/lists/{list_id}/webhooks"
      - "/lists/{list_id}/webhooks/{webhook_id}"
    list-surveys:
      title: Surveys
      description: Get survey data for this audience.
      paths:
      - "/lists/{list_id}/surveys"
      - "/lists/{list_id}/surveys/{survey_id}"
      - "/lists/{list_id}/surveys/{survey_id}/actions/publish"
      - "/lists/{list_id}/surveys/{survey_id}/actions/unpublish"
    interest-categories:
      title: Interest Categories
      description: "Manage interest categories for a specific list. Interest categories\
        \ organize interests, which are used to group subscribers based on their preferences.\
        \ These correspond to 'group titles' in the Mailchimp application."
      paths:
      - "/lists/{list_id}/interest-categories"
      - "/lists/{list_id}/interest-categories/{interest_category_id}"
      subResources:
      - interests
    interests:
      title: Interests
      description: Manage interests for a specific Mailchimp list. Assign subscribers
        to interests to group them together. Interests are referred to as 'group names'
        in the Mailchimp application.
      paths:
      - "/lists/{list_id}/interest-categories/{interest_category_id}/interests"
      - "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}"
    lists-tags-search:
      title: Tag Search
      description: Search for tags on a list by name.
      paths:
      - "/lists/{list_id}/tag-search"
    list-segments:
      title: Segments
      description: Manage segments and tags for a specific Mailchimp list. A segment
        is a section of your list that includes only those subscribers who share specific
        common field information. Tags are labels you create to help organize your
        contacts.
      paths:
      - "/lists/{list_id}/segments"
      - "/lists/{list_id}/segments/{segment_id}"
      subResources:
      - list-segment-members
    list-segment-members:
      title: Segment Members
      description: Manage list members in a saved segment.
      paths:
      - "/lists/{list_id}/segments/{segment_id}/members"
      - "/lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}"
    list-member-activity:
      title: Member Activity
      description: Get details about a subscriber's recent activity. Use the new activity-feed
        endpoint to access more events for a given contact.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/activity"
    list-member-activity-feed:
      title: Member Activity Feed
      description: Get details about a subscriber's recent activity.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/activity-feed"
    list-member-goal:
      title: Member Goals
      description: Get information about recent goal events for a specific list member.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/goals"
    list-member-notes:
      title: Member Notes
      description: Retrieve recent notes for a specific list member.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/notes"
      - "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}"
    list-member-tags:
      title: Member Tags
      description: Manage all the tags that have been assigned to a contact.
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/tags"
    list-member-events:
      title: Events
      description: 'Use the Events endpoint to collect website or in-app actions and
        trigger targeted automations. '
      paths:
      - "/lists/{list_id}/members/{subscriber_hash}/events"
    list-signup-forms:
      title: Signup Forms
      description: Manage list signup forms.
      paths:
      - "/lists/{list_id}/signup-forms"
    list-locations:
      title: Locations
      description: Get the locations (countries) that the list's subscribers have
        been tagged to based on geocoding their IP address.
      paths:
      - "/lists/{list_id}/locations"
    reports:
      title: Reports
      description: "Manage campaign reports for your Mailchimp account. All Reports\
        \ endpoints are read-only. Mailchimp's campaign and automation reports analyze\
        \ clicks, opens, subscribers' social activity, e-commerce data, and more.\
        \ Note: Campaign IDs for A/B Testing Campaigns are available through the Campaign\
        \ API Endpoint's Read method."
      paths:
      - /reports
      - "/reports/{campaign_id}"
      subResources:
      - campaign-abuse
      - campaign-advice
      - click-reports
      - domain-performance-reports
      - eepurl-reports
      - email-activity-reports
      - location-reports
      - sent-to-reports
      - sub-reports
      - unsub-reports
      - open-reports
      - campaign-ecommerce-product-activity
    campaign-abuse:
      title: Campaign Abuse
      description: Get information about campaign abuse complaints.
      paths:
      - "/reports/{campaign_id}/abuse-reports"
      - "/reports/{campaign_id}/abuse-reports/{report_id}"
    campaign-advice:
      title: Campaign Advice
      description: Get recent feedback based on a campaign's statistics.
      paths:
      - "/reports/{campaign_id}/advice"
    open-reports:
      title: Campaign Open Reports
      description: 'Get a detailed report about any emails in a specific campaign
        that were opened by the recipient. '
      paths:
      - "/reports/{campaign_id}/open-details"
      - "/reports/{campaign_id}/open-details/{subscriber_hash}"
    click-reports:
      title: Click Reports
      description: Get detailed information about links clicked in campaigns.
      paths:
      - "/reports/{campaign_id}/click-details"
      - "/reports/{campaign_id}/click-details/{link_id}"
      subResources:
      - link-clickers
    campaign-ecommerce-product-activity:
      title: Ecommerce Product Activity
      description: Ecommerce product activity report for a campaign.
      paths:
      - "/reports/{campaign_id}/ecommerce-product-activity"
    link-clickers:
      title: Click Reports Members
      description: Get information about specific subscribers who clicked on links
        in a campaign.
      paths:
      - "/reports/{campaign_id}/click-details/{link_id}/members"
      - "/reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}"
    domain-performance-reports:
      title: Domain Performance
      description: Get statistics for the top-performing domains from a campaign.
      paths:
      - "/reports/{campaign_id}/domain-performance"
    eepurl-reports:
      title: EepURL Reports
      description: "Get a summary of social activity for the campaign, tracked by\
        \ EepURL."
      paths:
      - "/reports/{campaign_id}/eepurl"
    email-activity-reports:
      title: Email Activity
      description: Get list member activity for a specific campaign.
      paths:
      - "/reports/{campaign_id}/email-activity"
      - "/reports/{campaign_id}/email-activity/{subscriber_hash}"
    location-reports:
      title: Location
      description: Get top open locations for a specific campaign.
      paths:
      - "/reports/{campaign_id}/locations"
    sent-to-reports:
      title: Sent To
      description: Get details about campaign recipients.
      paths:
      - "/reports/{campaign_id}/sent-to"
      - "/reports/{campaign_id}/sent-to/{subscriber_hash}"
    sub-reports:
      title: Sub-Reports
      description: "A list of reports for child campaigns of a specific parent campaign.\
        \ For example, use this endpoint to view Multivariate, RSS, and A/B Testing\
        \ Campaign reports."
      paths:
      - "/reports/{campaign_id}/sub-reports"
    unsub-reports:
      title: Unsubscribes
      description: Get information about list members who unsubscribed from a specific
        campaign.
      paths:
      - "/reports/{campaign_id}/unsubscribed"
      - "/reports/{campaign_id}/unsubscribed/{subscriber_hash}"
    templates:
      title: Templates
      description: 'Manage your Mailchimp templates. A template is an HTML file used
        to create the layout and basic design for a campaign. '
      paths:
      - /templates
      - "/templates/{template_id}"
      subResources:
      - template-default-content
    template-default-content:
      title: Default Content
      description: Manage the default content for a Mailchimp template.
      paths:
      - "/templates/{template_id}/default-content"
    template-folders:
      title: Template Folders
      description: Organize your templates using folders.
      paths:
      - /template-folders
      - "/template-folders/{folder_id}"
    campaign-folders:
      title: Campaign Folders
      description: Organize your campaigns using folders.
      paths:
      - /campaign-folders
      - "/campaign-folders/{folder_id}"
    ecommerce-stores:
      title: E-commerce Stores
      description: Connect your E-commerce Store to Mailchimp to take advantage of
        powerful reporting and personalization features and to learn more about your
        customers.
      paths:
      - /ecommerce/stores
      - "/ecommerce/stores/{store_id}"
      subResources:
      - ecommerce-customers
      - ecommerce-orders
      - ecommerce-products
      - ecommerce-carts
      - ecommerce-promo-rules
    ecommerce-customers:
      title: Customers
      description: "Add Customers to your Store to track their orders and to view\
        \ E-Commerce Data for your Mailchimp lists and campaigns. Each Customer is\
        \ connected to a Mailchimp list member, so adding a Customer can also add\
        \ or update a list member."
      paths:
      - "/ecommerce/stores/{store_id}/customers"
      - "/ecommerce/stores/{store_id}/customers/{customer_id}"
    ecommerce-promo-rules:
      title: Promo Rules
      description: "Promo Rules help you create promo codes for your campaigns. Promo\
        \ Rules define generic information about promo codes like expiration time,\
        \ start time, amount of discount being offered etc. For a given promo rule\
        \ you can define if it's a percentage discount or a fixed amount and if it\
        \ applies for the order as a whole or if it's per item or free shipping. You\
        \ can then create promo codes for this price rule. Promo codes contain the\
        \ actual code that is applied at checkout along with some other information.\
        \ Price Rules have one to many relationship with promo codes."
      paths:
      - "/ecommerce/stores/{store_id}/promo-rules"
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}"
      subResources:
      - ecommerce-promo-codes
    ecommerce-promo-codes:
      title: Promo Codes
      description: "Promo codes can be created for a given price rule. All the promo\
        \ codes under a price rule share the generic information defined for that\
        \ rule like the amount, type, expiration date etc. Promo code defines the\
        \ more specific information about a promo code like the actual code, redemption_url,\
        \ usage_count, etc that's unique to a code. Promo Code must be defined under\
        \ a promo rule."
      paths:
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes"
      - "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}"
    ecommerce-orders:
      title: Orders
      description: "Orders represent successful e-commerce transactions, and this\
        \ data can be used to provide more detailed campaign reports, track sales,\
        \ and personalize emails to your targeted consumers, and view other e-commerce\
        \ data in your Mailchimp account."
      paths:
      - /ecommerce/orders
      - "/ecommerce/stores/{store_id}/orders"
      - "/ecommerce/stores/{store_id}/orders/{order_id}"
      subResources:
      - ecommerce-order-lines
    ecommerce-order-lines:
      title: Order Lines
      description: "Each Order contains one or more Order Lines, which represent a\
        \ specific Product Variant that a Customer purchases."
      paths:
      - "/ecommerce/stores/{store_id}/orders/{order_id}/lines"
      - "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}"
    ecommerce-products:
      title: Products
      description: E-commerce items for sale in your store need to be created as Products
        so you can add the items to a Cart or an Order. Each Product requires at least
        one Product Variant.
      paths:
      - "/ecommerce/stores/{store_id}/products"
      - "/ecommerce/stores/{store_id}/products/{product_id}"
      subResources:
      - ecommerce-product-variants
      - ecommerce-product-images
    ecommerce-product-variants:
      title: Product Variants
      description: "A Product Variant represents a specific item for purchase, and\
        \ is contained within a parent Product. At least one Product Variant is required\
        \ for each Product."
      paths:
      - "/ecommerce/stores/{store_id}/products/{product_id}/variants"
      - "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}"
    ecommerce-product-images:
      title: Product Images
      description: A Product Image represents a specific product image.
      paths:
      - "/ecommerce/stores/{store_id}/products/{product_id}/images"
      - "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}"
    ecommerce-carts:
      title: Carts
      description: "Use Carts to represent unfinished e-commerce transactions. This\
        \ can be used to create an Abandoned Cart workflow, or to save a consumer’\
        s shopping cart pending a successful Order."
      paths:
      - "/ecommerce/stores/{store_id}/carts"
      - "/ecommerce/stores/{store_id}/carts/{cart_id}"
      subResources:
      - ecommerce-cart-lines
    ecommerce-cart-lines:
      title: Cart Lines
      description: "Each Cart contains one or more Cart Lines, which represent a specific\
        \ Product Variant that a Customer has added to their shopping cart."
      paths:
      - "/ecommerce/stores/{store_id}/carts/{cart_id}/lines"
      - "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}"
    facebook-ads:
      title: Facebook Ads
      description: Get information about Facebook Ads.
      paths:
      - /facebook-ads
      - "/facebook-ads/{outreach_id}"
    ping:
      title: Ping
      description: A health check endpoint for Mailchimp API 3.0.
      paths:
      - /ping
    reporting:
      title: Reporting
      description: Reporting for various campaign types.
      paths: []
      subResources:
      - reporting-facebook-ads
      - reporting-google-ads
      - reporting-landing-pages
      - reporting-postcards
      - reporting-social-posts
      - reporting-surveys
      - reporting-websites
    reporting-facebook-ads:
      title: Facebook Ads
      description: 'Get information about Facebook Ad reports. '
      paths:
      - /reporting/facebook-ads
      - "/reporting/facebook-ads/{outreach_id}"
      - "/reporting/facebook-ads/{outreach_id}/ecommerce-product-activity"
    reporting-landing-pages:
      title: Landing Pages
      description: Get information about Landing Page reports.
      paths:
      - /reporting/landing-pages
      - "/reporting/landing-pages/{outreach_id}"
    reporting-surveys:
      title: Surveys
      description: Survey reports
      paths:
      - /reporting/surveys
      - "/reporting/surveys/{outreach_id}"
      subResources:
      - reporting-surveys-questions
      - reporting-surveys-responses
    reporting-surveys-questions:
      title: Survey Questions
      description: Survey question reports
      paths:
      - "/reporting/surveys/{outreach_id}/questions"
      - "/reporting/surveys/{outreach_id}/questions/{question_id}"
      subResources:
      - reporting-surveys-questions-answers
    reporting-surveys-questions-answers:
      title: Survey Question Answers
      description: Survey question answers
      paths:
      - "/reporting/surveys/{outreach_id}/questions/{question_id}/answers"
    reporting-surveys-responses:
      title: Survey Responses
      description: Survey response reports
      paths:
      - "/reporting/surveys/{outreach_id}/responses"
      - "/reporting/surveys/{outreach_id}/responses/{response_id}"
    search-campaigns:
      title: Search Campaigns
      description: Search all of an account's campaigns for the specified query terms.
      paths:
      - /search-campaigns
    search-members:
      title: Search Members
      description: Search the account or a specific list for members that match the
        specified query terms.
      paths:
      - /search-members
    verified-domains:
      x-hidden: false
      title: Verified Domains
      description: Manage the domains on your account that can be used for sending
        email campaigns.
      paths:
      - /verified-domains
      - "/verified-domains/{domain_name}"
      - "/verified-domains/{domain_name}/actions/verify"
      subresources: []
x-original-swagger-version: "2.0"
